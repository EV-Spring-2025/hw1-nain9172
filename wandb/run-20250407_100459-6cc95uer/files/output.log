Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:63: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with autocast():
/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([16637])) that is different to the input size (torch.Size([16637, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 1/10000 [00:00<2:20:44,  1.18it/s, total_loss=0.526, l1_loss=0.397, dssim_loss=0.297, depth_loss=0.895, psnr=7.45]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28081])) that is different to the input size (torch.Size([28081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 2/10000 [00:01<2:06:05,  1.32it/s, total_loss=0.554, l1_loss=0.408, dssim_loss=0.325, depth_loss=0.977, psnr=6.96]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25025])) that is different to the input size (torch.Size([25025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 3/10000 [00:02<1:58:48,  1.40it/s, total_loss=0.501, l1_loss=0.394, dssim_loss=0.307, depth_loss=0.634, psnr=7.51]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22757])) that is different to the input size (torch.Size([22757, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 4/10000 [00:02<1:56:23,  1.43it/s, total_loss=0.622, l1_loss=0.447, dssim_loss=0.394, depth_loss=1.06, psnr=6.34]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25071])) that is different to the input size (torch.Size([25071, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 5/10000 [00:03<1:53:55,  1.46it/s, total_loss=0.426, l1_loss=0.335, dssim_loss=0.234, depth_loss=0.639, psnr=8.89]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27129])) that is different to the input size (torch.Size([27129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 6/10000 [00:04<1:55:14,  1.45it/s, total_loss=0.429, l1_loss=0.337, dssim_loss=0.235, depth_loss=0.647, psnr=8.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26601])) that is different to the input size (torch.Size([26601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 7/10000 [00:04<1:55:50,  1.44it/s, total_loss=0.371, l1_loss=0.289, dssim_loss=0.19, depth_loss=0.634, psnr=9.84]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26859])) that is different to the input size (torch.Size([26859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 8/10000 [00:05<1:56:08,  1.43it/s, total_loss=0.402, l1_loss=0.299, dssim_loss=0.191, depth_loss=0.862, psnr=9.21]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23496])) that is different to the input size (torch.Size([23496, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 9/10000 [00:06<1:55:53,  1.44it/s, total_loss=0.424, l1_loss=0.33, dssim_loss=0.217, depth_loss=0.726, psnr=8.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21349])) that is different to the input size (torch.Size([21349, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 10/10000 [00:06<1:53:58,  1.46it/s, total_loss=0.479, l1_loss=0.35, dssim_loss=0.245, depth_loss=1.01, psnr=8.37]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20966])) that is different to the input size (torch.Size([20966, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 11/10000 [00:07<1:53:29,  1.47it/s, total_loss=0.43, l1_loss=0.314, dssim_loss=0.215, depth_loss=0.925, psnr=8.93]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27213])) that is different to the input size (torch.Size([27213, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 12/10000 [00:08<1:54:04,  1.46it/s, total_loss=0.338, l1_loss=0.241, dssim_loss=0.142, depth_loss=0.881, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28432])) that is different to the input size (torch.Size([28432, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 13/10000 [00:09<2:06:26,  1.32it/s, total_loss=0.555, l1_loss=0.407, dssim_loss=0.346, depth_loss=0.907, psnr=7.09]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20785])) that is different to the input size (torch.Size([20785, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 14/10000 [00:09<2:01:28,  1.37it/s, total_loss=0.634, l1_loss=0.453, dssim_loss=0.397, depth_loss=1.12, psnr=6.31]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23345])) that is different to the input size (torch.Size([23345, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 15/10000 [00:10<1:58:33,  1.40it/s, total_loss=0.499, l1_loss=0.36, dssim_loss=0.283, depth_loss=0.976, psnr=7.91]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27997])) that is different to the input size (torch.Size([27997, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 16/10000 [00:11<1:58:20,  1.41it/s, total_loss=0.651, l1_loss=0.477, dssim_loss=0.461, depth_loss=0.849, psnr=5.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27939])) that is different to the input size (torch.Size([27939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 17/10000 [00:12<1:58:15,  1.41it/s, total_loss=0.625, l1_loss=0.46, dssim_loss=0.432, depth_loss=0.842, psnr=5.98]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26280])) that is different to the input size (torch.Size([26280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 18/10000 [00:12<1:57:15,  1.42it/s, total_loss=0.38, l1_loss=0.307, dssim_loss=0.18, depth_loss=0.621, psnr=7.64]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26891])) that is different to the input size (torch.Size([26891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 19/10000 [00:13<1:57:23,  1.42it/s, total_loss=0.365, l1_loss=0.292, dssim_loss=0.171, depth_loss=0.632, psnr=8.17]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20945])) that is different to the input size (torch.Size([20945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 20/10000 [00:14<1:54:43,  1.45it/s, total_loss=0.574, l1_loss=0.413, dssim_loss=0.344, depth_loss=1.06, psnr=7.08]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26133])) that is different to the input size (torch.Size([26133, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 21/10000 [00:14<1:53:55,  1.46it/s, total_loss=0.434, l1_loss=0.322, dssim_loss=0.217, depth_loss=0.888, psnr=9.03]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23965])) that is different to the input size (torch.Size([23965, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 22/10000 [00:15<1:53:40,  1.46it/s, total_loss=0.433, l1_loss=0.319, dssim_loss=0.227, depth_loss=0.87, psnr=8.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22613])) that is different to the input size (torch.Size([22613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 23/10000 [00:16<1:54:40,  1.45it/s, total_loss=0.282, l1_loss=0.205, dssim_loss=0.119, depth_loss=0.707, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20692])) that is different to the input size (torch.Size([20692, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 24/10000 [00:16<1:54:05,  1.46it/s, total_loss=0.34, l1_loss=0.232, dssim_loss=0.164, depth_loss=0.893, psnr=9.64]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28205])) that is different to the input size (torch.Size([28205, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 25/10000 [00:17<1:55:27,  1.44it/s, total_loss=0.39, l1_loss=0.28, dssim_loss=0.181, depth_loss=0.936, psnr=9.99]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([17918])) that is different to the input size (torch.Size([17918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 26/10000 [00:18<1:55:02,  1.45it/s, total_loss=0.439, l1_loss=0.321, dssim_loss=0.232, depth_loss=0.896, psnr=8.78]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([17938])) that is different to the input size (torch.Size([17938, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 27/10000 [00:18<1:54:25,  1.45it/s, total_loss=0.324, l1_loss=0.218, dssim_loss=0.153, depth_loss=0.88, psnr=9.62]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27564])) that is different to the input size (torch.Size([27564, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 28/10000 [00:19<1:54:37,  1.45it/s, total_loss=0.291, l1_loss=0.196, dssim_loss=0.111, depth_loss=0.898, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([15961])) that is different to the input size (torch.Size([15961, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 29/10000 [00:20<1:53:40,  1.46it/s, total_loss=0.304, l1_loss=0.198, dssim_loss=0.142, depth_loss=0.885, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23953])) that is different to the input size (torch.Size([23953, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 30/10000 [00:20<1:53:26,  1.46it/s, total_loss=0.343, l1_loss=0.236, dssim_loss=0.165, depth_loss=0.88, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23353])) that is different to the input size (torch.Size([23353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 31/10000 [00:21<1:52:52,  1.47it/s, total_loss=0.379, l1_loss=0.244, dssim_loss=0.146, depth_loss=1.25, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28740])) that is different to the input size (torch.Size([28740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 33/10000 [00:23<2:00:32,  1.38it/s, total_loss=0.318, l1_loss=0.215, dssim_loss=0.15, depth_loss=0.859, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25095])) that is different to the input size (torch.Size([25095, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 34/10000 [00:23<1:58:05,  1.41it/s, total_loss=0.402, l1_loss=0.306, dssim_loss=0.238, depth_loss=0.622, psnr=8.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21530])) that is different to the input size (torch.Size([21530, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 35/10000 [00:24<1:54:51,  1.45it/s, total_loss=0.409, l1_loss=0.278, dssim_loss=0.171, depth_loss=1.19, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21399])) that is different to the input size (torch.Size([21399, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 36/10000 [00:25<1:53:22,  1.46it/s, total_loss=0.494, l1_loss=0.36, dssim_loss=0.286, depth_loss=0.925, psnr=8.06]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23082])) that is different to the input size (torch.Size([23082, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 37/10000 [00:25<1:54:31,  1.45it/s, total_loss=0.24, l1_loss=0.162, dssim_loss=0.096, depth_loss=0.72, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28425])) that is different to the input size (torch.Size([28425, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 38/10000 [00:26<1:54:42,  1.45it/s, total_loss=0.296, l1_loss=0.188, dssim_loss=0.114, depth_loss=1, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23740])) that is different to the input size (torch.Size([23740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 39/10000 [00:27<1:53:50,  1.46it/s, total_loss=0.278, l1_loss=0.191, dssim_loss=0.108, depth_loss=0.823, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([17288])) that is different to the input size (torch.Size([17288, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 40/10000 [00:27<1:53:25,  1.46it/s, total_loss=0.292, l1_loss=0.183, dssim_loss=0.137, depth_loss=0.904, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27915])) that is different to the input size (torch.Size([27915, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 41/10000 [00:28<1:53:46,  1.46it/s, total_loss=0.306, l1_loss=0.217, dssim_loss=0.141, depth_loss=0.764, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22842])) that is different to the input size (torch.Size([22842, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 42/10000 [00:29<1:54:03,  1.46it/s, total_loss=0.227, l1_loss=0.152, dssim_loss=0.089, depth_loss=0.694, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([17252])) that is different to the input size (torch.Size([17252, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 44/10000 [00:30<1:53:27,  1.46it/s, total_loss=0.372, l1_loss=0.28, dssim_loss=0.218, depth_loss=0.612, psnr=9.39]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27747])) that is different to the input size (torch.Size([27747, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 46/10000 [00:32<1:53:13,  1.47it/s, total_loss=0.297, l1_loss=0.223, dssim_loss=0.143, depth_loss=0.619, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28704])) that is different to the input size (torch.Size([28704, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 47/10000 [00:32<1:54:17,  1.45it/s, total_loss=0.381, l1_loss=0.273, dssim_loss=0.184, depth_loss=0.883, psnr=8.51]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28092])) that is different to the input size (torch.Size([28092, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 48/10000 [00:33<1:55:26,  1.44it/s, total_loss=0.304, l1_loss=0.202, dssim_loss=0.13, depth_loss=0.908, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22782])) that is different to the input size (torch.Size([22782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 49/10000 [00:34<1:55:19,  1.44it/s, total_loss=0.263, l1_loss=0.168, dssim_loss=0.108, depth_loss=0.855, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24384])) that is different to the input size (torch.Size([24384, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 50/10000 [00:34<1:56:03,  1.43it/s, total_loss=0.265, l1_loss=0.166, dssim_loss=0.102, depth_loss=0.914, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22443])) that is different to the input size (torch.Size([22443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                              | 51/10000 [00:35<1:54:05,  1.45it/s, total_loss=0.364, l1_loss=0.224, dssim_loss=0.13, depth_loss=1.33, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23172])) that is different to the input size (torch.Size([23172, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                              | 53/10000 [00:36<1:54:27,  1.45it/s, total_loss=0.33, l1_loss=0.22, dssim_loss=0.165, depth_loss=0.881, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28918])) that is different to the input size (torch.Size([28918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                            | 54/10000 [00:37<2:08:01,  1.29it/s, total_loss=0.373, l1_loss=0.262, dssim_loss=0.191, depth_loss=0.875, psnr=8.94]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([18927])) that is different to the input size (torch.Size([18927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 55/10000 [00:38<2:03:24,  1.34it/s, total_loss=0.348, l1_loss=0.236, dssim_loss=0.181, depth_loss=0.868, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28439])) that is different to the input size (torch.Size([28439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 57/10000 [00:39<2:00:10,  1.38it/s, total_loss=0.384, l1_loss=0.271, dssim_loss=0.219, depth_loss=0.788, psnr=9.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21993])) that is different to the input size (torch.Size([21993, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 60/10000 [00:42<1:57:10,  1.41it/s, total_loss=0.264, l1_loss=0.188, dssim_loss=0.129, depth_loss=0.624, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21024])) that is different to the input size (torch.Size([21024, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                  | 62/10000 [00:43<1:53:38,  1.46it/s, total_loss=0.3, l1_loss=0.22, dssim_loss=0.16, depth_loss=0.602, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27979])) that is different to the input size (torch.Size([27979, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 63/10000 [00:44<1:54:12,  1.45it/s, total_loss=0.271, l1_loss=0.175, dssim_loss=0.12, depth_loss=0.824, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20855])) that is different to the input size (torch.Size([20855, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 64/10000 [00:44<1:52:20,  1.47it/s, total_loss=0.388, l1_loss=0.253, dssim_loss=0.199, depth_loss=1.06, psnr=9.59]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28569])) that is different to the input size (torch.Size([28569, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 65/10000 [00:45<1:53:17,  1.46it/s, total_loss=0.272, l1_loss=0.163, dssim_loss=0.112, depth_loss=0.967, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22984])) that is different to the input size (torch.Size([22984, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 67/10000 [00:46<1:52:42,  1.47it/s, total_loss=0.274, l1_loss=0.167, dssim_loss=0.125, depth_loss=0.902, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27596])) that is different to the input size (torch.Size([27596, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 68/10000 [00:47<1:52:54,  1.47it/s, total_loss=0.247, l1_loss=0.163, dssim_loss=0.124, depth_loss=0.673, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24171])) that is different to the input size (torch.Size([24171, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 69/10000 [00:48<1:54:25,  1.45it/s, total_loss=0.224, l1_loss=0.135, dssim_loss=0.087, depth_loss=0.813, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25044])) that is different to the input size (torch.Size([25044, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 70/10000 [00:48<1:53:03,  1.46it/s, total_loss=0.265, l1_loss=0.185, dssim_loss=0.142, depth_loss=0.598, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21114])) that is different to the input size (torch.Size([21114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 71/10000 [00:49<1:51:59,  1.48it/s, total_loss=0.373, l1_loss=0.261, dssim_loss=0.203, depth_loss=0.832, psnr=9.01]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20321])) that is different to the input size (torch.Size([20321, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 72/10000 [00:50<1:52:03,  1.48it/s, total_loss=0.301, l1_loss=0.197, dssim_loss=0.138, depth_loss=0.88, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23560])) that is different to the input size (torch.Size([23560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 73/10000 [00:50<1:51:58,  1.48it/s, total_loss=0.29, l1_loss=0.163, dssim_loss=0.103, depth_loss=1.19, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28272])) that is different to the input size (torch.Size([28272, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 74/10000 [00:51<1:52:38,  1.47it/s, total_loss=0.288, l1_loss=0.182, dssim_loss=0.138, depth_loss=0.875, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28157])) that is different to the input size (torch.Size([28157, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 75/10000 [00:52<1:54:20,  1.45it/s, total_loss=0.352, l1_loss=0.241, dssim_loss=0.196, depth_loss=0.806, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21354])) that is different to the input size (torch.Size([21354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 77/10000 [00:53<1:53:37,  1.46it/s, total_loss=0.244, l1_loss=0.15, dssim_loss=0.093, depth_loss=0.869, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([18481])) that is different to the input size (torch.Size([18481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 78/10000 [00:54<1:53:21,  1.46it/s, total_loss=0.276, l1_loss=0.173, dssim_loss=0.129, depth_loss=0.864, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25410])) that is different to the input size (torch.Size([25410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 79/10000 [00:55<1:54:17,  1.45it/s, total_loss=0.212, l1_loss=0.131, dssim_loss=0.08, depth_loss=0.756, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22251])) that is different to the input size (torch.Size([22251, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 80/10000 [00:55<1:54:24,  1.45it/s, total_loss=0.201, l1_loss=0.124, dssim_loss=0.081, depth_loss=0.696, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22348])) that is different to the input size (torch.Size([22348, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 81/10000 [00:56<1:54:30,  1.44it/s, total_loss=0.192, l1_loss=0.116, dssim_loss=0.075, depth_loss=0.687, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24336])) that is different to the input size (torch.Size([24336, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 82/10000 [00:57<1:55:34,  1.43it/s, total_loss=0.221, l1_loss=0.127, dssim_loss=0.085, depth_loss=0.851, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23797])) that is different to the input size (torch.Size([23797, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 83/10000 [00:57<1:54:17,  1.45it/s, total_loss=0.296, l1_loss=0.186, dssim_loss=0.142, depth_loss=0.906, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21467])) that is different to the input size (torch.Size([21467, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 84/10000 [00:58<1:52:15,  1.47it/s, total_loss=0.34, l1_loss=0.207, dssim_loss=0.131, depth_loss=1.23, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28594])) that is different to the input size (torch.Size([28594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 85/10000 [00:59<1:53:26,  1.46it/s, total_loss=0.289, l1_loss=0.179, dssim_loss=0.145, depth_loss=0.875, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25088])) that is different to the input size (torch.Size([25088, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 86/10000 [00:59<1:52:03,  1.47it/s, total_loss=0.241, l1_loss=0.162, dssim_loss=0.128, depth_loss=0.601, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25262])) that is different to the input size (torch.Size([25262, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 87/10000 [01:00<1:52:13,  1.47it/s, total_loss=0.24, l1_loss=0.163, dssim_loss=0.123, depth_loss=0.6, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25582])) that is different to the input size (torch.Size([25582, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 88/10000 [01:01<1:52:25,  1.47it/s, total_loss=0.236, l1_loss=0.159, dssim_loss=0.122, depth_loss=0.603, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28237])) that is different to the input size (torch.Size([28237, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 89/10000 [01:01<1:54:10,  1.45it/s, total_loss=0.326, l1_loss=0.216, dssim_loss=0.181, depth_loss=0.808, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24393])) that is different to the input size (torch.Size([24393, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 90/10000 [01:02<1:53:35,  1.45it/s, total_loss=0.227, l1_loss=0.134, dssim_loss=0.092, depth_loss=0.824, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20766])) that is different to the input size (torch.Size([20766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 92/10000 [01:03<1:51:17,  1.48it/s, total_loss=0.341, l1_loss=0.208, dssim_loss=0.174, depth_loss=1.05, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28631])) that is different to the input size (torch.Size([28631, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 93/10000 [01:04<1:51:46,  1.48it/s, total_loss=0.261, l1_loss=0.15, dssim_loss=0.105, depth_loss=0.994, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22124])) that is different to the input size (torch.Size([22124, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 96/10000 [01:06<1:54:51,  1.44it/s, total_loss=0.267, l1_loss=0.166, dssim_loss=0.113, depth_loss=0.889, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25074])) that is different to the input size (torch.Size([25074, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 97/10000 [01:07<1:53:06,  1.46it/s, total_loss=0.237, l1_loss=0.162, dssim_loss=0.123, depth_loss=0.587, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22010])) that is different to the input size (torch.Size([22010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 99/10000 [01:08<1:52:02,  1.47it/s, total_loss=0.266, l1_loss=0.162, dssim_loss=0.126, depth_loss=0.859, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22297])) that is different to the input size (torch.Size([22297, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 101/10000 [01:10<1:52:44,  1.46it/s, total_loss=0.286, l1_loss=0.176, dssim_loss=0.131, depth_loss=0.924, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27982])) that is different to the input size (torch.Size([27982, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 104/10000 [01:12<1:50:28,  1.49it/s, total_loss=0.331, l1_loss=0.199, dssim_loss=0.168, depth_loss=1.05, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20829])) that is different to the input size (torch.Size([20829, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 105/10000 [01:12<1:49:45,  1.50it/s, total_loss=0.324, l1_loss=0.189, dssim_loss=0.165, depth_loss=1.07, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25049])) that is different to the input size (torch.Size([25049, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 108/10000 [01:14<1:53:07,  1.46it/s, total_loss=0.25, l1_loss=0.145, dssim_loss=0.107, depth_loss=0.905, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25931])) that is different to the input size (torch.Size([25931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 109/10000 [01:15<1:53:04,  1.46it/s, total_loss=0.224, l1_loss=0.146, dssim_loss=0.119, depth_loss=0.603, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20609])) that is different to the input size (torch.Size([20609, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 111/10000 [01:16<1:51:01,  1.48it/s, total_loss=0.337, l1_loss=0.205, dssim_loss=0.163, depth_loss=1.08, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28476])) that is different to the input size (torch.Size([28476, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 112/10000 [01:17<1:53:12,  1.46it/s, total_loss=0.308, l1_loss=0.198, dssim_loss=0.174, depth_loss=0.798, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24002])) that is different to the input size (torch.Size([24002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 116/10000 [01:20<1:54:55,  1.43it/s, total_loss=0.291, l1_loss=0.18, dssim_loss=0.168, depth_loss=0.796, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28328])) that is different to the input size (torch.Size([28328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 118/10000 [01:21<1:54:21,  1.44it/s, total_loss=0.293, l1_loss=0.191, dssim_loss=0.139, depth_loss=0.849, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27836])) that is different to the input size (torch.Size([27836, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 119/10000 [01:22<1:54:08,  1.44it/s, total_loss=0.237, l1_loss=0.149, dssim_loss=0.114, depth_loss=0.716, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20996])) that is different to the input size (torch.Size([20996, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 121/10000 [01:23<1:53:41,  1.45it/s, total_loss=0.223, l1_loss=0.143, dssim_loss=0.116, depth_loss=0.619, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28518])) that is different to the input size (torch.Size([28518, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 123/10000 [01:25<1:53:26,  1.45it/s, total_loss=0.269, l1_loss=0.162, dssim_loss=0.126, depth_loss=0.886, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21229])) that is different to the input size (torch.Size([21229, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 126/10000 [01:27<1:52:55,  1.46it/s, total_loss=0.212, l1_loss=0.122, dssim_loss=0.077, depth_loss=0.833, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24163])) that is different to the input size (torch.Size([24163, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 128/10000 [01:28<1:51:54,  1.47it/s, total_loss=0.312, l1_loss=0.179, dssim_loss=0.153, depth_loss=1.07, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22809])) that is different to the input size (torch.Size([22809, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 131/10000 [01:30<1:51:15,  1.48it/s, total_loss=0.256, l1_loss=0.151, dssim_loss=0.127, depth_loss=0.844, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23064])) that is different to the input size (torch.Size([23064, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 132/10000 [01:31<1:51:03,  1.48it/s, total_loss=0.2, l1_loss=0.119, dssim_loss=0.076, depth_loss=0.749, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25986])) that is different to the input size (torch.Size([25986, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 133/10000 [01:31<1:52:44,  1.46it/s, total_loss=0.197, l1_loss=0.115, dssim_loss=0.072, depth_loss=0.764, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21527])) that is different to the input size (torch.Size([21527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 134/10000 [01:32<1:51:14,  1.48it/s, total_loss=0.277, l1_loss=0.142, dssim_loss=0.096, depth_loss=1.25, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21318])) that is different to the input size (torch.Size([21318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 140/10000 [01:36<1:52:56,  1.46it/s, total_loss=0.269, l1_loss=0.158, dssim_loss=0.145, depth_loss=0.85, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21317])) that is different to the input size (torch.Size([21317, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 141/10000 [01:37<1:51:11,  1.48it/s, total_loss=0.297, l1_loss=0.163, dssim_loss=0.111, depth_loss=1.22, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([18930])) that is different to the input size (torch.Size([18930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                               | 144/10000 [01:39<1:49:52,  1.50it/s, total_loss=0.293, l1_loss=0.166, dssim_loss=0.149, depth_loss=1, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21116])) that is different to the input size (torch.Size([21116, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 145/10000 [01:40<1:49:03,  1.51it/s, total_loss=0.294, l1_loss=0.157, dssim_loss=0.105, depth_loss=1.27, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27151])) that is different to the input size (torch.Size([27151, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 150/10000 [01:43<1:51:22,  1.47it/s, total_loss=0.266, l1_loss=0.138, dssim_loss=0.091, depth_loss=1.19, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21013])) that is different to the input size (torch.Size([21013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 151/10000 [01:44<1:50:04,  1.49it/s, total_loss=0.275, l1_loss=0.14, dssim_loss=0.094, depth_loss=1.25, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28725])) that is different to the input size (torch.Size([28725, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 156/10000 [01:47<1:52:10,  1.46it/s, total_loss=0.226, l1_loss=0.138, dssim_loss=0.111, depth_loss=0.713, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26610])) that is different to the input size (torch.Size([26610, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 158/10000 [01:48<1:51:50,  1.47it/s, total_loss=0.22, l1_loss=0.132, dssim_loss=0.109, depth_loss=0.712, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28841])) that is different to the input size (torch.Size([28841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 160/10000 [01:50<1:51:50,  1.47it/s, total_loss=0.281, l1_loss=0.144, dssim_loss=0.101, depth_loss=1.26, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23593])) that is different to the input size (torch.Size([23593, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 161/10000 [01:50<1:51:15,  1.47it/s, total_loss=0.277, l1_loss=0.169, dssim_loss=0.134, depth_loss=0.884, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27841])) that is different to the input size (torch.Size([27841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 162/10000 [01:51<1:52:11,  1.46it/s, total_loss=0.216, l1_loss=0.121, dssim_loss=0.08, depth_loss=0.865, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22729])) that is different to the input size (torch.Size([22729, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 162/10000 [01:52<1:53:39,  1.44it/s, total_loss=0.216, l1_loss=0.121, dssim_loss=0.08, depth_loss=0.865, psnr=13.9]
Traceback (most recent call last):
  File "/home/ryan910702/hw1-nain9172/run.py", line 53, in <module>
    trainer.train()
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 119, in train
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 70, in train_step
    depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
