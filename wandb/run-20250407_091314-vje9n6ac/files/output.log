Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19411])) that is different to the input size (torch.Size([19411, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 1/10000 [00:00<1:19:58,  2.08it/s, total_loss=0.42, l1_loss=0.384, dssim_loss=0.283, depth_loss=1.16, psnr=7.78]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26461])) that is different to the input size (torch.Size([26461, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 2/10000 [00:00<1:12:56,  2.28it/s, total_loss=0.388, l1_loss=0.359, dssim_loss=0.251, depth_loss=0.969, psnr=8.04]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28841])) that is different to the input size (torch.Size([28841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 3/10000 [00:01<1:25:28,  1.95it/s, total_loss=0.443, l1_loss=0.391, dssim_loss=0.324, depth_loss=0.899, psnr=7.47]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20692])) that is different to the input size (torch.Size([20692, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 4/10000 [00:01<1:17:15,  2.16it/s, total_loss=0.324, l1_loss=0.304, dssim_loss=0.202, depth_loss=1.22, psnr=9.32]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25044])) that is different to the input size (torch.Size([25044, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 5/10000 [00:02<1:14:02,  2.25it/s, total_loss=0.463, l1_loss=0.411, dssim_loss=0.336, depth_loss=0.62, psnr=7.09]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22538])) that is different to the input size (torch.Size([22538, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 6/10000 [00:02<1:11:20,  2.33it/s, total_loss=0.28, l1_loss=0.271, dssim_loss=0.159, depth_loss=0.719, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28930])) that is different to the input size (torch.Size([28930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 8/10000 [00:03<1:16:59,  2.16it/s, total_loss=0.237, l1_loss=0.231, dssim_loss=0.13, depth_loss=0.967, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23082])) that is different to the input size (torch.Size([23082, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 9/10000 [00:04<1:13:38,  2.26it/s, total_loss=0.212, l1_loss=0.208, dssim_loss=0.114, depth_loss=0.883, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25013])) that is different to the input size (torch.Size([25013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 10/10000 [00:04<1:11:56,  2.31it/s, total_loss=0.352, l1_loss=0.323, dssim_loss=0.233, depth_loss=0.613, psnr=8.99]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22729])) that is different to the input size (torch.Size([22729, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 11/10000 [00:04<1:10:22,  2.37it/s, total_loss=0.198, l1_loss=0.193, dssim_loss=0.108, depth_loss=0.72, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25410])) that is different to the input size (torch.Size([25410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 12/10000 [00:05<1:09:15,  2.40it/s, total_loss=0.188, l1_loss=0.185, dssim_loss=0.1, depth_loss=0.919, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21148])) that is different to the input size (torch.Size([21148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 13/10000 [00:05<1:07:01,  2.48it/s, total_loss=0.388, l1_loss=0.363, dssim_loss=0.244, depth_loss=1.7, psnr=8.26]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23902])) that is different to the input size (torch.Size([23902, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 14/10000 [00:06<1:06:41,  2.50it/s, total_loss=0.338, l1_loss=0.315, dssim_loss=0.215, depth_loss=1.06, psnr=9.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28494])) that is different to the input size (torch.Size([28494, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 15/10000 [00:06<1:06:25,  2.51it/s, total_loss=0.253, l1_loss=0.232, dssim_loss=0.169, depth_loss=0.889, psnr=9.97]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25587])) that is different to the input size (torch.Size([25587, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 16/10000 [00:06<1:06:29,  2.50it/s, total_loss=0.207, l1_loss=0.197, dssim_loss=0.123, depth_loss=0.798, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19405])) that is different to the input size (torch.Size([19405, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 17/10000 [00:07<1:06:09,  2.51it/s, total_loss=0.349, l1_loss=0.324, dssim_loss=0.224, depth_loss=1.26, psnr=9.14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27999])) that is different to the input size (torch.Size([27999, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 18/10000 [00:07<1:05:41,  2.53it/s, total_loss=0.485, l1_loss=0.426, dssim_loss=0.362, depth_loss=0.906, psnr=6.69]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21960])) that is different to the input size (torch.Size([21960, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 20/10000 [00:08<1:04:44,  2.57it/s, total_loss=0.344, l1_loss=0.327, dssim_loss=0.205, depth_loss=1.7, psnr=9.05]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21555])) that is different to the input size (torch.Size([21555, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 21/10000 [00:08<1:04:19,  2.59it/s, total_loss=0.273, l1_loss=0.262, dssim_loss=0.158, depth_loss=1.38, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26133])) that is different to the input size (torch.Size([26133, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 22/10000 [00:09<1:04:54,  2.56it/s, total_loss=0.19, l1_loss=0.178, dssim_loss=0.118, depth_loss=0.815, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24171])) that is different to the input size (torch.Size([24171, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 23/10000 [00:09<1:05:32,  2.54it/s, total_loss=0.168, l1_loss=0.162, dssim_loss=0.096, depth_loss=1.01, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22443])) that is different to the input size (torch.Size([22443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 24/10000 [00:10<1:05:08,  2.55it/s, total_loss=0.288, l1_loss=0.278, dssim_loss=0.165, depth_loss=1.68, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21236])) that is different to the input size (torch.Size([21236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 25/10000 [00:10<1:05:08,  2.55it/s, total_loss=0.311, l1_loss=0.287, dssim_loss=0.203, depth_loss=1.41, psnr=9.47]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16637])) that is different to the input size (torch.Size([16637, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 26/10000 [00:10<1:05:23,  2.54it/s, total_loss=0.199, l1_loss=0.184, dssim_loss=0.129, depth_loss=1.16, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20609])) that is different to the input size (torch.Size([20609, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 27/10000 [00:11<1:05:21,  2.54it/s, total_loss=0.349, l1_loss=0.322, dssim_loss=0.229, depth_loss=1.1, psnr=9.17]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28063])) that is different to the input size (torch.Size([28063, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 28/10000 [00:11<1:05:04,  2.55it/s, total_loss=0.323, l1_loss=0.301, dssim_loss=0.206, depth_loss=0.943, psnr=9.29]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28476])) that is different to the input size (torch.Size([28476, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 29/10000 [00:11<1:06:17,  2.51it/s, total_loss=0.339, l1_loss=0.313, dssim_loss=0.221, depth_loss=0.875, psnr=7.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20930])) that is different to the input size (torch.Size([20930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 30/10000 [00:12<1:04:53,  2.56it/s, total_loss=0.253, l1_loss=0.246, dssim_loss=0.141, depth_loss=1.67, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27979])) that is different to the input size (torch.Size([27979, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 31/10000 [00:12<1:04:54,  2.56it/s, total_loss=0.285, l1_loss=0.267, dssim_loss=0.177, depth_loss=0.875, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23560])) that is different to the input size (torch.Size([23560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 32/10000 [00:13<1:05:11,  2.55it/s, total_loss=0.22, l1_loss=0.209, dssim_loss=0.133, depth_loss=1.49, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17288])) that is different to the input size (torch.Size([17288, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 33/10000 [00:13<1:05:33,  2.53it/s, total_loss=0.182, l1_loss=0.165, dssim_loss=0.124, depth_loss=1.17, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25931])) that is different to the input size (torch.Size([25931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 33/10000 [00:13<1:10:13,  2.37it/s, total_loss=0.182, l1_loss=0.165, dssim_loss=0.124, depth_loss=1.17, psnr=11.4]
Traceback (most recent call last):
  File "/home/ryan910702/hw1-nain9172/run.py", line 53, in <module>
    trainer.train()
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 122, in train
    outputs = self.train_step()
              ^^^^^^^^^^^^^^^^^
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 75, in train_step
    total_loss.backward()
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
