Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15606])) that is different to the input size (torch.Size([15606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 1/10000 [00:00<1:11:39,  2.33it/s, total_loss=0.523, l1_loss=0.451, dssim_loss=0.406, depth_loss=1.22, psnr=6.29]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19047])) that is different to the input size (torch.Size([19047, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 2/10000 [00:00<1:02:45,  2.66it/s, total_loss=0.487, l1_loss=0.425, dssim_loss=0.368, depth_loss=0.879, psnr=6.68]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16740])) that is different to the input size (torch.Size([16740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 3/10000 [00:01<59:09,  2.82it/s, total_loss=0.56, l1_loss=0.484, dssim_loss=0.432, depth_loss=0.788, psnr=5.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12671])) that is different to the input size (torch.Size([12671, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 4/10000 [00:01<57:09,  2.91it/s, total_loss=0.456, l1_loss=0.409, dssim_loss=0.322, depth_loss=1.08, psnr=7.18]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21083])) that is different to the input size (torch.Size([21083, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 5/10000 [00:01<56:53,  2.93it/s, total_loss=0.551, l1_loss=0.473, dssim_loss=0.431, depth_loss=1.22, psnr=5.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17632])) that is different to the input size (torch.Size([17632, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 6/10000 [00:02<56:23,  2.95it/s, total_loss=0.504, l1_loss=0.443, dssim_loss=0.373, depth_loss=1.33, psnr=6.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13568])) that is different to the input size (torch.Size([13568, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 7/10000 [00:02<55:38,  2.99it/s, total_loss=0.516, l1_loss=0.454, dssim_loss=0.381, depth_loss=0.981, psnr=6.29]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20236])) that is different to the input size (torch.Size([20236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 8/10000 [00:02<56:15,  2.96it/s, total_loss=0.463, l1_loss=0.411, dssim_loss=0.335, depth_loss=1.18, psnr=6.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20527])) that is different to the input size (torch.Size([20527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 9/10000 [00:03<56:41,  2.94it/s, total_loss=0.538, l1_loss=0.464, dssim_loss=0.419, depth_loss=0.948, psnr=5.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20634])) that is different to the input size (torch.Size([20634, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 10/10000 [00:03<56:50,  2.93it/s, total_loss=0.41, l1_loss=0.368, dssim_loss=0.289, depth_loss=1.21, psnr=7.44]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18667])) that is different to the input size (torch.Size([18667, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 11/10000 [00:03<56:55,  2.92it/s, total_loss=0.373, l1_loss=0.343, dssim_loss=0.248, depth_loss=1.01, psnr=7.99]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20294])) that is different to the input size (torch.Size([20294, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 12/10000 [00:04<57:21,  2.90it/s, total_loss=0.362, l1_loss=0.327, dssim_loss=0.252, depth_loss=0.9, psnr=8.17]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17741])) that is different to the input size (torch.Size([17741, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 13/10000 [00:04<56:44,  2.93it/s, total_loss=0.333, l1_loss=0.308, dssim_loss=0.216, depth_loss=1.08, psnr=8.59]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16227])) that is different to the input size (torch.Size([16227, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 14/10000 [00:04<56:21,  2.95it/s, total_loss=0.49, l1_loss=0.429, dssim_loss=0.366, depth_loss=1.12, psnr=6.76]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20363])) that is different to the input size (torch.Size([20363, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 15/10000 [00:05<56:33,  2.94it/s, total_loss=0.486, l1_loss=0.426, dssim_loss=0.362, depth_loss=0.836, psnr=6.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15313])) that is different to the input size (torch.Size([15313, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 16/10000 [00:05<56:28,  2.95it/s, total_loss=0.346, l1_loss=0.31, dssim_loss=0.246, depth_loss=1.18, psnr=8.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15792])) that is different to the input size (torch.Size([15792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 17/10000 [00:05<56:19,  2.95it/s, total_loss=0.471, l1_loss=0.421, dssim_loss=0.334, depth_loss=1.41, psnr=6.87]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20566])) that is different to the input size (torch.Size([20566, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 18/10000 [00:06<56:54,  2.92it/s, total_loss=0.363, l1_loss=0.325, dssim_loss=0.258, depth_loss=0.826, psnr=8.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18412])) that is different to the input size (torch.Size([18412, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 19/10000 [00:06<56:41,  2.93it/s, total_loss=0.362, l1_loss=0.325, dssim_loss=0.256, depth_loss=0.742, psnr=8.33]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16149])) that is different to the input size (torch.Size([16149, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 20/10000 [00:06<56:16,  2.96it/s, total_loss=0.308, l1_loss=0.29, dssim_loss=0.191, depth_loss=0.735, psnr=9.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17613])) that is different to the input size (torch.Size([17613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 22/10000 [00:07<56:10,  2.96it/s, total_loss=0.391, l1_loss=0.349, dssim_loss=0.279, depth_loss=0.894, psnr=8.06]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13931])) that is different to the input size (torch.Size([13931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                  | 23/10000 [00:07<55:33,  2.99it/s, total_loss=0.283, l1_loss=0.254, dssim_loss=0.2, depth_loss=1.14, psnr=9.39]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15524])) that is different to the input size (torch.Size([15524, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 25/10000 [00:08<56:00,  2.97it/s, total_loss=0.394, l1_loss=0.353, dssim_loss=0.279, depth_loss=1.01, psnr=7.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15598])) that is different to the input size (torch.Size([15598, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 26/10000 [00:08<55:49,  2.98it/s, total_loss=0.309, l1_loss=0.28, dssim_loss=0.211, depth_loss=1.16, psnr=9.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17532])) that is different to the input size (torch.Size([17532, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 28/10000 [00:09<56:17,  2.95it/s, total_loss=0.301, l1_loss=0.29, dssim_loss=0.172, depth_loss=1.15, psnr=8.71]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20457])) that is different to the input size (torch.Size([20457, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 29/10000 [00:09<56:43,  2.93it/s, total_loss=0.296, l1_loss=0.286, dssim_loss=0.169, depth_loss=1.16, psnr=8.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17573])) that is different to the input size (torch.Size([17573, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 30/10000 [00:10<56:16,  2.95it/s, total_loss=0.286, l1_loss=0.264, dssim_loss=0.188, depth_loss=0.97, psnr=9.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21254])) that is different to the input size (torch.Size([21254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 31/10000 [00:10<56:24,  2.95it/s, total_loss=0.324, l1_loss=0.299, dssim_loss=0.214, depth_loss=0.898, psnr=8.35]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21121])) that is different to the input size (torch.Size([21121, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 32/10000 [00:10<56:27,  2.94it/s, total_loss=0.309, l1_loss=0.286, dssim_loss=0.199, depth_loss=1.22, psnr=8.89]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17876])) that is different to the input size (torch.Size([17876, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 35/10000 [00:11<55:44,  2.98it/s, total_loss=0.265, l1_loss=0.249, dssim_loss=0.164, depth_loss=1.32, psnr=9.71]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11303])) that is different to the input size (torch.Size([11303, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 36/10000 [00:12<55:59,  2.97it/s, total_loss=0.3, l1_loss=0.279, dssim_loss=0.192, depth_loss=0.977, psnr=9.55]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21102])) that is different to the input size (torch.Size([21102, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 37/10000 [00:12<56:15,  2.95it/s, total_loss=0.276, l1_loss=0.259, dssim_loss=0.172, depth_loss=1.22, psnr=9.68]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15732])) that is different to the input size (torch.Size([15732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                 | 39/10000 [00:13<55:44,  2.98it/s, total_loss=0.25, l1_loss=0.223, dssim_loss=0.18, depth_loss=1.13, psnr=9.97]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20663])) that is different to the input size (torch.Size([20663, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 40/10000 [00:13<56:19,  2.95it/s, total_loss=0.306, l1_loss=0.281, dssim_loss=0.204, depth_loss=1.09, psnr=9.09]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15528])) that is different to the input size (torch.Size([15528, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 41/10000 [00:13<56:38,  2.93it/s, total_loss=0.267, l1_loss=0.239, dssim_loss=0.189, depth_loss=1.16, psnr=9.09]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13148])) that is different to the input size (torch.Size([13148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 42/10000 [00:14<55:57,  2.97it/s, total_loss=0.239, l1_loss=0.214, dssim_loss=0.17, depth_loss=1.08, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14586])) that is different to the input size (torch.Size([14586, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 43/10000 [00:14<55:41,  2.98it/s, total_loss=0.243, l1_loss=0.214, dssim_loss=0.179, depth_loss=1.16, psnr=9.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18352])) that is different to the input size (torch.Size([18352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 44/10000 [00:14<55:55,  2.97it/s, total_loss=0.235, l1_loss=0.227, dssim_loss=0.133, depth_loss=0.778, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17771])) that is different to the input size (torch.Size([17771, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 47/10000 [00:15<55:45,  2.98it/s, total_loss=0.218, l1_loss=0.21, dssim_loss=0.126, depth_loss=0.779, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18791])) that is different to the input size (torch.Size([18791, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 48/10000 [00:16<55:53,  2.97it/s, total_loss=0.422, l1_loss=0.367, dssim_loss=0.319, depth_loss=0.752, psnr=7.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16682])) that is different to the input size (torch.Size([16682, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                 | 49/10000 [00:16<55:53,  2.97it/s, total_loss=0.26, l1_loss=0.236, dssim_loss=0.18, depth_loss=1.06, psnr=9.78]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17429])) that is different to the input size (torch.Size([17429, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 50/10000 [00:16<56:09,  2.95it/s, total_loss=0.189, l1_loss=0.18, dssim_loss=0.112, depth_loss=0.749, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20391])) that is different to the input size (torch.Size([20391, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                               | 51/10000 [00:17<56:50,  2.92it/s, total_loss=0.296, l1_loss=0.268, dssim_loss=0.203, depth_loss=0.84, psnr=9.08]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11147])) that is different to the input size (torch.Size([11147, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                              | 52/10000 [00:17<56:28,  2.94it/s, total_loss=0.219, l1_loss=0.202, dssim_loss=0.145, depth_loss=0.948, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17575])) that is different to the input size (torch.Size([17575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 53/10000 [00:17<55:47,  2.97it/s, total_loss=0.217, l1_loss=0.201, dssim_loss=0.14, depth_loss=0.905, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18397])) that is different to the input size (torch.Size([18397, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 54/10000 [00:18<56:08,  2.95it/s, total_loss=0.388, l1_loss=0.352, dssim_loss=0.267, depth_loss=0.72, psnr=7.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18595])) that is different to the input size (torch.Size([18595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 55/10000 [00:18<55:57,  2.96it/s, total_loss=0.361, l1_loss=0.332, dssim_loss=0.239, depth_loss=0.795, psnr=7.77]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16490])) that is different to the input size (torch.Size([16490, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 56/10000 [00:18<55:48,  2.97it/s, total_loss=0.245, l1_loss=0.219, dssim_loss=0.175, depth_loss=1.08, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16449])) that is different to the input size (torch.Size([16449, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 57/10000 [00:19<56:18,  2.94it/s, total_loss=0.192, l1_loss=0.184, dssim_loss=0.112, depth_loss=0.748, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20943])) that is different to the input size (torch.Size([20943, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 61/10000 [00:20<55:52,  2.97it/s, total_loss=0.236, l1_loss=0.217, dssim_loss=0.156, depth_loss=1.21, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15299])) that is different to the input size (torch.Size([15299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                 | 62/10000 [00:21<55:41,  2.97it/s, total_loss=0.225, l1_loss=0.2, dssim_loss=0.162, depth_loss=1.15, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15375])) that is different to the input size (torch.Size([15375, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 63/10000 [00:21<55:29,  2.98it/s, total_loss=0.238, l1_loss=0.21, dssim_loss=0.174, depth_loss=1.18, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14595])) that is different to the input size (torch.Size([14595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 64/10000 [00:21<55:08,  3.00it/s, total_loss=0.331, l1_loss=0.304, dssim_loss=0.221, depth_loss=1.09, psnr=8.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19434])) that is different to the input size (torch.Size([19434, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 66/10000 [00:22<55:20,  2.99it/s, total_loss=0.283, l1_loss=0.268, dssim_loss=0.171, depth_loss=1.63, psnr=9.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16542])) that is different to the input size (torch.Size([16542, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 67/10000 [00:22<55:49,  2.97it/s, total_loss=0.171, l1_loss=0.164, dssim_loss=0.099, depth_loss=0.724, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18423])) that is different to the input size (torch.Size([18423, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 68/10000 [00:23<56:06,  2.95it/s, total_loss=0.299, l1_loss=0.275, dssim_loss=0.199, depth_loss=0.723, psnr=9.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21129])) that is different to the input size (torch.Size([21129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 69/10000 [00:23<56:18,  2.94it/s, total_loss=0.258, l1_loss=0.233, dssim_loss=0.179, depth_loss=0.886, psnr=9.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20290])) that is different to the input size (torch.Size([20290, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 70/10000 [00:23<56:47,  2.91it/s, total_loss=0.349, l1_loss=0.313, dssim_loss=0.245, depth_loss=0.849, psnr=8.37]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15383])) that is different to the input size (torch.Size([15383, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 72/10000 [00:24<56:28,  2.93it/s, total_loss=0.226, l1_loss=0.197, dssim_loss=0.171, depth_loss=1.16, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20183])) that is different to the input size (torch.Size([20183, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 73/10000 [00:24<56:59,  2.90it/s, total_loss=0.26, l1_loss=0.235, dssim_loss=0.181, depth_loss=0.864, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15636])) that is different to the input size (torch.Size([15636, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 76/10000 [00:25<56:24,  2.93it/s, total_loss=0.267, l1_loss=0.245, dssim_loss=0.177, depth_loss=0.721, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15407])) that is different to the input size (torch.Size([15407, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 77/10000 [00:26<55:56,  2.96it/s, total_loss=0.316, l1_loss=0.292, dssim_loss=0.207, depth_loss=1.23, psnr=9.14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15767])) that is different to the input size (torch.Size([15767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 81/10000 [00:27<55:58,  2.95it/s, total_loss=0.218, l1_loss=0.189, dssim_loss=0.167, depth_loss=1.17, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20763])) that is different to the input size (torch.Size([20763, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 83/10000 [00:28<55:44,  2.97it/s, total_loss=0.203, l1_loss=0.172, dssim_loss=0.164, depth_loss=1.17, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20624])) that is different to the input size (torch.Size([20624, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 84/10000 [00:28<56:00,  2.95it/s, total_loss=0.248, l1_loss=0.221, dssim_loss=0.179, depth_loss=0.793, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16140])) that is different to the input size (torch.Size([16140, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                | 85/10000 [00:28<55:47,  2.96it/s, total_loss=0.161, l1_loss=0.155, dssim_loss=0.093, depth_loss=0.742, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15435])) that is different to the input size (torch.Size([15435, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 86/10000 [00:29<55:50,  2.96it/s, total_loss=0.282, l1_loss=0.265, dssim_loss=0.177, depth_loss=1.57, psnr=9.71]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20935])) that is different to the input size (torch.Size([20935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 87/10000 [00:29<56:22,  2.93it/s, total_loss=0.198, l1_loss=0.175, dssim_loss=0.144, depth_loss=0.857, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19828])) that is different to the input size (torch.Size([19828, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 88/10000 [00:29<56:21,  2.93it/s, total_loss=0.179, l1_loss=0.164, dssim_loss=0.12, depth_loss=0.815, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19299])) that is different to the input size (torch.Size([19299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                | 90/10000 [00:30<56:05,  2.94it/s, total_loss=0.279, l1_loss=0.259, dssim_loss=0.18, depth_loss=1.52, psnr=9.54]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16468])) that is different to the input size (torch.Size([16468, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 91/10000 [00:30<55:41,  2.97it/s, total_loss=0.239, l1_loss=0.227, dssim_loss=0.146, depth_loss=1.58, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16994])) that is different to the input size (torch.Size([16994, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 92/10000 [00:31<55:44,  2.96it/s, total_loss=0.221, l1_loss=0.199, dssim_loss=0.154, depth_loss=1.03, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16859])) that is different to the input size (torch.Size([16859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 93/10000 [00:31<55:46,  2.96it/s, total_loss=0.218, l1_loss=0.195, dssim_loss=0.155, depth_loss=1.05, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15443])) that is different to the input size (torch.Size([15443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                | 94/10000 [00:31<55:36,  2.97it/s, total_loss=0.242, l1_loss=0.228, dssim_loss=0.15, depth_loss=1.61, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15594])) that is different to the input size (torch.Size([15594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 95/10000 [00:32<55:27,  2.98it/s, total_loss=0.258, l1_loss=0.238, dssim_loss=0.169, depth_loss=1.29, psnr=9.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18354])) that is different to the input size (torch.Size([18354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 96/10000 [00:32<55:34,  2.97it/s, total_loss=0.268, l1_loss=0.247, dssim_loss=0.176, depth_loss=0.737, psnr=9.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20867])) that is different to the input size (torch.Size([20867, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 98/10000 [00:33<55:58,  2.95it/s, total_loss=0.147, l1_loss=0.14, dssim_loss=0.087, depth_loss=0.726, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18372])) that is different to the input size (torch.Size([18372, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 100/10000 [00:33<55:25,  2.98it/s, total_loss=0.155, l1_loss=0.146, dssim_loss=0.097, depth_loss=0.782, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19807])) that is different to the input size (torch.Size([19807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 101/10000 [00:34<56:04,  2.94it/s, total_loss=0.232, l1_loss=0.208, dssim_loss=0.166, depth_loss=0.855, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17907])) that is different to the input size (torch.Size([17907, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 102/10000 [00:34<55:53,  2.95it/s, total_loss=0.18, l1_loss=0.173, dssim_loss=0.104, depth_loss=1.19, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13941])) that is different to the input size (torch.Size([13941, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                | 104/10000 [00:35<54:54,  3.00it/s, total_loss=0.2, l1_loss=0.174, dssim_loss=0.151, depth_loss=1.16, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21243])) that is different to the input size (torch.Size([21243, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 105/10000 [00:35<55:27,  2.97it/s, total_loss=0.222, l1_loss=0.197, dssim_loss=0.159, depth_loss=0.875, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20767])) that is different to the input size (torch.Size([20767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 107/10000 [00:36<56:49,  2.90it/s, total_loss=0.225, l1_loss=0.198, dssim_loss=0.166, depth_loss=0.844, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21204])) that is different to the input size (torch.Size([21204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 109/10000 [00:36<57:09,  2.88it/s, total_loss=0.222, l1_loss=0.195, dssim_loss=0.164, depth_loss=0.821, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17474])) that is different to the input size (torch.Size([17474, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 110/10000 [00:37<56:10,  2.93it/s, total_loss=0.168, l1_loss=0.154, dssim_loss=0.113, depth_loss=0.874, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17022])) that is different to the input size (torch.Size([17022, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 111/10000 [00:37<55:28,  2.97it/s, total_loss=0.154, l1_loss=0.142, dssim_loss=0.101, depth_loss=0.802, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15666])) that is different to the input size (torch.Size([15666, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 113/10000 [00:38<55:33,  2.97it/s, total_loss=0.211, l1_loss=0.189, dssim_loss=0.15, depth_loss=1.04, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19935])) that is different to the input size (torch.Size([19935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 115/10000 [00:38<56:07,  2.94it/s, total_loss=0.165, l1_loss=0.151, dssim_loss=0.112, depth_loss=0.818, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16231])) that is different to the input size (torch.Size([16231, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 116/10000 [00:39<55:59,  2.94it/s, total_loss=0.139, l1_loss=0.133, dssim_loss=0.082, depth_loss=0.734, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19770])) that is different to the input size (torch.Size([19770, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                | 118/10000 [00:40<56:07,  2.93it/s, total_loss=0.213, l1_loss=0.187, dssim_loss=0.159, depth_loss=1.16, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17134])) that is different to the input size (torch.Size([17134, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 119/10000 [00:40<55:38,  2.96it/s, total_loss=0.193, l1_loss=0.185, dssim_loss=0.114, depth_loss=1.43, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19579])) that is different to the input size (torch.Size([19579, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 122/10000 [00:41<55:11,  2.98it/s, total_loss=0.195, l1_loss=0.17, dssim_loss=0.148, depth_loss=1.15, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19561])) that is different to the input size (torch.Size([19561, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 123/10000 [00:41<55:26,  2.97it/s, total_loss=0.155, l1_loss=0.141, dssim_loss=0.105, depth_loss=0.812, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13554])) that is different to the input size (torch.Size([13554, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 124/10000 [00:42<54:52,  3.00it/s, total_loss=0.186, l1_loss=0.164, dssim_loss=0.137, depth_loss=1.09, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15705])) that is different to the input size (torch.Size([15705, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 126/10000 [00:42<55:26,  2.97it/s, total_loss=0.138, l1_loss=0.129, dssim_loss=0.086, depth_loss=0.737, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12215])) that is different to the input size (torch.Size([12215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                | 127/10000 [00:43<55:08,  2.98it/s, total_loss=0.168, l1_loss=0.15, dssim_loss=0.12, depth_loss=1.02, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11264])) that is different to the input size (torch.Size([11264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 128/10000 [00:43<54:58,  2.99it/s, total_loss=0.174, l1_loss=0.158, dssim_loss=0.12, depth_loss=0.898, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17255])) that is different to the input size (torch.Size([17255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 130/10000 [00:44<54:40,  3.01it/s, total_loss=0.201, l1_loss=0.175, dssim_loss=0.151, depth_loss=1.1, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19058])) that is different to the input size (torch.Size([19058, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                                | 132/10000 [00:44<55:05,  2.99it/s, total_loss=0.223, l1_loss=0.204, dssim_loss=0.15, depth_loss=1.3, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15531])) that is different to the input size (torch.Size([15531, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 134/10000 [00:45<55:24,  2.97it/s, total_loss=0.144, l1_loss=0.139, dssim_loss=0.081, depth_loss=1.04, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15219])) that is different to the input size (torch.Size([15219, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                                 | 135/10000 [00:45<55:20,  2.97it/s, total_loss=0.198, l1_loss=0.172, dssim_loss=0.152, depth_loss=1.2, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16387])) that is different to the input size (torch.Size([16387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 136/10000 [00:46<55:04,  2.99it/s, total_loss=0.137, l1_loss=0.129, dssim_loss=0.085, depth_loss=0.745, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14255])) that is different to the input size (torch.Size([14255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 147/10000 [00:49<55:33,  2.96it/s, total_loss=0.192, l1_loss=0.161, dssim_loss=0.158, depth_loss=1.16, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18562])) that is different to the input size (torch.Size([18562, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 149/10000 [00:50<55:37,  2.95it/s, total_loss=0.153, l1_loss=0.139, dssim_loss=0.105, depth_loss=0.812, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20081])) that is different to the input size (torch.Size([20081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                               | 150/10000 [00:50<56:15,  2.92it/s, total_loss=0.225, l1_loss=0.204, dssim_loss=0.154, depth_loss=0.8, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16357])) that is different to the input size (torch.Size([16357, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 153/10000 [00:51<55:11,  2.97it/s, total_loss=0.161, l1_loss=0.146, dssim_loss=0.111, depth_loss=0.907, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20477])) that is different to the input size (torch.Size([20477, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                              | 154/10000 [00:52<56:00,  2.93it/s, total_loss=0.206, l1_loss=0.18, dssim_loss=0.156, depth_loss=0.796, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20830])) that is different to the input size (torch.Size([20830, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                              | 156/10000 [00:52<55:15,  2.97it/s, total_loss=0.195, l1_loss=0.177, dssim_loss=0.133, depth_loss=1.01, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15798])) that is different to the input size (torch.Size([15798, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 162/10000 [00:54<55:45,  2.94it/s, total_loss=0.208, l1_loss=0.188, dssim_loss=0.144, depth_loss=0.799, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17822])) that is different to the input size (torch.Size([17822, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 165/10000 [00:55<54:56,  2.98it/s, total_loss=0.196, l1_loss=0.176, dssim_loss=0.139, depth_loss=0.966, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16728])) that is different to the input size (torch.Size([16728, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                               | 171/10000 [00:57<54:44,  2.99it/s, total_loss=0.191, l1_loss=0.172, dssim_loss=0.134, depth_loss=1.1, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19204])) that is different to the input size (torch.Size([19204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                                | 173/10000 [00:58<55:13,  2.97it/s, total_loss=0.219, l1_loss=0.204, dssim_loss=0.139, depth_loss=1.17, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16394])) that is different to the input size (torch.Size([16394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 175/10000 [00:59<56:05,  2.92it/s, total_loss=0.202, l1_loss=0.184, dssim_loss=0.136, depth_loss=0.777, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20866])) that is different to the input size (torch.Size([20866, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 176/10000 [00:59<56:09,  2.92it/s, total_loss=0.219, l1_loss=0.201, dssim_loss=0.145, depth_loss=1.11, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15164])) that is different to the input size (torch.Size([15164, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 181/10000 [01:01<55:30,  2.95it/s, total_loss=0.187, l1_loss=0.162, dssim_loss=0.144, depth_loss=1.14, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20877])) that is different to the input size (torch.Size([20877, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 183/10000 [01:01<55:07,  2.97it/s, total_loss=0.164, l1_loss=0.147, dssim_loss=0.116, depth_loss=0.952, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20560])) that is different to the input size (torch.Size([20560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 185/10000 [01:02<55:58,  2.92it/s, total_loss=0.194, l1_loss=0.171, dssim_loss=0.143, depth_loss=0.865, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20814])) that is different to the input size (torch.Size([20814, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                               | 188/10000 [01:03<55:17,  2.96it/s, total_loss=0.189, l1_loss=0.177, dssim_loss=0.118, depth_loss=1.6, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15944])) that is different to the input size (torch.Size([15944, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                              | 199/10000 [01:07<54:52,  2.98it/s, total_loss=0.158, l1_loss=0.136, dssim_loss=0.123, depth_loss=1.08, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19539])) that is different to the input size (torch.Size([19539, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                               | 206/10000 [01:09<55:31,  2.94it/s, total_loss=0.185, l1_loss=0.156, dssim_loss=0.15, depth_loss=1.14, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19328])) that is different to the input size (torch.Size([19328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                               | 210/10000 [01:11<55:19,  2.95it/s, total_loss=0.185, l1_loss=0.172, dssim_loss=0.119, depth_loss=1.6, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16945])) that is different to the input size (torch.Size([16945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 218/10000 [01:13<56:00,  2.91it/s, total_loss=0.203, l1_loss=0.185, dssim_loss=0.138, depth_loss=0.836, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20066])) that is different to the input size (torch.Size([20066, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                | 226/10000 [01:16<55:28,  2.94it/s, total_loss=0.182, l1_loss=0.155, dssim_loss=0.145, depth_loss=1.14, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17165])) that is different to the input size (torch.Size([17165, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 229/10000 [01:17<55:08,  2.95it/s, total_loss=0.175, l1_loss=0.158, dssim_loss=0.122, depth_loss=0.721, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15296])) that is different to the input size (torch.Size([15296, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                              | 230/10000 [01:17<55:03,  2.96it/s, total_loss=0.184, l1_loss=0.157, dssim_loss=0.146, depth_loss=1.16, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19992])) that is different to the input size (torch.Size([19992, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                               | 231/10000 [01:18<55:30,  2.93it/s, total_loss=0.133, l1_loss=0.128, dssim_loss=0.077, depth_loss=1.09, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18217])) that is different to the input size (torch.Size([18217, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                              | 234/10000 [01:19<55:35,  2.93it/s, total_loss=0.183, l1_loss=0.167, dssim_loss=0.124, depth_loss=1.34, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19102])) that is different to the input size (torch.Size([19102, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                              | 236/10000 [01:19<55:44,  2.92it/s, total_loss=0.114, l1_loss=0.11, dssim_loss=0.065, depth_loss=0.996, psnr=14.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17905])) that is different to the input size (torch.Size([17905, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                             | 240/10000 [01:21<55:38,  2.92it/s, total_loss=0.197, l1_loss=0.171, dssim_loss=0.15, depth_loss=0.809, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20889])) that is different to the input size (torch.Size([20889, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                             | 251/10000 [01:25<55:01,  2.95it/s, total_loss=0.181, l1_loss=0.152, dssim_loss=0.148, depth_loss=1.14, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14950])) that is different to the input size (torch.Size([14950, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                                | 253/10000 [01:25<54:55,  2.96it/s, total_loss=0.143, l1_loss=0.129, dssim_loss=0.1, depth_loss=0.812, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15754])) that is different to the input size (torch.Size([15754, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                              | 256/10000 [01:26<54:57,  2.95it/s, total_loss=0.166, l1_loss=0.14, dssim_loss=0.134, depth_loss=1.14, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15271])) that is different to the input size (torch.Size([15271, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 260/10000 [01:28<56:09,  2.89it/s, total_loss=0.144, l1_loss=0.127, dssim_loss=0.106, depth_loss=0.816, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14253])) that is different to the input size (torch.Size([14253, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                             | 263/10000 [01:29<55:32,  2.92it/s, total_loss=0.189, l1_loss=0.172, dssim_loss=0.127, depth_loss=1.12, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16550])) that is different to the input size (torch.Size([16550, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 265/10000 [01:29<56:39,  2.86it/s, total_loss=0.192, l1_loss=0.167, dssim_loss=0.145, depth_loss=0.825, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20713])) that is different to the input size (torch.Size([20713, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                                | 267/10000 [01:30<56:10,  2.89it/s, total_loss=0.174, l1_loss=0.149, dssim_loss=0.138, depth_loss=1.2, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16386])) that is different to the input size (torch.Size([16386, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                             | 270/10000 [01:31<55:38,  2.91it/s, total_loss=0.176, l1_loss=0.151, dssim_loss=0.137, depth_loss=1.12, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20188])) that is different to the input size (torch.Size([20188, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                            | 277/10000 [01:34<55:12,  2.94it/s, total_loss=0.174, l1_loss=0.151, dssim_loss=0.133, depth_loss=0.855, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16792])) that is different to the input size (torch.Size([16792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                            | 281/10000 [01:35<54:25,  2.98it/s, total_loss=0.145, l1_loss=0.129, dssim_loss=0.103, depth_loss=0.906, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19946])) that is different to the input size (torch.Size([19946, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                             | 285/10000 [01:36<55:19,  2.93it/s, total_loss=0.122, l1_loss=0.116, dssim_loss=0.073, depth_loss=1.08, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15466])) that is different to the input size (torch.Size([15466, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                               | 286/10000 [01:37<55:19,  2.93it/s, total_loss=0.185, l1_loss=0.172, dssim_loss=0.118, depth_loss=1.55, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15723])) that is different to the input size (torch.Size([15723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                              | 287/10000 [01:37<55:23,  2.92it/s, total_loss=0.178, l1_loss=0.15, dssim_loss=0.145, depth_loss=1.12, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20580])) that is different to the input size (torch.Size([20580, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                            | 290/10000 [01:38<55:05,  2.94it/s, total_loss=0.165, l1_loss=0.148, dssim_loss=0.117, depth_loss=0.716, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17471])) that is different to the input size (torch.Size([17471, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                              | 292/10000 [01:39<55:13,  2.93it/s, total_loss=0.149, l1_loss=0.14, dssim_loss=0.092, depth_loss=1.15, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11732])) that is different to the input size (torch.Size([11732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                             | 295/10000 [01:40<55:10,  2.93it/s, total_loss=0.172, l1_loss=0.145, dssim_loss=0.141, depth_loss=1.13, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20100])) that is different to the input size (torch.Size([20100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                            | 296/10000 [01:40<55:18,  2.92it/s, total_loss=0.149, l1_loss=0.136, dssim_loss=0.101, depth_loss=0.808, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15445])) that is different to the input size (torch.Size([15445, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                            | 309/10000 [01:44<55:39,  2.90it/s, total_loss=0.196, l1_loss=0.172, dssim_loss=0.145, depth_loss=0.821, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11743])) that is different to the input size (torch.Size([11743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                             | 312/10000 [01:45<54:50,  2.94it/s, total_loss=0.179, l1_loss=0.164, dssim_loss=0.118, depth_loss=0.72, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16954])) that is different to the input size (torch.Size([16954, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                              | 320/10000 [01:48<55:32,  2.90it/s, total_loss=0.172, l1_loss=0.146, dssim_loss=0.14, depth_loss=1.12, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12264])) that is different to the input size (torch.Size([12264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                            | 322/10000 [01:49<55:38,  2.90it/s, total_loss=0.184, l1_loss=0.166, dssim_loss=0.128, depth_loss=0.945, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17464])) that is different to the input size (torch.Size([17464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 324/10000 [01:50<55:20,  2.91it/s, total_loss=0.144, l1_loss=0.136, dssim_loss=0.088, depth_loss=1.15, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18410])) that is different to the input size (torch.Size([18410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 327/10000 [01:51<56:07,  2.87it/s, total_loss=0.171, l1_loss=0.155, dssim_loss=0.118, depth_loss=1.06, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21002])) that is different to the input size (torch.Size([21002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 332/10000 [01:52<54:58,  2.93it/s, total_loss=0.166, l1_loss=0.143, dssim_loss=0.128, depth_loss=1.03, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16167])) that is different to the input size (torch.Size([16167, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 333/10000 [01:53<54:46,  2.94it/s, total_loss=0.148, l1_loss=0.138, dssim_loss=0.092, depth_loss=1.56, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12699])) that is different to the input size (torch.Size([12699, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 335/10000 [01:53<54:44,  2.94it/s, total_loss=0.162, l1_loss=0.149, dssim_loss=0.107, depth_loss=1.56, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16620])) that is different to the input size (torch.Size([16620, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                            | 343/10000 [01:56<55:12,  2.92it/s, total_loss=0.169, l1_loss=0.145, dssim_loss=0.132, depth_loss=0.821, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14895])) that is different to the input size (torch.Size([14895, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                            | 349/10000 [01:58<55:36,  2.89it/s, total_loss=0.176, l1_loss=0.158, dssim_loss=0.124, depth_loss=0.827, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21011])) that is different to the input size (torch.Size([21011, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                            | 358/10000 [02:01<54:42,  2.94it/s, total_loss=0.154, l1_loss=0.139, dssim_loss=0.107, depth_loss=0.938, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15628])) that is different to the input size (torch.Size([15628, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                            | 368/10000 [02:05<55:48,  2.88it/s, total_loss=0.096, l1_loss=0.091, dssim_loss=0.058, depth_loss=0.794, psnr=16.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20756])) that is different to the input size (torch.Size([20756, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                             | 374/10000 [02:07<55:06,  2.91it/s, total_loss=0.163, l1_loss=0.141, dssim_loss=0.125, depth_loss=1.03, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21021])) that is different to the input size (torch.Size([21021, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                             | 384/10000 [02:10<55:52,  2.87it/s, total_loss=0.171, l1_loss=0.155, dssim_loss=0.117, depth_loss=0.81, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17762])) that is different to the input size (torch.Size([17762, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                            | 390/10000 [02:12<54:43,  2.93it/s, total_loss=0.129, l1_loss=0.118, dssim_loss=0.087, depth_loss=0.808, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21225])) that is different to the input size (torch.Size([21225, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                            | 396/10000 [02:14<54:30,  2.94it/s, total_loss=0.156, l1_loss=0.141, dssim_loss=0.108, depth_loss=0.963, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15236])) that is different to the input size (torch.Size([15236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                             | 397/10000 [02:15<54:13,  2.95it/s, total_loss=0.173, l1_loss=0.148, dssim_loss=0.135, depth_loss=1.17, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17261])) that is different to the input size (torch.Size([17261, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                              | 402/10000 [02:16<54:30,  2.93it/s, total_loss=0.13, l1_loss=0.119, dssim_loss=0.087, depth_loss=1.13, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18387])) that is different to the input size (torch.Size([18387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                                | 406/10000 [02:18<54:31,  2.93it/s, total_loss=0.13, l1_loss=0.118, dssim_loss=0.089, depth_loss=1.14, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19723])) that is different to the input size (torch.Size([19723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                            | 415/10000 [02:21<54:14,  2.95it/s, total_loss=0.162, l1_loss=0.146, dssim_loss=0.113, depth_loss=0.723, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17319])) that is different to the input size (torch.Size([17319, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                             | 435/10000 [02:28<54:25,  2.93it/s, total_loss=0.155, l1_loss=0.131, dssim_loss=0.124, depth_loss=1.12, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20452])) that is different to the input size (torch.Size([20452, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                             | 437/10000 [02:28<54:44,  2.91it/s, total_loss=0.158, l1_loss=0.144, dssim_loss=0.106, depth_loss=1.41, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18398])) that is different to the input size (torch.Size([18398, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                            | 440/10000 [02:29<54:51,  2.90it/s, total_loss=0.127, l1_loss=0.121, dssim_loss=0.076, depth_loss=0.746, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20374])) that is different to the input size (torch.Size([20374, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                             | 446/10000 [02:31<53:56,  2.95it/s, total_loss=0.177, l1_loss=0.155, dssim_loss=0.132, depth_loss=1.18, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20533])) that is different to the input size (torch.Size([20533, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                            | 452/10000 [02:33<54:40,  2.91it/s, total_loss=0.146, l1_loss=0.128, dssim_loss=0.108, depth_loss=0.823, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16707])) that is different to the input size (torch.Size([16707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                              | 456/10000 [02:35<54:01,  2.94it/s, total_loss=0.167, l1_loss=0.145, dssim_loss=0.127, depth_loss=1.12, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16977])) that is different to the input size (torch.Size([16977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                           | 483/10000 [02:44<54:21,  2.92it/s, total_loss=0.194, l1_loss=0.176, dssim_loss=0.132, depth_loss=0.706, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13182])) that is different to the input size (torch.Size([13182, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                             | 490/10000 [02:47<55:01,  2.88it/s, total_loss=0.18, l1_loss=0.154, dssim_loss=0.14, depth_loss=0.852, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17924])) that is different to the input size (torch.Size([17924, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                          | 509/10000 [03:12<1:31:10,  1.73it/s, total_loss=0.094, l1_loss=0.087, dssim_loss=0.06, depth_loss=0.752, psnr=16.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15844])) that is different to the input size (torch.Size([15844, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_500.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                          | 512/10000 [03:13<1:06:38,  2.37it/s, total_loss=0.184, l1_loss=0.159, dssim_loss=0.142, depth_loss=1.13, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17600])) that is different to the input size (torch.Size([17600, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                             | 521/10000 [03:16<54:47,  2.88it/s, total_loss=0.142, l1_loss=0.13, dssim_loss=0.095, depth_loss=1.52, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17259])) that is different to the input size (torch.Size([17259, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                             | 523/10000 [03:17<54:28,  2.90it/s, total_loss=0.14, l1_loss=0.129, dssim_loss=0.093, depth_loss=1.58, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21003])) that is different to the input size (torch.Size([21003, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                            | 531/10000 [03:20<54:43,  2.88it/s, total_loss=0.108, l1_loss=0.103, dssim_loss=0.064, depth_loss=1.05, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20721])) that is different to the input size (torch.Size([20721, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                            | 560/10000 [03:30<54:01,  2.91it/s, total_loss=0.105, l1_loss=0.099, dssim_loss=0.065, depth_loss=1.16, psnr=15.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17318])) that is different to the input size (torch.Size([17318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                            | 566/10000 [03:32<54:38,  2.88it/s, total_loss=0.17, l1_loss=0.146, dssim_loss=0.134, depth_loss=0.779, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18385])) that is different to the input size (torch.Size([18385, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                            | 581/10000 [03:37<53:50,  2.92it/s, total_loss=0.166, l1_loss=0.153, dssim_loss=0.11, depth_loss=0.877, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16352])) that is different to the input size (torch.Size([16352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███                                             | 637/10000 [03:56<54:05,  2.88it/s, total_loss=0.14, l1_loss=0.128, dssim_loss=0.093, depth_loss=1.47, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20575])) that is different to the input size (torch.Size([20575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▉                                           | 649/10000 [04:01<54:35,  2.85it/s, total_loss=0.107, l1_loss=0.107, dssim_loss=0.055, depth_loss=0.755, psnr=16.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18766])) that is different to the input size (torch.Size([18766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▏                                          | 688/10000 [04:14<52:50,  2.94it/s, total_loss=0.125, l1_loss=0.114, dssim_loss=0.087, depth_loss=0.875, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20606])) that is different to the input size (torch.Size([20606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                           | 717/10000 [04:24<53:30,  2.89it/s, total_loss=0.186, l1_loss=0.162, dssim_loss=0.14, depth_loss=0.857, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20583])) that is different to the input size (torch.Size([20583, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                          | 721/10000 [04:25<54:08,  2.86it/s, total_loss=0.163, l1_loss=0.142, dssim_loss=0.124, depth_loss=0.822, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15214])) that is different to the input size (torch.Size([15214, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▌                                           | 755/10000 [04:37<53:19,  2.89it/s, total_loss=0.145, l1_loss=0.132, dssim_loss=0.098, depth_loss=1.35, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18439])) that is different to the input size (torch.Size([18439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|███▉                                          | 851/10000 [05:10<52:52,  2.88it/s, total_loss=0.144, l1_loss=0.132, dssim_loss=0.095, depth_loss=0.792, psnr=14.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18800])) that is different to the input size (torch.Size([18800, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▏                                            | 866/10000 [05:16<53:26,  2.85it/s, total_loss=0.13, l1_loss=0.119, dssim_loss=0.086, depth_loss=1.5, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20683])) that is different to the input size (torch.Size([20683, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████                                       | 1346/10000 [08:23<50:27,  2.86it/s, total_loss=0.111, l1_loss=0.103, dssim_loss=0.072, depth_loss=0.776, psnr=15.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15458])) that is different to the input size (torch.Size([15458, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_1000.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
100%|███████████████████████████████████████████| 10000/10000 [1:06:27<00:00,  2.51it/s, total_loss=0.097, l1_loss=0.091, dssim_loss=0.06, depth_loss=0.836, psnr=16.9]
Video saved to outputs/video_1500.mp4
Video saved to outputs/video_2000.mp4
Video saved to outputs/video_2500.mp4
Video saved to outputs/video_3000.mp4
Video saved to outputs/video_3500.mp4
Video saved to outputs/video_4000.mp4
Video saved to outputs/video_4500.mp4
Video saved to outputs/video_5000.mp4
Video saved to outputs/video_5500.mp4
Video saved to outputs/video_6000.mp4
Video saved to outputs/video_6500.mp4
Video saved to outputs/video_7000.mp4
Video saved to outputs/video_7500.mp4
Video saved to outputs/video_8000.mp4
Video saved to outputs/video_8500.mp4
Video saved to outputs/video_9000.mp4
Video saved to outputs/video_9500.mp4
Video saved to outputs/video_10000.mp4
