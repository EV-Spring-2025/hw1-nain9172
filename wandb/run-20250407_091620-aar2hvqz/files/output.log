Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20289])) that is different to the input size (torch.Size([20289, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 1/10000 [00:00<1:44:17,  1.60it/s, total_loss=0.456, l1_loss=0.403, dssim_loss=0.334, depth_loss=1.09, psnr=7.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25283])) that is different to the input size (torch.Size([25283, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 2/10000 [00:01<1:37:00,  1.72it/s, total_loss=0.458, l1_loss=0.406, dssim_loss=0.333, depth_loss=0.646, psnr=7.17]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25025])) that is different to the input size (torch.Size([25025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 3/10000 [00:01<1:33:48,  1.78it/s, total_loss=0.425, l1_loss=0.382, dssim_loss=0.298, depth_loss=0.621, psnr=7.61]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28280])) that is different to the input size (torch.Size([28280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 4/10000 [00:02<1:44:50,  1.59it/s, total_loss=0.477, l1_loss=0.422, dssim_loss=0.35, depth_loss=0.743, psnr=6.73]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16601])) that is different to the input size (torch.Size([16601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 5/10000 [00:02<1:39:23,  1.68it/s, total_loss=0.339, l1_loss=0.313, dssim_loss=0.222, depth_loss=0.953, psnr=9.03]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23953])) that is different to the input size (torch.Size([23953, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 7/10000 [00:04<1:34:46,  1.76it/s, total_loss=0.445, l1_loss=0.396, dssim_loss=0.32, depth_loss=1.27, psnr=7.23]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21114])) that is different to the input size (torch.Size([21114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 8/10000 [00:04<1:32:45,  1.80it/s, total_loss=0.317, l1_loss=0.281, dssim_loss=0.231, depth_loss=1.13, psnr=9.13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22464])) that is different to the input size (torch.Size([22464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 9/10000 [00:05<1:32:18,  1.80it/s, total_loss=0.464, l1_loss=0.411, dssim_loss=0.338, depth_loss=1.43, psnr=7.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28272])) that is different to the input size (torch.Size([28272, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 10/10000 [00:05<1:32:35,  1.80it/s, total_loss=0.469, l1_loss=0.411, dssim_loss=0.351, depth_loss=1.07, psnr=6.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17288])) that is different to the input size (torch.Size([17288, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 11/10000 [00:06<1:31:48,  1.81it/s, total_loss=0.384, l1_loss=0.356, dssim_loss=0.25, depth_loss=0.751, psnr=8.32]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28476])) that is different to the input size (torch.Size([28476, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 12/10000 [00:07<1:45:37,  1.58it/s, total_loss=0.466, l1_loss=0.41, dssim_loss=0.345, depth_loss=0.904, psnr=7.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21318])) that is different to the input size (torch.Size([21318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 13/10000 [00:07<1:40:27,  1.66it/s, total_loss=0.369, l1_loss=0.332, dssim_loss=0.259, depth_loss=1.3, psnr=8.65]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25410])) that is different to the input size (torch.Size([25410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 14/10000 [00:08<1:38:26,  1.69it/s, total_loss=0.48, l1_loss=0.429, dssim_loss=0.343, depth_loss=0.974, psnr=6.61]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23593])) that is different to the input size (torch.Size([23593, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 15/10000 [00:08<1:35:54,  1.74it/s, total_loss=0.344, l1_loss=0.314, dssim_loss=0.232, depth_loss=1.4, psnr=8.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21317])) that is different to the input size (torch.Size([21317, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 16/10000 [00:09<1:33:08,  1.79it/s, total_loss=0.412, l1_loss=0.376, dssim_loss=0.277, depth_loss=1.09, psnr=7.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23902])) that is different to the input size (torch.Size([23902, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 17/10000 [00:09<1:32:14,  1.80it/s, total_loss=0.314, l1_loss=0.287, dssim_loss=0.21, depth_loss=1.33, psnr=9.25]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22809])) that is different to the input size (torch.Size([22809, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 19/10000 [00:10<1:31:59,  1.81it/s, total_loss=0.407, l1_loss=0.373, dssim_loss=0.271, depth_loss=0.975, psnr=7.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22114])) that is different to the input size (torch.Size([22114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 20/10000 [00:11<1:32:11,  1.80it/s, total_loss=0.347, l1_loss=0.326, dssim_loss=0.216, depth_loss=0.742, psnr=8.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15946])) that is different to the input size (torch.Size([15946, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 21/10000 [00:11<1:31:12,  1.82it/s, total_loss=0.211, l1_loss=0.194, dssim_loss=0.14, depth_loss=0.886, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22613])) that is different to the input size (torch.Size([22613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 22/10000 [00:12<1:32:01,  1.81it/s, total_loss=0.33, l1_loss=0.311, dssim_loss=0.202, depth_loss=0.889, psnr=8.97]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23353])) that is different to the input size (torch.Size([23353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 23/10000 [00:13<1:31:26,  1.82it/s, total_loss=0.309, l1_loss=0.293, dssim_loss=0.189, depth_loss=1.19, psnr=9.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24171])) that is different to the input size (torch.Size([24171, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 25/10000 [00:14<1:32:51,  1.79it/s, total_loss=0.247, l1_loss=0.237, dssim_loss=0.144, depth_loss=0.888, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23485])) that is different to the input size (torch.Size([23485, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 26/10000 [00:14<1:32:57,  1.79it/s, total_loss=0.231, l1_loss=0.214, dssim_loss=0.15, depth_loss=1.02, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26891])) that is different to the input size (torch.Size([26891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 27/10000 [00:15<1:33:51,  1.77it/s, total_loss=0.334, l1_loss=0.308, dssim_loss=0.22, depth_loss=0.526, psnr=9.19]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24260])) that is different to the input size (torch.Size([24260, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 28/10000 [00:15<1:33:33,  1.78it/s, total_loss=0.23, l1_loss=0.217, dssim_loss=0.139, depth_loss=1.15, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21960])) that is different to the input size (torch.Size([21960, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 29/10000 [00:16<1:33:07,  1.78it/s, total_loss=0.198, l1_loss=0.189, dssim_loss=0.117, depth_loss=0.752, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27979])) that is different to the input size (torch.Size([27979, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 30/10000 [00:17<1:33:21,  1.78it/s, total_loss=0.304, l1_loss=0.28, dssim_loss=0.2, depth_loss=0.641, psnr=9.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23345])) that is different to the input size (torch.Size([23345, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 31/10000 [00:17<1:32:11,  1.80it/s, total_loss=0.268, l1_loss=0.243, dssim_loss=0.182, depth_loss=1.42, psnr=9.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28918])) that is different to the input size (torch.Size([28918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 33/10000 [00:18<1:39:41,  1.67it/s, total_loss=0.334, l1_loss=0.318, dssim_loss=0.2, depth_loss=0.627, psnr=8.38]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21685])) that is different to the input size (torch.Size([21685, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 35/10000 [00:19<1:35:01,  1.75it/s, total_loss=0.269, l1_loss=0.258, dssim_loss=0.157, depth_loss=0.603, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17252])) that is different to the input size (torch.Size([17252, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 36/10000 [00:20<1:33:43,  1.77it/s, total_loss=0.215, l1_loss=0.197, dssim_loss=0.145, depth_loss=1.01, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21100])) that is different to the input size (torch.Size([21100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 37/10000 [00:21<1:31:55,  1.81it/s, total_loss=0.324, l1_loss=0.29, dssim_loss=0.23, depth_loss=1.37, psnr=9.11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25095])) that is different to the input size (torch.Size([25095, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 38/10000 [00:21<1:31:46,  1.81it/s, total_loss=0.278, l1_loss=0.259, dssim_loss=0.176, depth_loss=0.626, psnr=9.91]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21349])) that is different to the input size (torch.Size([21349, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 40/10000 [00:22<1:30:36,  1.83it/s, total_loss=0.242, l1_loss=0.22, dssim_loss=0.164, depth_loss=1.41, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25029])) that is different to the input size (torch.Size([25029, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 42/10000 [00:23<1:31:45,  1.81it/s, total_loss=0.256, l1_loss=0.255, dssim_loss=0.13, depth_loss=1.04, psnr=9.68]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27564])) that is different to the input size (torch.Size([27564, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 43/10000 [00:24<1:32:17,  1.80it/s, total_loss=0.271, l1_loss=0.268, dssim_loss=0.14, depth_loss=1.01, psnr=9.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22348])) that is different to the input size (torch.Size([22348, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 44/10000 [00:24<1:32:32,  1.79it/s, total_loss=0.22, l1_loss=0.221, dssim_loss=0.107, depth_loss=0.768, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20609])) that is different to the input size (torch.Size([20609, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 46/10000 [00:25<1:29:58,  1.84it/s, total_loss=0.249, l1_loss=0.237, dssim_loss=0.148, depth_loss=1.1, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23082])) that is different to the input size (torch.Size([23082, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 48/10000 [00:27<1:32:00,  1.80it/s, total_loss=0.184, l1_loss=0.182, dssim_loss=0.095, depth_loss=0.887, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23064])) that is different to the input size (torch.Size([23064, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 49/10000 [00:27<1:31:18,  1.82it/s, total_loss=0.161, l1_loss=0.156, dssim_loss=0.092, depth_loss=0.757, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28332])) that is different to the input size (torch.Size([28332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 50/10000 [00:28<1:33:00,  1.78it/s, total_loss=0.329, l1_loss=0.299, dssim_loss=0.223, depth_loss=0.878, psnr=8.74]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21399])) that is different to the input size (torch.Size([21399, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                               | 51/10000 [00:28<1:31:40,  1.81it/s, total_loss=0.276, l1_loss=0.245, dssim_loss=0.2, depth_loss=1.26, psnr=9.76]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22842])) that is different to the input size (torch.Size([22842, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 53/10000 [00:29<1:30:23,  1.83it/s, total_loss=0.222, l1_loss=0.212, dssim_loss=0.132, depth_loss=1.1, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22782])) that is different to the input size (torch.Size([22782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 55/10000 [00:30<1:30:26,  1.83it/s, total_loss=0.211, l1_loss=0.196, dssim_loss=0.136, depth_loss=0.603, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18930])) that is different to the input size (torch.Size([18930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 56/10000 [00:31<1:30:28,  1.83it/s, total_loss=0.258, l1_loss=0.245, dssim_loss=0.155, depth_loss=0.832, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22522])) that is different to the input size (torch.Size([22522, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 57/10000 [00:32<1:31:10,  1.82it/s, total_loss=0.164, l1_loss=0.164, dssim_loss=0.082, depth_loss=0.814, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21299])) that is different to the input size (torch.Size([21299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 59/10000 [00:33<1:30:44,  1.83it/s, total_loss=0.257, l1_loss=0.235, dssim_loss=0.171, depth_loss=0.624, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21024])) that is different to the input size (torch.Size([21024, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 61/10000 [00:34<1:29:30,  1.85it/s, total_loss=0.237, l1_loss=0.216, dssim_loss=0.16, depth_loss=1.41, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25044])) that is different to the input size (torch.Size([25044, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 63/10000 [00:35<1:30:09,  1.84it/s, total_loss=0.265, l1_loss=0.238, dssim_loss=0.186, depth_loss=1.44, psnr=9.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28704])) that is different to the input size (torch.Size([28704, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 65/10000 [00:36<1:30:26,  1.83it/s, total_loss=0.223, l1_loss=0.21, dssim_loss=0.137, depth_loss=0.976, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21428])) that is different to the input size (torch.Size([21428, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 66/10000 [00:36<1:29:57,  1.84it/s, total_loss=0.246, l1_loss=0.216, dssim_loss=0.185, depth_loss=1.22, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27615])) that is different to the input size (torch.Size([27615, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 67/10000 [00:37<1:31:12,  1.82it/s, total_loss=0.293, l1_loss=0.264, dssim_loss=0.205, depth_loss=0.701, psnr=9.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19870])) that is different to the input size (torch.Size([19870, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 68/10000 [00:38<1:30:44,  1.82it/s, total_loss=0.229, l1_loss=0.215, dssim_loss=0.142, depth_loss=0.909, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28518])) that is different to the input size (torch.Size([28518, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 69/10000 [00:38<1:31:23,  1.81it/s, total_loss=0.233, l1_loss=0.222, dssim_loss=0.139, depth_loss=0.968, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16637])) that is different to the input size (torch.Size([16637, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 70/10000 [00:39<1:30:49,  1.82it/s, total_loss=0.188, l1_loss=0.176, dssim_loss=0.119, depth_loss=0.745, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27213])) that is different to the input size (torch.Size([27213, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 72/10000 [00:40<1:31:01,  1.82it/s, total_loss=0.207, l1_loss=0.185, dssim_loss=0.146, depth_loss=1.34, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27871])) that is different to the input size (torch.Size([27871, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 73/10000 [00:40<1:32:06,  1.80it/s, total_loss=0.266, l1_loss=0.238, dssim_loss=0.188, depth_loss=0.745, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23841])) that is different to the input size (torch.Size([23841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 74/10000 [00:41<1:32:44,  1.78it/s, total_loss=0.17, l1_loss=0.167, dssim_loss=0.092, depth_loss=1.03, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25071])) that is different to the input size (torch.Size([25071, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 75/10000 [00:41<1:31:22,  1.81it/s, total_loss=0.219, l1_loss=0.204, dssim_loss=0.139, depth_loss=0.607, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23965])) that is different to the input size (torch.Size([23965, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 77/10000 [00:43<1:30:34,  1.83it/s, total_loss=0.206, l1_loss=0.188, dssim_loss=0.137, depth_loss=0.619, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27129])) that is different to the input size (torch.Size([27129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 78/10000 [00:43<1:32:08,  1.79it/s, total_loss=0.212, l1_loss=0.198, dssim_loss=0.135, depth_loss=0.532, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28597])) that is different to the input size (torch.Size([28597, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 80/10000 [00:44<1:32:57,  1.78it/s, total_loss=0.151, l1_loss=0.14, dssim_loss=0.097, depth_loss=0.911, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20829])) that is different to the input size (torch.Size([20829, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 83/10000 [00:46<1:32:25,  1.79it/s, total_loss=0.134, l1_loss=0.129, dssim_loss=0.079, depth_loss=0.979, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28026])) that is different to the input size (torch.Size([28026, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 84/10000 [00:46<1:32:20,  1.79it/s, total_loss=0.19, l1_loss=0.171, dssim_loss=0.135, depth_loss=1.08, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21993])) that is different to the input size (torch.Size([21993, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 85/10000 [00:47<1:32:07,  1.79it/s, total_loss=0.129, l1_loss=0.121, dssim_loss=0.081, depth_loss=0.802, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26939])) that is different to the input size (torch.Size([26939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 86/10000 [00:48<1:32:34,  1.78it/s, total_loss=0.234, l1_loss=0.21, dssim_loss=0.164, depth_loss=0.692, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25986])) that is different to the input size (torch.Size([25986, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 88/10000 [00:49<1:32:36,  1.78it/s, total_loss=0.138, l1_loss=0.126, dssim_loss=0.092, depth_loss=0.909, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23141])) that is different to the input size (torch.Size([23141, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 91/10000 [00:50<1:31:34,  1.80it/s, total_loss=0.188, l1_loss=0.17, dssim_loss=0.131, depth_loss=0.619, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23499])) that is different to the input size (torch.Size([23499, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 92/10000 [00:51<1:32:22,  1.79it/s, total_loss=0.128, l1_loss=0.122, dssim_loss=0.077, depth_loss=0.995, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21116])) that is different to the input size (torch.Size([21116, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 96/10000 [00:53<1:31:15,  1.81it/s, total_loss=0.11, l1_loss=0.105, dssim_loss=0.066, depth_loss=0.904, psnr=15.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23778])) that is different to the input size (torch.Size([23778, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 97/10000 [00:54<1:31:10,  1.81it/s, total_loss=0.163, l1_loss=0.147, dssim_loss=0.114, depth_loss=1.11, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27483])) that is different to the input size (torch.Size([27483, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 98/10000 [00:54<1:31:55,  1.80it/s, total_loss=0.24, l1_loss=0.214, dssim_loss=0.17, depth_loss=0.687, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25582])) that is different to the input size (torch.Size([25582, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 99/10000 [00:55<1:31:40,  1.80it/s, total_loss=0.228, l1_loss=0.215, dssim_loss=0.14, depth_loss=0.574, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28063])) that is different to the input size (torch.Size([28063, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 101/10000 [00:56<1:31:59,  1.79it/s, total_loss=0.236, l1_loss=0.209, dssim_loss=0.173, depth_loss=1.43, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20945])) that is different to the input size (torch.Size([20945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 102/10000 [00:56<1:30:31,  1.82it/s, total_loss=0.248, l1_loss=0.219, dssim_loss=0.181, depth_loss=1.38, psnr=9.91]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22757])) that is different to the input size (torch.Size([22757, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 106/10000 [00:59<1:31:00,  1.81it/s, total_loss=0.133, l1_loss=0.123, dssim_loss=0.087, depth_loss=0.91, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27999])) that is different to the input size (torch.Size([27999, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 108/10000 [01:00<1:30:37,  1.82it/s, total_loss=0.242, l1_loss=0.213, dssim_loss=0.178, depth_loss=1.42, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25049])) that is different to the input size (torch.Size([25049, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 109/10000 [01:00<1:30:33,  1.82it/s, total_loss=0.171, l1_loss=0.154, dssim_loss=0.121, depth_loss=0.604, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28846])) that is different to the input size (torch.Size([28846, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 110/10000 [01:01<1:31:23,  1.80it/s, total_loss=0.206, l1_loss=0.179, dssim_loss=0.156, depth_loss=1.05, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28930])) that is different to the input size (torch.Size([28930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 111/10000 [01:02<1:44:41,  1.57it/s, total_loss=0.217, l1_loss=0.189, dssim_loss=0.165, depth_loss=1, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24977])) that is different to the input size (torch.Size([24977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 112/10000 [01:02<1:40:28,  1.64it/s, total_loss=0.144, l1_loss=0.134, dssim_loss=0.093, depth_loss=0.885, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27747])) that is different to the input size (torch.Size([27747, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 113/10000 [01:03<1:38:35,  1.67it/s, total_loss=0.213, l1_loss=0.186, dssim_loss=0.161, depth_loss=0.72, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23797])) that is different to the input size (torch.Size([23797, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 114/10000 [01:03<1:35:48,  1.72it/s, total_loss=0.194, l1_loss=0.172, dssim_loss=0.142, depth_loss=1.38, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27982])) that is different to the input size (torch.Size([27982, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 115/10000 [01:04<1:34:59,  1.73it/s, total_loss=0.164, l1_loss=0.149, dssim_loss=0.112, depth_loss=0.643, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20766])) that is different to the input size (torch.Size([20766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 117/10000 [01:05<1:31:59,  1.79it/s, total_loss=0.113, l1_loss=0.106, dssim_loss=0.07, depth_loss=0.778, psnr=15.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23927])) that is different to the input size (torch.Size([23927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 118/10000 [01:06<1:31:21,  1.80it/s, total_loss=0.166, l1_loss=0.148, dssim_loss=0.119, depth_loss=1.17, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26133])) that is different to the input size (torch.Size([26133, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 122/10000 [01:08<1:29:16,  1.84it/s, total_loss=0.183, l1_loss=0.171, dssim_loss=0.117, depth_loss=0.903, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20996])) that is different to the input size (torch.Size([20996, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 125/10000 [01:09<1:27:37,  1.88it/s, total_loss=0.22, l1_loss=0.19, dssim_loss=0.169, depth_loss=1.34, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22010])) that is different to the input size (torch.Size([22010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 126/10000 [01:10<1:27:41,  1.88it/s, total_loss=0.158, l1_loss=0.15, dssim_loss=0.096, depth_loss=1.21, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27997])) that is different to the input size (torch.Size([27997, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 127/10000 [01:10<1:29:32,  1.84it/s, total_loss=0.208, l1_loss=0.178, dssim_loss=0.164, depth_loss=0.788, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28328])) that is different to the input size (torch.Size([28328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 128/10000 [01:11<1:30:39,  1.81it/s, total_loss=0.156, l1_loss=0.146, dssim_loss=0.097, depth_loss=1.01, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23560])) that is different to the input size (torch.Size([23560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 133/10000 [01:14<1:30:23,  1.82it/s, total_loss=0.194, l1_loss=0.17, dssim_loss=0.147, depth_loss=1.06, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22251])) that is different to the input size (torch.Size([22251, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 135/10000 [01:15<1:31:24,  1.80it/s, total_loss=0.14, l1_loss=0.131, dssim_loss=0.087, depth_loss=1.17, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21527])) that is different to the input size (torch.Size([21527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 136/10000 [01:15<1:30:14,  1.82it/s, total_loss=0.146, l1_loss=0.137, dssim_loss=0.091, depth_loss=1.2, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27324])) that is different to the input size (torch.Size([27324, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 138/10000 [01:17<1:31:58,  1.79it/s, total_loss=0.139, l1_loss=0.131, dssim_loss=0.084, depth_loss=1.03, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22443])) that is different to the input size (torch.Size([22443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 144/10000 [01:20<1:32:19,  1.78it/s, total_loss=0.148, l1_loss=0.135, dssim_loss=0.101, depth_loss=0.652, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24198])) that is different to the input size (torch.Size([24198, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 146/10000 [01:21<1:32:56,  1.77it/s, total_loss=0.163, l1_loss=0.151, dssim_loss=0.106, depth_loss=0.773, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20891])) that is different to the input size (torch.Size([20891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 147/10000 [01:22<1:31:27,  1.80it/s, total_loss=0.183, l1_loss=0.153, dssim_loss=0.153, depth_loss=1.09, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21215])) that is different to the input size (torch.Size([21215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 150/10000 [01:23<1:31:02,  1.80it/s, total_loss=0.169, l1_loss=0.152, dssim_loss=0.118, depth_loss=0.967, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21148])) that is different to the input size (torch.Size([21148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                              | 151/10000 [01:24<1:29:54,  1.83it/s, total_loss=0.148, l1_loss=0.14, dssim_loss=0.089, depth_loss=1.2, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25607])) that is different to the input size (torch.Size([25607, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 152/10000 [01:24<1:30:17,  1.82it/s, total_loss=0.185, l1_loss=0.162, dssim_loss=0.139, depth_loss=0.635, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15368])) that is different to the input size (torch.Size([15368, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 153/10000 [01:25<1:29:51,  1.83it/s, total_loss=0.154, l1_loss=0.139, dssim_loss=0.107, depth_loss=0.79, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15373])) that is different to the input size (torch.Size([15373, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                              | 155/10000 [01:26<1:28:50,  1.85it/s, total_loss=0.138, l1_loss=0.13, dssim_loss=0.086, depth_loss=1.2, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24163])) that is different to the input size (torch.Size([24163, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 156/10000 [01:26<1:29:47,  1.83it/s, total_loss=0.111, l1_loss=0.107, dssim_loss=0.065, depth_loss=0.932, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27353])) that is different to the input size (torch.Size([27353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 157/10000 [01:27<1:29:54,  1.82it/s, total_loss=0.167, l1_loss=0.149, dssim_loss=0.12, depth_loss=1.03, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21530])) that is different to the input size (torch.Size([21530, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 160/10000 [01:29<1:29:36,  1.83it/s, total_loss=0.175, l1_loss=0.154, dssim_loss=0.13, depth_loss=1.09, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27328])) that is different to the input size (torch.Size([27328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 161/10000 [01:29<1:30:43,  1.81it/s, total_loss=0.189, l1_loss=0.162, dssim_loss=0.147, depth_loss=0.686, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25074])) that is different to the input size (torch.Size([25074, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 162/10000 [01:30<1:30:07,  1.82it/s, total_loss=0.186, l1_loss=0.165, dssim_loss=0.134, depth_loss=0.62, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23740])) that is different to the input size (torch.Size([23740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 166/10000 [01:32<1:30:50,  1.80it/s, total_loss=0.099, l1_loss=0.094, dssim_loss=0.06, depth_loss=0.801, psnr=15.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24393])) that is different to the input size (torch.Size([24393, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 167/10000 [01:32<1:30:27,  1.81it/s, total_loss=0.124, l1_loss=0.114, dssim_loss=0.082, depth_loss=0.853, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27151])) that is different to the input size (torch.Size([27151, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 170/10000 [01:34<1:31:49,  1.78it/s, total_loss=0.129, l1_loss=0.121, dssim_loss=0.081, depth_loss=1.17, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28432])) that is different to the input size (torch.Size([28432, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 171/10000 [01:35<1:31:52,  1.78it/s, total_loss=0.173, l1_loss=0.152, dssim_loss=0.13, depth_loss=1.09, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21173])) that is different to the input size (torch.Size([21173, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 172/10000 [01:35<1:30:12,  1.82it/s, total_loss=0.145, l1_loss=0.135, dssim_loss=0.093, depth_loss=1.13, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20321])) that is different to the input size (torch.Size([20321, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 173/10000 [01:36<1:30:20,  1.81it/s, total_loss=0.183, l1_loss=0.166, dssim_loss=0.125, depth_loss=0.955, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23107])) that is different to the input size (torch.Size([23107, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 175/10000 [01:37<1:30:25,  1.81it/s, total_loss=0.121, l1_loss=0.117, dssim_loss=0.068, depth_loss=0.78, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27836])) that is different to the input size (torch.Size([27836, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 176/10000 [01:38<1:30:58,  1.80it/s, total_loss=0.166, l1_loss=0.151, dssim_loss=0.113, depth_loss=0.603, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22297])) that is different to the input size (torch.Size([22297, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 179/10000 [01:39<1:32:16,  1.77it/s, total_loss=0.122, l1_loss=0.115, dssim_loss=0.074, depth_loss=1.02, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23780])) that is different to the input size (torch.Size([23780, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 180/10000 [01:40<1:31:49,  1.78it/s, total_loss=0.132, l1_loss=0.124, dssim_loss=0.082, depth_loss=1.2, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26280])) that is different to the input size (torch.Size([26280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 188/10000 [01:44<1:30:29,  1.81it/s, total_loss=0.103, l1_loss=0.099, dssim_loss=0.059, depth_loss=0.876, psnr=15.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20966])) that is different to the input size (torch.Size([20966, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 190/10000 [01:45<1:30:25,  1.81it/s, total_loss=0.126, l1_loss=0.115, dssim_loss=0.086, depth_loss=0.892, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28439])) that is different to the input size (torch.Size([28439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 191/10000 [01:46<1:31:34,  1.79it/s, total_loss=0.155, l1_loss=0.142, dssim_loss=0.104, depth_loss=0.83, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22984])) that is different to the input size (torch.Size([22984, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 197/10000 [01:49<1:30:30,  1.81it/s, total_loss=0.188, l1_loss=0.172, dssim_loss=0.125, depth_loss=0.619, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27481])) that is different to the input size (torch.Size([27481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 199/10000 [01:50<1:30:34,  1.80it/s, total_loss=0.139, l1_loss=0.123, dssim_loss=0.1, depth_loss=0.793, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24002])) that is different to the input size (torch.Size([24002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                               | 201/10000 [01:51<1:31:35,  1.78it/s, total_loss=0.198, l1_loss=0.171, dssim_loss=0.153, depth_loss=1, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22332])) that is different to the input size (torch.Size([22332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 203/10000 [01:53<1:32:02,  1.77it/s, total_loss=0.112, l1_loss=0.105, dssim_loss=0.07, depth_loss=1.06, psnr=14.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21236])) that is different to the input size (torch.Size([21236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 205/10000 [01:54<1:31:37,  1.78it/s, total_loss=0.12, l1_loss=0.112, dssim_loss=0.077, depth_loss=1.19, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26601])) that is different to the input size (torch.Size([26601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 207/10000 [01:55<1:32:30,  1.76it/s, total_loss=0.217, l1_loss=0.199, dssim_loss=0.144, depth_loss=0.695, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18481])) that is different to the input size (torch.Size([18481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                              | 212/10000 [01:58<1:30:40,  1.80it/s, total_loss=0.129, l1_loss=0.12, dssim_loss=0.082, depth_loss=1.2, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17918])) that is different to the input size (torch.Size([17918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 213/10000 [01:58<1:30:39,  1.80it/s, total_loss=0.164, l1_loss=0.141, dssim_loss=0.126, depth_loss=1.04, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20855])) that is different to the input size (torch.Size([20855, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 216/10000 [02:00<1:30:35,  1.80it/s, total_loss=0.183, l1_loss=0.157, dssim_loss=0.144, depth_loss=0.705, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26461])) that is different to the input size (torch.Size([26461, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 219/10000 [02:02<1:32:14,  1.77it/s, total_loss=0.12, l1_loss=0.113, dssim_loss=0.075, depth_loss=1.17, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26305])) that is different to the input size (torch.Size([26305, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                | 222/10000 [02:03<1:30:58,  1.79it/s, total_loss=0.16, l1_loss=0.145, dssim_loss=0.111, depth_loss=1, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20930])) that is different to the input size (torch.Size([20930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                              | 224/10000 [02:04<1:30:16,  1.80it/s, total_loss=0.098, l1_loss=0.092, dssim_loss=0.06, depth_loss=0.787, psnr=16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28254])) that is different to the input size (torch.Size([28254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 225/10000 [02:05<1:31:10,  1.79it/s, total_loss=0.137, l1_loss=0.128, dssim_loss=0.087, depth_loss=1.04, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19405])) that is different to the input size (torch.Size([19405, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 226/10000 [02:05<1:30:36,  1.80it/s, total_loss=0.194, l1_loss=0.169, dssim_loss=0.146, depth_loss=1.08, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20860])) that is different to the input size (torch.Size([20860, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 227/10000 [02:06<1:30:21,  1.80it/s, total_loss=0.209, l1_loss=0.183, dssim_loss=0.157, depth_loss=1.43, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28679])) that is different to the input size (torch.Size([28679, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 229/10000 [02:07<1:30:56,  1.79it/s, total_loss=0.165, l1_loss=0.144, dssim_loss=0.124, depth_loss=0.644, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21467])) that is different to the input size (torch.Size([21467, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 231/10000 [02:08<1:28:31,  1.84it/s, total_loss=0.142, l1_loss=0.13, dssim_loss=0.093, depth_loss=1.11, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22248])) that is different to the input size (torch.Size([22248, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 232/10000 [02:09<1:29:36,  1.82it/s, total_loss=0.094, l1_loss=0.09, dssim_loss=0.056, depth_loss=0.842, psnr=16.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21354])) that is different to the input size (torch.Size([21354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 233/10000 [02:09<1:29:17,  1.82it/s, total_loss=0.187, l1_loss=0.155, dssim_loss=0.157, depth_loss=1.14, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28205])) that is different to the input size (torch.Size([28205, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 234/10000 [02:10<1:30:46,  1.79it/s, total_loss=0.141, l1_loss=0.127, dssim_loss=0.098, depth_loss=0.795, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28092])) that is different to the input size (torch.Size([28092, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 235/10000 [02:10<1:31:45,  1.77it/s, total_loss=0.138, l1_loss=0.124, dssim_loss=0.097, depth_loss=0.767, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21229])) that is different to the input size (torch.Size([21229, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 237/10000 [02:12<1:31:18,  1.78it/s, total_loss=0.111, l1_loss=0.105, dssim_loss=0.069, depth_loss=1.06, psnr=14.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27596])) that is different to the input size (torch.Size([27596, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 240/10000 [02:13<1:30:56,  1.79it/s, total_loss=0.165, l1_loss=0.147, dssim_loss=0.119, depth_loss=0.869, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27010])) that is different to the input size (torch.Size([27010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 244/10000 [02:15<1:29:21,  1.82it/s, total_loss=0.111, l1_loss=0.105, dssim_loss=0.067, depth_loss=0.796, psnr=15.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26859])) that is different to the input size (torch.Size([26859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█                                           | 251/10000 [02:19<1:30:47,  1.79it/s, total_loss=0.149, l1_loss=0.136, dssim_loss=0.099, depth_loss=0.706, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28594])) that is different to the input size (torch.Size([28594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█                                           | 255/10000 [02:22<1:31:54,  1.77it/s, total_loss=0.136, l1_loss=0.125, dssim_loss=0.091, depth_loss=0.756, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28025])) that is different to the input size (torch.Size([28025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 263/10000 [02:26<1:30:11,  1.80it/s, total_loss=0.145, l1_loss=0.127, dssim_loss=0.109, depth_loss=1.03, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28425])) that is different to the input size (torch.Size([28425, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 275/10000 [02:33<1:32:10,  1.76it/s, total_loss=0.097, l1_loss=0.092, dssim_loss=0.06, depth_loss=0.791, psnr=16.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24807])) that is different to the input size (torch.Size([24807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 278/10000 [02:35<1:30:10,  1.80it/s, total_loss=0.144, l1_loss=0.137, dssim_loss=0.087, depth_loss=1.15, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21013])) that is different to the input size (torch.Size([21013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                            | 282/10000 [02:37<1:29:37,  1.81it/s, total_loss=0.197, l1_loss=0.183, dssim_loss=0.124, depth_loss=0.639, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19411])) that is different to the input size (torch.Size([19411, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 286/10000 [02:39<1:29:53,  1.80it/s, total_loss=0.121, l1_loss=0.115, dssim_loss=0.072, depth_loss=1.02, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27939])) that is different to the input size (torch.Size([27939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 296/10000 [02:44<1:27:46,  1.84it/s, total_loss=0.141, l1_loss=0.133, dssim_loss=0.088, depth_loss=1.15, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28237])) that is different to the input size (torch.Size([28237, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 301/10000 [02:47<1:28:39,  1.82it/s, total_loss=0.125, l1_loss=0.117, dssim_loss=0.079, depth_loss=0.864, psnr=14.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28072])) that is different to the input size (torch.Size([28072, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 311/10000 [02:53<1:29:14,  1.81it/s, total_loss=0.121, l1_loss=0.109, dssim_loss=0.083, depth_loss=0.899, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25088])) that is different to the input size (torch.Size([25088, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                             | 314/10000 [02:54<1:29:26,  1.80it/s, total_loss=0.112, l1_loss=0.104, dssim_loss=0.073, depth_loss=0.83, psnr=15]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26669])) that is different to the input size (torch.Size([26669, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                           | 315/10000 [02:55<1:30:22,  1.79it/s, total_loss=0.17, l1_loss=0.147, dssim_loss=0.131, depth_loss=0.709, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28841])) that is different to the input size (torch.Size([28841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 317/10000 [02:56<1:30:28,  1.78it/s, total_loss=0.147, l1_loss=0.133, dssim_loss=0.103, depth_loss=0.626, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28494])) that is different to the input size (torch.Size([28494, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                           | 332/10000 [03:05<1:31:43,  1.76it/s, total_loss=0.174, l1_loss=0.147, dssim_loss=0.14, depth_loss=0.717, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27707])) that is different to the input size (torch.Size([27707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                           | 337/10000 [03:07<1:30:39,  1.78it/s, total_loss=0.141, l1_loss=0.126, dssim_loss=0.101, depth_loss=0.63, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25013])) that is different to the input size (torch.Size([25013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                          | 345/10000 [03:12<1:29:55,  1.79it/s, total_loss=0.148, l1_loss=0.131, dssim_loss=0.107, depth_loss=0.999, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28743])) that is different to the input size (torch.Size([28743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                            | 352/10000 [03:16<1:30:22,  1.78it/s, total_loss=0.13, l1_loss=0.123, dssim_loss=0.078, depth_loss=1.21, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23172])) that is different to the input size (torch.Size([23172, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                           | 358/10000 [03:19<1:32:16,  1.74it/s, total_loss=0.155, l1_loss=0.139, dssim_loss=0.108, depth_loss=0.58, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20782])) that is different to the input size (torch.Size([20782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                           | 366/10000 [03:24<1:29:49,  1.79it/s, total_loss=0.155, l1_loss=0.137, dssim_loss=0.114, depth_loss=1.06, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20692])) that is different to the input size (torch.Size([20692, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                          | 368/10000 [03:25<1:29:39,  1.79it/s, total_loss=0.144, l1_loss=0.126, dssim_loss=0.108, depth_loss=0.955, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27693])) that is different to the input size (torch.Size([27693, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                           | 371/10000 [03:26<1:28:18,  1.82it/s, total_loss=0.142, l1_loss=0.129, dssim_loss=0.095, depth_loss=1.05, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28740])) that is different to the input size (torch.Size([28740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                             | 375/10000 [03:29<1:30:03,  1.78it/s, total_loss=0.105, l1_loss=0.1, dssim_loss=0.063, depth_loss=1.05, psnr=15.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18927])) that is different to the input size (torch.Size([18927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                          | 381/10000 [03:32<1:29:52,  1.78it/s, total_loss=0.203, l1_loss=0.176, dssim_loss=0.155, depth_loss=0.789, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21555])) that is different to the input size (torch.Size([21555, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                           | 382/10000 [03:33<1:28:38,  1.81it/s, total_loss=0.152, l1_loss=0.141, dssim_loss=0.099, depth_loss=1.04, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19859])) that is different to the input size (torch.Size([19859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                           | 384/10000 [03:34<1:27:23,  1.83it/s, total_loss=0.139, l1_loss=0.129, dssim_loss=0.091, depth_loss=1.07, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28569])) that is different to the input size (torch.Size([28569, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                            | 401/10000 [03:43<1:29:08,  1.79it/s, total_loss=0.184, l1_loss=0.155, dssim_loss=0.15, depth_loss=1.11, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25262])) that is different to the input size (torch.Size([25262, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                            | 410/10000 [03:48<1:29:58,  1.78it/s, total_loss=0.165, l1_loss=0.141, dssim_loss=0.13, depth_loss=0.71, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18464])) that is different to the input size (torch.Size([18464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                          | 444/10000 [04:07<1:29:30,  1.78it/s, total_loss=0.133, l1_loss=0.115, dssim_loss=0.102, depth_loss=0.955, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22438])) that is different to the input size (torch.Size([22438, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                            | 455/10000 [04:14<1:28:45,  1.79it/s, total_loss=0.185, l1_loss=0.158, dssim_loss=0.146, depth_loss=1.4, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15129])) that is different to the input size (torch.Size([15129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                            | 458/10000 [04:15<1:27:27,  1.82it/s, total_loss=0.172, l1_loss=0.145, dssim_loss=0.142, depth_loss=1.1, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25587])) that is different to the input size (torch.Size([25587, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                          | 462/10000 [04:17<1:28:57,  1.79it/s, total_loss=0.109, l1_loss=0.099, dssim_loss=0.074, depth_loss=0.876, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22729])) that is different to the input size (torch.Size([22729, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                         | 492/10000 [04:34<1:29:20,  1.77it/s, total_loss=0.083, l1_loss=0.078, dssim_loss=0.051, depth_loss=0.836, psnr=17.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20785])) that is different to the input size (torch.Size([20785, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                         | 498/10000 [04:37<1:28:23,  1.79it/s, total_loss=0.174, l1_loss=0.152, dssim_loss=0.132, depth_loss=0.718, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17938])) that is different to the input size (torch.Size([17938, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                         | 501/10000 [05:10<18:31:15,  7.02s/it, total_loss=0.163, l1_loss=0.141, dssim_loss=0.126, depth_loss=1.36, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21394])) that is different to the input size (torch.Size([21394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_500.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                         | 504/10000 [05:12<7:19:23,  2.78s/it, total_loss=0.151, l1_loss=0.137, dssim_loss=0.105, depth_loss=0.995, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22538])) that is different to the input size (torch.Size([22538, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                          | 509/10000 [05:14<2:26:24,  1.08it/s, total_loss=0.148, l1_loss=0.129, dssim_loss=0.113, depth_loss=1.26, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21464])) that is different to the input size (torch.Size([21464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                          | 515/10000 [05:18<1:35:20,  1.66it/s, total_loss=0.135, l1_loss=0.129, dssim_loss=0.079, depth_loss=1.21, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26610])) that is different to the input size (torch.Size([26610, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▌                                           | 559/10000 [05:42<1:29:27,  1.76it/s, total_loss=0.12, l1_loss=0.113, dssim_loss=0.073, depth_loss=1.21, psnr=14.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25069])) that is different to the input size (torch.Size([25069, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                            | 562/10000 [05:44<1:28:14,  1.78it/s, total_loss=0.16, l1_loss=0.135, dssim_loss=0.13, depth_loss=1.05, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28157])) that is different to the input size (torch.Size([28157, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▍                                         | 563/10000 [05:45<1:29:18,  1.76it/s, total_loss=0.191, l1_loss=0.167, dssim_loss=0.143, depth_loss=0.865, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28081])) that is different to the input size (torch.Size([28081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▌                                          | 567/10000 [05:47<1:30:13,  1.74it/s, total_loss=0.156, l1_loss=0.138, dssim_loss=0.116, depth_loss=1.05, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25948])) that is different to the input size (torch.Size([25948, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▌                                          | 574/10000 [05:51<1:26:27,  1.82it/s, total_loss=0.131, l1_loss=0.121, dssim_loss=0.085, depth_loss=1.07, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22124])) that is different to the input size (torch.Size([22124, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                          | 613/10000 [06:13<1:28:29,  1.77it/s, total_loss=0.152, l1_loss=0.134, dssim_loss=0.112, depth_loss=1.05, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24384])) that is different to the input size (torch.Size([24384, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                         | 617/10000 [06:15<1:29:04,  1.76it/s, total_loss=0.079, l1_loss=0.074, dssim_loss=0.049, depth_loss=0.844, psnr=17.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27915])) that is different to the input size (torch.Size([27915, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                           | 622/10000 [06:18<1:27:05,  1.79it/s, total_loss=0.174, l1_loss=0.149, dssim_loss=0.137, depth_loss=1.4, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15961])) that is different to the input size (torch.Size([15961, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                         | 624/10000 [06:19<1:26:35,  1.80it/s, total_loss=0.152, l1_loss=0.136, dssim_loss=0.108, depth_loss=0.694, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24347])) that is different to the input size (torch.Size([24347, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                          | 637/10000 [06:26<1:28:20,  1.77it/s, total_loss=0.15, l1_loss=0.139, dssim_loss=0.099, depth_loss=0.695, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27841])) that is different to the input size (torch.Size([27841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|██▉                                          | 652/10000 [06:35<1:28:19,  1.76it/s, total_loss=0.182, l1_loss=0.16, dssim_loss=0.136, depth_loss=0.759, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25931])) that is different to the input size (torch.Size([25931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███                                           | 670/10000 [06:45<1:27:41,  1.77it/s, total_loss=0.13, l1_loss=0.116, dssim_loss=0.095, depth_loss=1.01, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28725])) that is different to the input size (torch.Size([28725, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▏                                        | 733/10000 [07:21<1:28:21,  1.75it/s, total_loss=0.142, l1_loss=0.122, dssim_loss=0.111, depth_loss=0.723, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23496])) that is different to the input size (torch.Size([23496, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▍                                       | 1205/10000 [12:19<1:22:16,  1.78it/s, total_loss=0.145, l1_loss=0.122, dssim_loss=0.12, depth_loss=1.22, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24336])) that is different to the input size (torch.Size([24336, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_1000.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▋                                        | 1227/10000 [12:31<1:22:17,  1.78it/s, total_loss=0.15, l1_loss=0.13, dssim_loss=0.114, depth_loss=1.25, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28631])) that is different to the input size (torch.Size([28631, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 24%|██████████▊                                 | 2447/10000 [25:13<1:17:51,  1.62it/s, total_loss=0.066, l1_loss=0.063, dssim_loss=0.04, depth_loss=0.875, psnr=18.7]
Video saved to outputs/video_1500.mp4
Video saved to outputs/video_2000.mp4
Traceback (most recent call last):
  File "/home/ryan910702/hw1-nain9172/run.py", line 53, in <module>
    trainer.train()
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 122, in train
    "rendered_video": self.logger.Video(output_path, format="mp4")
      ^^^^^^^^^^^^^^^^^
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 75, in train_step
    # Total weighted loss
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
