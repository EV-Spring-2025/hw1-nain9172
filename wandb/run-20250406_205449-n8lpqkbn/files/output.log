Video saved to outputs/video_0.mp4
  0%|                                                                                                                                         | 0/1000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18398])) that is different to the input size (torch.Size([18398, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                      | 1/1000 [00:01<17:21,  1.04s/it, total_loss=0.693, l1_loss=0.564, dssim_loss=0.604, depth_loss=1.4, psnr=4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15606])) that is different to the input size (torch.Size([15606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                  | 2/1000 [00:02<17:09,  1.03s/it, total_loss=0.642, l1_loss=0.531, dssim_loss=0.542, depth_loss=1.99, psnr=4.84]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20721])) that is different to the input size (torch.Size([20721, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                  | 3/1000 [00:02<16:20,  1.02it/s, total_loss=0.715, l1_loss=0.579, dssim_loss=0.63, depth_loss=1.38, psnr=3.99]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15732])) that is different to the input size (torch.Size([15732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                  | 4/1000 [00:03<15:57,  1.04it/s, total_loss=0.683, l1_loss=0.566, dssim_loss=0.575, depth_loss=1.4, psnr=4.24]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20624])) that is different to the input size (torch.Size([20624, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▎                                                 | 5/1000 [00:04<15:47,  1.05it/s, total_loss=0.646, l1_loss=0.529, dssim_loss=0.558, depth_loss=1.84, psnr=4.76]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19561])) that is different to the input size (torch.Size([19561, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                 | 6/1000 [00:05<15:41,  1.06it/s, total_loss=0.765, l1_loss=0.615, dssim_loss=0.682, depth_loss=1.69, psnr=3.45]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16740])) that is different to the input size (torch.Size([16740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                 | 7/1000 [00:06<15:36,  1.06it/s, total_loss=0.764, l1_loss=0.622, dssim_loss=0.667, depth_loss=1.57, psnr=3.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17134])) that is different to the input size (torch.Size([17134, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                 | 8/1000 [00:07<15:34,  1.06it/s, total_loss=0.659, l1_loss=0.552, dssim_loss=0.544, depth_loss=1.54, psnr=4.53]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16792])) that is different to the input size (torch.Size([16792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                 | 9/1000 [00:08<16:05,  1.03it/s, total_loss=0.779, l1_loss=0.635, dssim_loss=0.676, depth_loss=1.49, psnr=3.43]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15636])) that is different to the input size (torch.Size([15636, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                | 10/1000 [00:09<15:54,  1.04it/s, total_loss=0.572, l1_loss=0.484, dssim_loss=0.462, depth_loss=1.72, psnr=5.64]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21102])) that is different to the input size (torch.Size([21102, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                | 11/1000 [00:10<15:47,  1.04it/s, total_loss=0.458, l1_loss=0.404, dssim_loss=0.336, depth_loss=1.45, psnr=6.89]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20290])) that is different to the input size (torch.Size([20290, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                  | 12/1000 [00:11<15:42,  1.05it/s, total_loss=0.406, l1_loss=0.36, dssim_loss=0.295, depth_loss=1.41, psnr=7.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20683])) that is different to the input size (torch.Size([20683, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                                | 13/1000 [00:12<15:36,  1.05it/s, total_loss=0.587, l1_loss=0.491, dssim_loss=0.487, depth_loss=1.85, psnr=5.44]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20814])) that is different to the input size (torch.Size([20814, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                                | 14/1000 [00:13<15:33,  1.06it/s, total_loss=0.586, l1_loss=0.488, dssim_loss=0.488, depth_loss=1.89, psnr=5.46]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15594])) that is different to the input size (torch.Size([15594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                                | 17/1000 [00:16<15:32,  1.05it/s, total_loss=0.501, l1_loss=0.432, dssim_loss=0.388, depth_loss=1.76, psnr=6.53]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16954])) that is different to the input size (torch.Size([16954, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                                 | 18/1000 [00:17<15:26,  1.06it/s, total_loss=0.572, l1_loss=0.495, dssim_loss=0.44, depth_loss=1.49, psnr=5.44]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15313])) that is different to the input size (torch.Size([15313, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                                | 19/1000 [00:18<15:22,  1.06it/s, total_loss=0.484, l1_loss=0.421, dssim_loss=0.367, depth_loss=2.04, psnr=6.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19047])) that is different to the input size (torch.Size([19047, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                | 21/1000 [00:20<15:16,  1.07it/s, total_loss=0.442, l1_loss=0.388, dssim_loss=0.329, depth_loss=1.43, psnr=6.87]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14586])) that is different to the input size (torch.Size([14586, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                  | 22/1000 [00:21<15:39,  1.04it/s, total_loss=0.538, l1_loss=0.461, dssim_loss=0.423, depth_loss=1.5, psnr=5.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15458])) that is different to the input size (torch.Size([15458, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                                | 23/1000 [00:21<15:29,  1.05it/s, total_loss=0.307, l1_loss=0.29, dssim_loss=0.186, depth_loss=1.38, psnr=8.43]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15705])) that is different to the input size (torch.Size([15705, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                               | 24/1000 [00:22<15:22,  1.06it/s, total_loss=0.393, l1_loss=0.349, dssim_loss=0.284, depth_loss=1.41, psnr=7.41]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17319])) that is different to the input size (torch.Size([17319, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                               | 25/1000 [00:23<15:18,  1.06it/s, total_loss=0.572, l1_loss=0.486, dssim_loss=0.459, depth_loss=1.91, psnr=5.58]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20188])) that is different to the input size (torch.Size([20188, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                               | 28/1000 [00:26<15:33,  1.04it/s, total_loss=0.486, l1_loss=0.421, dssim_loss=0.373, depth_loss=1.49, psnr=6.45]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16386])) that is different to the input size (torch.Size([16386, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                               | 29/1000 [00:27<15:26,  1.05it/s, total_loss=0.443, l1_loss=0.399, dssim_loss=0.309, depth_loss=1.42, psnr=6.94]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16490])) that is different to the input size (torch.Size([16490, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                                | 30/1000 [00:28<15:18,  1.06it/s, total_loss=0.518, l1_loss=0.447, dssim_loss=0.401, depth_loss=2.1, psnr=6.38]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15754])) that is different to the input size (torch.Size([15754, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                               | 31/1000 [00:29<15:14,  1.06it/s, total_loss=0.338, l1_loss=0.322, dssim_loss=0.202, depth_loss=1.34, psnr=7.46]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16352])) that is different to the input size (torch.Size([16352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▋                                                | 33/1000 [00:31<15:07,  1.07it/s, total_loss=0.47, l1_loss=0.405, dssim_loss=0.364, depth_loss=1.85, psnr=6.61]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18217])) that is different to the input size (torch.Size([18217, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▋                                               | 34/1000 [00:32<15:04,  1.07it/s, total_loss=0.336, l1_loss=0.313, dssim_loss=0.215, depth_loss=1.49, psnr=8.45]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21083])) that is different to the input size (torch.Size([21083, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                               | 35/1000 [00:33<15:29,  1.04it/s, total_loss=0.384, l1_loss=0.369, dssim_loss=0.224, depth_loss=1.36, psnr=7.06]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20866])) that is different to the input size (torch.Size([20866, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                               | 36/1000 [00:34<15:26,  1.04it/s, total_loss=0.385, l1_loss=0.368, dssim_loss=0.226, depth_loss=1.32, psnr=6.98]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20374])) that is different to the input size (torch.Size([20374, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                               | 37/1000 [00:35<15:20,  1.05it/s, total_loss=0.395, l1_loss=0.361, dssim_loss=0.266, depth_loss=1.34, psnr=7.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15944])) that is different to the input size (torch.Size([15944, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                               | 38/1000 [00:36<15:13,  1.05it/s, total_loss=0.462, l1_loss=0.405, dssim_loss=0.344, depth_loss=2.13, psnr=7.13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14895])) that is different to the input size (torch.Size([14895, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                                | 40/1000 [00:38<15:39,  1.02it/s, total_loss=0.377, l1_loss=0.336, dssim_loss=0.27, depth_loss=1.34, psnr=7.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20935])) that is different to the input size (torch.Size([20935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                                 | 41/1000 [00:39<15:27,  1.03it/s, total_loss=0.47, l1_loss=0.408, dssim_loss=0.359, depth_loss=1.8, psnr=6.92]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15598])) that is different to the input size (torch.Size([15598, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                               | 42/1000 [00:40<15:16,  1.05it/s, total_loss=0.426, l1_loss=0.376, dssim_loss=0.313, depth_loss=2.13, psnr=7.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19102])) that is different to the input size (torch.Size([19102, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                               | 43/1000 [00:41<15:09,  1.05it/s, total_loss=0.298, l1_loss=0.287, dssim_loss=0.172, depth_loss=1.49, psnr=8.92]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15524])) that is different to the input size (torch.Size([15524, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██▏                                              | 45/1000 [00:42<15:00,  1.06it/s, total_loss=0.292, l1_loss=0.277, dssim_loss=0.176, depth_loss=1.39, psnr=8.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21254])) that is different to the input size (torch.Size([21254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                              | 46/1000 [00:44<15:53,  1.00it/s, total_loss=0.418, l1_loss=0.366, dssim_loss=0.313, depth_loss=1.88, psnr=7.47]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19058])) that is different to the input size (torch.Size([19058, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                              | 47/1000 [00:44<15:34,  1.02it/s, total_loss=0.496, l1_loss=0.432, dssim_loss=0.377, depth_loss=1.29, psnr=6.39]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17907])) that is different to the input size (torch.Size([17907, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                              | 48/1000 [00:45<15:50,  1.00it/s, total_loss=0.294, l1_loss=0.277, dssim_loss=0.182, depth_loss=1.51, psnr=8.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21243])) that is different to the input size (torch.Size([21243, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                               | 49/1000 [00:46<15:31,  1.02it/s, total_loss=0.397, l1_loss=0.352, dssim_loss=0.29, depth_loss=1.85, psnr=7.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13568])) that is different to the input size (torch.Size([13568, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                              | 50/1000 [00:47<15:14,  1.04it/s, total_loss=0.497, l1_loss=0.439, dssim_loss=0.366, depth_loss=1.38, psnr=6.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20756])) that is different to the input size (torch.Size([20756, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                              | 52/1000 [00:49<14:58,  1.06it/s, total_loss=0.338, l1_loss=0.308, dssim_loss=0.229, depth_loss=1.47, psnr=8.18]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17464])) that is different to the input size (torch.Size([17464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                              | 53/1000 [00:50<14:51,  1.06it/s, total_loss=0.291, l1_loss=0.271, dssim_loss=0.185, depth_loss=1.48, psnr=9.01]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17261])) that is different to the input size (torch.Size([17261, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▋                                               | 54/1000 [00:51<15:11,  1.04it/s, total_loss=0.267, l1_loss=0.26, dssim_loss=0.148, depth_loss=1.41, psnr=9.42]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15164])) that is different to the input size (torch.Size([15164, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                              | 55/1000 [00:52<15:05,  1.04it/s, total_loss=0.379, l1_loss=0.335, dssim_loss=0.278, depth_loss=1.51, psnr=7.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18595])) that is different to the input size (torch.Size([18595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                              | 58/1000 [00:55<14:43,  1.07it/s, total_loss=0.434, l1_loss=0.394, dssim_loss=0.295, depth_loss=1.73, psnr=6.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20943])) that is different to the input size (torch.Size([20943, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▉                                               | 59/1000 [00:56<14:39,  1.07it/s, total_loss=0.279, l1_loss=0.259, dssim_loss=0.18, depth_loss=1.37, psnr=9.53]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17762])) that is different to the input size (torch.Size([17762, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▉                                              | 60/1000 [00:57<14:39,  1.07it/s, total_loss=0.253, l1_loss=0.247, dssim_loss=0.137, depth_loss=1.42, psnr=9.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12699])) that is different to the input size (torch.Size([12699, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███                                               | 61/1000 [00:58<15:00,  1.04it/s, total_loss=0.419, l1_loss=0.38, dssim_loss=0.289, depth_loss=1.33, psnr=7.52]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20634])) that is different to the input size (torch.Size([20634, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███                                              | 62/1000 [00:59<14:53,  1.05it/s, total_loss=0.268, l1_loss=0.253, dssim_loss=0.164, depth_loss=1.42, psnr=9.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11264])) that is different to the input size (torch.Size([11264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███▏                                               | 63/1000 [01:00<14:43,  1.06it/s, total_loss=0.412, l1_loss=0.375, dssim_loss=0.28, depth_loss=1.21, psnr=7.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21011])) that is different to the input size (torch.Size([21011, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███▎                                               | 64/1000 [01:01<14:40,  1.06it/s, total_loss=0.34, l1_loss=0.31, dssim_loss=0.231, depth_loss=1.78, psnr=8.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20527])) that is different to the input size (torch.Size([20527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███▏                                             | 65/1000 [01:01<14:38,  1.06it/s, total_loss=0.335, l1_loss=0.306, dssim_loss=0.226, depth_loss=1.29, psnr=8.36]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19992])) that is different to the input size (torch.Size([19992, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▏                                             | 66/1000 [01:03<15:01,  1.04it/s, total_loss=0.252, l1_loss=0.242, dssim_loss=0.145, depth_loss=1.45, psnr=9.89]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17822])) that is different to the input size (torch.Size([17822, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                              | 67/1000 [01:03<14:51,  1.05it/s, total_loss=0.254, l1_loss=0.237, dssim_loss=0.16, depth_loss=1.48, psnr=9.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20763])) that is different to the input size (torch.Size([20763, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▍                                             | 69/1000 [01:05<14:41,  1.06it/s, total_loss=0.261, l1_loss=0.243, dssim_loss=0.166, depth_loss=1.33, psnr=9.98]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20566])) that is different to the input size (torch.Size([20566, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▌                                             | 72/1000 [01:08<14:31,  1.07it/s, total_loss=0.277, l1_loss=0.259, dssim_loss=0.174, depth_loss=1.27, psnr=9.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16707])) that is different to the input size (torch.Size([16707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▋                                              | 73/1000 [01:09<14:51,  1.04it/s, total_loss=0.269, l1_loss=0.256, dssim_loss=0.16, depth_loss=1.37, psnr=9.24]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15236])) that is different to the input size (torch.Size([15236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▋                                             | 74/1000 [01:10<14:40,  1.05it/s, total_loss=0.342, l1_loss=0.309, dssim_loss=0.238, depth_loss=2.08, psnr=8.62]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16387])) that is different to the input size (torch.Size([16387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▋                                             | 75/1000 [01:11<14:32,  1.06it/s, total_loss=0.287, l1_loss=0.267, dssim_loss=0.184, depth_loss=1.38, psnr=8.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20583])) that is different to the input size (torch.Size([20583, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▋                                             | 76/1000 [01:12<14:27,  1.06it/s, total_loss=0.321, l1_loss=0.295, dssim_loss=0.214, depth_loss=1.65, psnr=8.87]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18397])) that is different to the input size (torch.Size([18397, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▊                                              | 77/1000 [01:13<14:24,  1.07it/s, total_loss=0.38, l1_loss=0.343, dssim_loss=0.265, depth_loss=1.24, psnr=7.97]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11743])) that is different to the input size (torch.Size([11743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▉                                              | 78/1000 [01:14<14:19,  1.07it/s, total_loss=0.29, l1_loss=0.265, dssim_loss=0.194, depth_loss=1.22, psnr=8.93]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15445])) that is different to the input size (torch.Size([15445, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|████                                               | 80/1000 [01:16<14:37,  1.05it/s, total_loss=0.344, l1_loss=0.31, dssim_loss=0.24, depth_loss=2.02, psnr=8.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15798])) that is different to the input size (torch.Size([15798, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▉                                             | 81/1000 [01:17<14:28,  1.06it/s, total_loss=0.295, l1_loss=0.283, dssim_loss=0.173, depth_loss=1.27, psnr=8.05]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20457])) that is different to the input size (torch.Size([20457, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|████▏                                              | 82/1000 [01:18<14:24,  1.06it/s, total_loss=0.243, l1_loss=0.233, dssim_loss=0.142, depth_loss=1.41, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20713])) that is different to the input size (torch.Size([20713, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|████                                             | 83/1000 [01:18<14:19,  1.07it/s, total_loss=0.265, l1_loss=0.247, dssim_loss=0.168, depth_loss=1.25, psnr=9.93]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18410])) that is different to the input size (torch.Size([18410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|████                                             | 84/1000 [01:19<14:15,  1.07it/s, total_loss=0.355, l1_loss=0.323, dssim_loss=0.241, depth_loss=1.21, psnr=8.29]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17600])) that is different to the input size (torch.Size([17600, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|████▏                                            | 85/1000 [01:20<14:13,  1.07it/s, total_loss=0.323, l1_loss=0.294, dssim_loss=0.218, depth_loss=1.61, psnr=8.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16468])) that is different to the input size (torch.Size([16468, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▍                                              | 86/1000 [01:21<14:38,  1.04it/s, total_loss=0.255, l1_loss=0.239, dssim_loss=0.159, depth_loss=1.37, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16550])) that is different to the input size (torch.Size([16550, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▎                                            | 88/1000 [01:23<14:25,  1.05it/s, total_loss=0.271, l1_loss=0.251, dssim_loss=0.175, depth_loss=1.41, psnr=9.37]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14253])) that is different to the input size (torch.Size([14253, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▌                                              | 90/1000 [01:25<14:15,  1.06it/s, total_loss=0.22, l1_loss=0.217, dssim_loss=0.116, depth_loss=1.4, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20580])) that is different to the input size (torch.Size([20580, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▌                                             | 91/1000 [01:26<14:11,  1.07it/s, total_loss=0.27, l1_loss=0.252, dssim_loss=0.171, depth_loss=1.24, psnr=9.61]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17429])) that is different to the input size (torch.Size([17429, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▌                                            | 92/1000 [01:27<14:08,  1.07it/s, total_loss=0.248, l1_loss=0.234, dssim_loss=0.151, depth_loss=1.39, psnr=9.88]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19828])) that is different to the input size (torch.Size([19828, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▌                                            | 93/1000 [01:28<14:29,  1.04it/s, total_loss=0.282, l1_loss=0.263, dssim_loss=0.178, depth_loss=1.54, psnr=9.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16140])) that is different to the input size (torch.Size([16140, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▋                                            | 95/1000 [01:30<14:11,  1.06it/s, total_loss=0.248, l1_loss=0.231, dssim_loss=0.157, depth_loss=1.35, psnr=9.92]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19770])) that is different to the input size (torch.Size([19770, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▊                                            | 97/1000 [01:32<14:05,  1.07it/s, total_loss=0.228, l1_loss=0.219, dssim_loss=0.131, depth_loss=1.39, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17532])) that is different to the input size (torch.Size([17532, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▊                                            | 99/1000 [01:34<14:24,  1.04it/s, total_loss=0.238, l1_loss=0.223, dssim_loss=0.149, depth_loss=1.23, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15271])) that is different to the input size (torch.Size([15271, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▉                                            | 101/1000 [01:36<14:15,  1.05it/s, total_loss=0.278, l1_loss=0.258, dssim_loss=0.18, depth_loss=1.24, psnr=9.32]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11732])) that is different to the input size (torch.Size([11732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▉                                           | 102/1000 [01:36<14:06,  1.06it/s, total_loss=0.293, l1_loss=0.267, dssim_loss=0.198, depth_loss=1.18, psnr=9.02]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20767])) that is different to the input size (torch.Size([20767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▉                                           | 103/1000 [01:37<14:02,  1.06it/s, total_loss=0.262, l1_loss=0.243, dssim_loss=0.171, depth_loss=1.64, psnr=9.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16994])) that is different to the input size (torch.Size([16994, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|█████▏                                            | 104/1000 [01:38<14:02,  1.06it/s, total_loss=0.293, l1_loss=0.267, dssim_loss=0.2, depth_loss=1.87, psnr=9.12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19946])) that is different to the input size (torch.Size([19946, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|█████▎                                            | 105/1000 [01:39<13:57,  1.07it/s, total_loss=0.44, l1_loss=0.392, dssim_loss=0.317, depth_loss=1.5, psnr=6.69]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17259])) that is different to the input size (torch.Size([17259, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▏                                          | 107/1000 [01:41<14:15,  1.04it/s, total_loss=0.259, l1_loss=0.242, dssim_loss=0.164, depth_loss=1.28, psnr=9.21]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21121])) that is different to the input size (torch.Size([21121, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▏                                          | 108/1000 [01:42<14:09,  1.05it/s, total_loss=0.236, l1_loss=0.223, dssim_loss=0.145, depth_loss=1.27, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20391])) that is different to the input size (torch.Size([20391, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▏                                          | 109/1000 [01:43<14:05,  1.05it/s, total_loss=0.423, l1_loss=0.377, dssim_loss=0.303, depth_loss=1.55, psnr=6.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16227])) that is different to the input size (torch.Size([16227, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▍                                           | 110/1000 [01:44<14:02,  1.06it/s, total_loss=0.29, l1_loss=0.262, dssim_loss=0.201, depth_loss=2.01, psnr=9.05]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20867])) that is different to the input size (torch.Size([20867, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▍                                           | 111/1000 [01:45<14:21,  1.03it/s, total_loss=0.319, l1_loss=0.289, dssim_loss=0.22, depth_loss=1.74, psnr=8.45]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20363])) that is different to the input size (torch.Size([20363, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▍                                          | 112/1000 [01:46<14:10,  1.04it/s, total_loss=0.246, l1_loss=0.228, dssim_loss=0.157, depth_loss=1.57, psnr=9.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15435])) that is different to the input size (torch.Size([15435, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▍                                          | 113/1000 [01:47<14:02,  1.05it/s, total_loss=0.229, l1_loss=0.218, dssim_loss=0.138, depth_loss=1.22, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21204])) that is different to the input size (torch.Size([21204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▋                                          | 118/1000 [01:52<13:45,  1.07it/s, total_loss=0.221, l1_loss=0.207, dssim_loss=0.138, depth_loss=1.25, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19723])) that is different to the input size (torch.Size([19723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▊                                          | 122/1000 [01:55<13:53,  1.05it/s, total_loss=0.275, l1_loss=0.249, dssim_loss=0.188, depth_loss=1.77, psnr=9.01]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15844])) that is different to the input size (torch.Size([15844, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▍                                            | 126/1000 [01:59<14:09,  1.03it/s, total_loss=0.27, l1_loss=0.25, dssim_loss=0.175, depth_loss=1.2, psnr=9.69]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16682])) that is different to the input size (torch.Size([16682, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▎                                          | 129/1000 [02:02<13:49,  1.05it/s, total_loss=0.23, l1_loss=0.215, dssim_loss=0.145, depth_loss=1.22, psnr=9.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20236])) that is different to the input size (torch.Size([20236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▌                                           | 130/1000 [02:03<13:42,  1.06it/s, total_loss=0.19, l1_loss=0.183, dssim_loss=0.11, depth_loss=1.36, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11303])) that is different to the input size (torch.Size([11303, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▎                                         | 131/1000 [02:04<13:38,  1.06it/s, total_loss=0.267, l1_loss=0.245, dssim_loss=0.176, depth_loss=1.13, psnr=9.59]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16945])) that is different to the input size (torch.Size([16945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▎                                         | 132/1000 [02:05<14:04,  1.03it/s, total_loss=0.196, l1_loss=0.188, dssim_loss=0.115, depth_loss=1.31, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15443])) that is different to the input size (torch.Size([15443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▋                                           | 133/1000 [02:06<13:50,  1.04it/s, total_loss=0.199, l1_loss=0.187, dssim_loss=0.123, depth_loss=1.24, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21021])) that is different to the input size (torch.Size([21021, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▋                                          | 137/1000 [02:10<13:58,  1.03it/s, total_loss=0.231, l1_loss=0.212, dssim_loss=0.154, depth_loss=1.6, psnr=9.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21003])) that is different to the input size (torch.Size([21003, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|███████▏                                           | 140/1000 [02:13<13:30,  1.06it/s, total_loss=0.201, l1_loss=0.189, dssim_loss=0.124, depth_loss=1.2, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20100])) that is different to the input size (torch.Size([20100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|███████                                           | 141/1000 [02:14<13:28,  1.06it/s, total_loss=0.22, l1_loss=0.204, dssim_loss=0.142, depth_loss=1.5, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16542])) that is different to the input size (torch.Size([16542, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▊                                         | 142/1000 [02:15<13:24,  1.07it/s, total_loss=0.183, l1_loss=0.176, dssim_loss=0.106, depth_loss=1.25, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17924])) that is different to the input size (torch.Size([17924, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▉                                         | 145/1000 [02:17<13:39,  1.04it/s, total_loss=0.222, l1_loss=0.204, dssim_loss=0.145, depth_loss=1.23, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14595])) that is different to the input size (torch.Size([14595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▍                                           | 147/1000 [02:19<13:28,  1.06it/s, total_loss=0.267, l1_loss=0.241, dssim_loss=0.186, depth_loss=2, psnr=9.14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20452])) that is different to the input size (torch.Size([20452, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▏                                        | 149/1000 [02:21<13:20,  1.06it/s, total_loss=0.326, l1_loss=0.289, dssim_loss=0.237, depth_loss=1.54, psnr=8.58]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16149])) that is different to the input size (torch.Size([16149, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▏                                        | 150/1000 [02:22<13:18,  1.06it/s, total_loss=0.193, l1_loss=0.182, dssim_loss=0.118, depth_loss=1.27, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17905])) that is different to the input size (torch.Size([17905, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▍                                         | 151/1000 [02:23<13:43,  1.03it/s, total_loss=0.179, l1_loss=0.169, dssim_loss=0.11, depth_loss=1.37, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18562])) that is different to the input size (torch.Size([18562, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▎                                        | 153/1000 [02:25<13:25,  1.05it/s, total_loss=0.176, l1_loss=0.168, dssim_loss=0.104, depth_loss=1.29, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15792])) that is different to the input size (torch.Size([15792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▊                                         | 160/1000 [02:32<13:11,  1.06it/s, total_loss=0.23, l1_loss=0.214, dssim_loss=0.147, depth_loss=1.16, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20533])) that is different to the input size (torch.Size([20533, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▉                                         | 162/1000 [02:33<13:06,  1.07it/s, total_loss=0.295, l1_loss=0.272, dssim_loss=0.194, depth_loss=1.12, psnr=9.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16728])) that is different to the input size (torch.Size([16728, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▊                                        | 164/1000 [02:35<13:30,  1.03it/s, total_loss=0.172, l1_loss=0.163, dssim_loss=0.104, depth_loss=1.35, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19539])) that is different to the input size (torch.Size([19539, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 17%|████████                                        | 168/1000 [02:39<13:03,  1.06it/s, total_loss=0.233, l1_loss=0.215, dssim_loss=0.153, depth_loss=1.25, psnr=9.93]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13148])) that is different to the input size (torch.Size([13148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 17%|████████▏                                       | 170/1000 [02:41<13:16,  1.04it/s, total_loss=0.165, l1_loss=0.159, dssim_loss=0.095, depth_loss=1.21, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21225])) that is different to the input size (torch.Size([21225, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 17%|████████▏                                       | 171/1000 [02:42<13:08,  1.05it/s, total_loss=0.267, l1_loss=0.241, dssim_loss=0.185, depth_loss=1.71, psnr=9.28]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18423])) that is different to the input size (torch.Size([18423, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 17%|████████▎                                       | 172/1000 [02:43<13:03,  1.06it/s, total_loss=0.285, l1_loss=0.263, dssim_loss=0.186, depth_loss=1.15, psnr=9.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18354])) that is different to the input size (torch.Size([18354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 18%|████████▋                                        | 177/1000 [02:48<13:10,  1.04it/s, total_loss=0.349, l1_loss=0.316, dssim_loss=0.24, depth_loss=1.41, psnr=7.93]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16357])) that is different to the input size (torch.Size([16357, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 18%|████████▋                                       | 180/1000 [02:51<12:52,  1.06it/s, total_loss=0.186, l1_loss=0.175, dssim_loss=0.113, depth_loss=1.27, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20066])) that is different to the input size (torch.Size([20066, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 18%|████████▊                                       | 183/1000 [02:53<13:03,  1.04it/s, total_loss=0.157, l1_loss=0.153, dssim_loss=0.086, depth_loss=1.25, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15531])) that is different to the input size (torch.Size([15531, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 19%|█████████▏                                       | 188/1000 [02:58<12:37,  1.07it/s, total_loss=0.237, l1_loss=0.217, dssim_loss=0.16, depth_loss=1.08, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17474])) that is different to the input size (torch.Size([17474, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 19%|█████████▎                                       | 189/1000 [02:59<12:36,  1.07it/s, total_loss=0.219, l1_loss=0.204, dssim_loss=0.14, depth_loss=1.39, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16394])) that is different to the input size (torch.Size([16394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 19%|█████████▌                                        | 191/1000 [03:01<12:51,  1.05it/s, total_loss=0.25, l1_loss=0.225, dssim_loss=0.175, depth_loss=1.69, psnr=9.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18387])) that is different to the input size (torch.Size([18387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 19%|█████████▏                                      | 192/1000 [03:02<12:46,  1.05it/s, total_loss=0.271, l1_loss=0.248, dssim_loss=0.182, depth_loss=1.17, psnr=9.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19434])) that is different to the input size (torch.Size([19434, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 20%|█████████▍                                      | 197/1000 [03:07<12:48,  1.04it/s, total_loss=0.166, l1_loss=0.158, dssim_loss=0.099, depth_loss=1.32, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17575])) that is different to the input size (torch.Size([17575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 20%|█████████▋                                      | 203/1000 [03:12<12:51,  1.03it/s, total_loss=0.281, l1_loss=0.252, dssim_loss=0.197, depth_loss=1.49, psnr=8.91]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18791])) that is different to the input size (torch.Size([18791, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|██████████                                       | 206/1000 [03:15<12:33,  1.05it/s, total_loss=0.21, l1_loss=0.191, dssim_loss=0.141, depth_loss=1.48, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19579])) that is different to the input size (torch.Size([19579, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|█████████▉                                      | 207/1000 [03:16<12:34,  1.05it/s, total_loss=0.295, l1_loss=0.266, dssim_loss=0.207, depth_loss=1.34, psnr=8.73]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17165])) that is different to the input size (torch.Size([17165, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|█████████▉                                      | 208/1000 [03:17<12:49,  1.03it/s, total_loss=0.237, l1_loss=0.215, dssim_loss=0.164, depth_loss=1.72, psnr=9.78]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16167])) that is different to the input size (torch.Size([16167, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|██████████                                      | 209/1000 [03:18<12:41,  1.04it/s, total_loss=0.185, l1_loss=0.175, dssim_loss=0.113, depth_loss=1.24, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17876])) that is different to the input size (torch.Size([17876, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|██████████▏                                     | 211/1000 [03:20<12:26,  1.06it/s, total_loss=0.261, l1_loss=0.234, dssim_loss=0.185, depth_loss=1.57, psnr=9.54]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19299])) that is different to the input size (torch.Size([19299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|██████████▍                                      | 213/1000 [03:22<12:17,  1.07it/s, total_loss=0.233, l1_loss=0.221, dssim_loss=0.14, depth_loss=1.16, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18385])) that is different to the input size (torch.Size([18385, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 22%|██████████▌                                     | 220/1000 [03:28<12:07,  1.07it/s, total_loss=0.214, l1_loss=0.201, dssim_loss=0.131, depth_loss=1.09, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18800])) that is different to the input size (torch.Size([18800, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 23%|██████████▉                                     | 227/1000 [03:35<12:04,  1.07it/s, total_loss=0.249, l1_loss=0.224, dssim_loss=0.175, depth_loss=1.92, psnr=9.41]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14255])) that is different to the input size (torch.Size([14255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 23%|███████████▋                                       | 230/1000 [03:38<12:07,  1.06it/s, total_loss=0.246, l1_loss=0.218, dssim_loss=0.18, depth_loss=1.6, psnr=9.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13931])) that is different to the input size (torch.Size([13931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 24%|███████████▎                                    | 236/1000 [03:44<12:07,  1.05it/s, total_loss=0.265, l1_loss=0.239, dssim_loss=0.184, depth_loss=1.21, psnr=9.51]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20477])) that is different to the input size (torch.Size([20477, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 24%|███████████▎                                   | 240/1000 [03:47<11:55,  1.06it/s, total_loss=0.201, l1_loss=0.186, dssim_loss=0.132, depth_loss=0.965, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15375])) that is different to the input size (torch.Size([15375, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 24%|███████████▋                                    | 243/1000 [03:50<11:57,  1.06it/s, total_loss=0.226, l1_loss=0.205, dssim_loss=0.154, depth_loss=1.02, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18439])) that is different to the input size (torch.Size([18439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 25%|████████████▏                                    | 249/1000 [03:56<11:57,  1.05it/s, total_loss=0.231, l1_loss=0.208, dssim_loss=0.162, depth_loss=1.1, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12264])) that is different to the input size (torch.Size([12264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 27%|█████████████                                    | 266/1000 [04:12<11:29,  1.07it/s, total_loss=0.186, l1_loss=0.17, dssim_loss=0.124, depth_loss=1.11, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15299])) that is different to the input size (torch.Size([15299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 27%|█████████████▍                                   | 274/1000 [04:20<11:40,  1.04it/s, total_loss=0.159, l1_loss=0.151, dssim_loss=0.095, depth_loss=1.2, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11147])) that is different to the input size (torch.Size([11147, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 28%|█████████████▎                                  | 277/1000 [04:22<11:20,  1.06it/s, total_loss=0.156, l1_loss=0.148, dssim_loss=0.095, depth_loss=1.19, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15528])) that is different to the input size (torch.Size([15528, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 29%|██████████████▏                                  | 289/1000 [04:34<11:06,  1.07it/s, total_loss=0.254, l1_loss=0.223, dssim_loss=0.19, depth_loss=1.47, psnr=9.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20560])) that is different to the input size (torch.Size([20560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 30%|██████████████▌                                 | 303/1000 [04:47<10:57,  1.06it/s, total_loss=0.222, l1_loss=0.197, dssim_loss=0.162, depth_loss=1.56, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13554])) that is different to the input size (torch.Size([13554, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 31%|███████████████▋                                   | 307/1000 [04:51<11:02,  1.05it/s, total_loss=0.185, l1_loss=0.167, dssim_loss=0.129, depth_loss=1, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13182])) that is different to the input size (torch.Size([13182, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 31%|██████████████▊                                 | 308/1000 [04:52<10:56,  1.05it/s, total_loss=0.193, l1_loss=0.177, dssim_loss=0.127, depth_loss=1.06, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17022])) that is different to the input size (torch.Size([17022, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 31%|██████████████▋                                | 312/1000 [04:56<11:04,  1.04it/s, total_loss=0.194, l1_loss=0.176, dssim_loss=0.132, depth_loss=0.941, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18372])) that is different to the input size (torch.Size([18372, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 31%|███████████████                                 | 314/1000 [04:57<10:53,  1.05it/s, total_loss=0.164, l1_loss=0.15, dssim_loss=0.109, depth_loss=0.949, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20294])) that is different to the input size (torch.Size([20294, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 32%|███████████████▏                                | 317/1000 [05:00<10:44,  1.06it/s, total_loss=0.199, l1_loss=0.178, dssim_loss=0.14, depth_loss=0.995, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20183])) that is different to the input size (torch.Size([20183, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 32%|███████████████▌                                | 324/1000 [05:07<10:57,  1.03it/s, total_loss=0.219, l1_loss=0.195, dssim_loss=0.158, depth_loss=1.09, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20830])) that is different to the input size (torch.Size([20830, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 32%|███████████████▌                                | 325/1000 [05:08<10:49,  1.04it/s, total_loss=0.153, l1_loss=0.143, dssim_loss=0.097, depth_loss=1.14, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18412])) that is different to the input size (torch.Size([18412, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 33%|████████████████▋                                  | 327/1000 [05:10<10:38,  1.05it/s, total_loss=0.24, l1_loss=0.21, dssim_loss=0.18, depth_loss=1.29, psnr=9.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18352])) that is different to the input size (torch.Size([18352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 34%|████████████████▋                                | 340/1000 [05:22<10:23,  1.06it/s, total_loss=0.22, l1_loss=0.193, dssim_loss=0.163, depth_loss=1.76, psnr=9.98]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15407])) that is different to the input size (torch.Size([15407, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 34%|████████████████▍                               | 343/1000 [05:25<10:13,  1.07it/s, total_loss=0.121, l1_loss=0.116, dssim_loss=0.071, depth_loss=1.04, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17613])) that is different to the input size (torch.Size([17613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 35%|████████████████▌                               | 346/1000 [05:28<10:23,  1.05it/s, total_loss=0.225, l1_loss=0.198, dssim_loss=0.165, depth_loss=1.82, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16859])) that is different to the input size (torch.Size([16859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 35%|████████████████▋                               | 347/1000 [05:29<10:16,  1.06it/s, total_loss=0.213, l1_loss=0.187, dssim_loss=0.158, depth_loss=1.68, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19807])) that is different to the input size (torch.Size([19807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 35%|████████████████▊                               | 349/1000 [05:31<10:10,  1.07it/s, total_loss=0.183, l1_loss=0.168, dssim_loss=0.12, depth_loss=0.992, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15383])) that is different to the input size (torch.Size([15383, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 36%|█████████████████                               | 355/1000 [05:36<10:09,  1.06it/s, total_loss=0.166, l1_loss=0.155, dssim_loss=0.105, depth_loss=1.06, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21129])) that is different to the input size (torch.Size([21129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 37%|█████████████████▌                              | 366/1000 [05:47<09:57,  1.06it/s, total_loss=0.123, l1_loss=0.114, dssim_loss=0.078, depth_loss=1.09, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17771])) that is different to the input size (torch.Size([17771, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 37%|█████████████████▋                              | 369/1000 [05:49<09:50,  1.07it/s, total_loss=0.213, l1_loss=0.189, dssim_loss=0.155, depth_loss=1.12, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16977])) that is different to the input size (torch.Size([16977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 38%|██████████████████                              | 377/1000 [05:57<09:57,  1.04it/s, total_loss=0.154, l1_loss=0.145, dssim_loss=0.094, depth_loss=1.15, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16231])) that is different to the input size (torch.Size([16231, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 38%|██████████████████▍                             | 385/1000 [06:05<09:40,  1.06it/s, total_loss=0.156, l1_loss=0.14, dssim_loss=0.109, depth_loss=0.833, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13941])) that is different to the input size (torch.Size([13941, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 42%|█████████████████████▏                            | 423/1000 [06:40<09:05,  1.06it/s, total_loss=0.21, l1_loss=0.184, dssim_loss=0.157, depth_loss=1.1, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15214])) that is different to the input size (torch.Size([15214, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 42%|████████████████████▊                            | 425/1000 [06:42<08:58,  1.07it/s, total_loss=0.207, l1_loss=0.18, dssim_loss=0.157, depth_loss=1.75, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15666])) that is different to the input size (torch.Size([15666, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 43%|████████████████████▋                           | 431/1000 [06:48<08:58,  1.06it/s, total_loss=0.206, l1_loss=0.179, dssim_loss=0.156, depth_loss=1.46, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19204])) that is different to the input size (torch.Size([19204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 44%|████████████████████▌                          | 438/1000 [06:55<08:50,  1.06it/s, total_loss=0.196, l1_loss=0.179, dssim_loss=0.133, depth_loss=0.968, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17318])) that is different to the input size (torch.Size([17318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 44%|████████████████████▋                          | 440/1000 [06:57<08:44,  1.07it/s, total_loss=0.162, l1_loss=0.146, dssim_loss=0.112, depth_loss=0.994, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16449])) that is different to the input size (torch.Size([16449, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 44%|████████████████████▊                          | 444/1000 [07:00<08:44,  1.06it/s, total_loss=0.166, l1_loss=0.146, dssim_loss=0.123, depth_loss=0.927, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18667])) that is different to the input size (torch.Size([18667, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 47%|██████████████████████▉                          | 467/1000 [07:22<08:29,  1.05it/s, total_loss=0.133, l1_loss=0.12, dssim_loss=0.092, depth_loss=1.05, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12671])) that is different to the input size (torch.Size([12671, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 47%|███████████████████████                          | 470/1000 [07:25<08:18,  1.06it/s, total_loss=0.163, l1_loss=0.147, dssim_loss=0.114, depth_loss=0.846, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19328])) that is different to the input size (torch.Size([19328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 47%|██████████████████████▊                         | 474/1000 [07:29<08:25,  1.04it/s, total_loss=0.168, l1_loss=0.148, dssim_loss=0.125, depth_loss=1.29, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21002])) that is different to the input size (torch.Size([21002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 48%|███████████████████████▎                         | 475/1000 [07:30<08:20,  1.05it/s, total_loss=0.206, l1_loss=0.178, dssim_loss=0.16, depth_loss=1.42, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20877])) that is different to the input size (torch.Size([20877, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 48%|██████████████████████▍                        | 477/1000 [07:32<08:11,  1.06it/s, total_loss=0.148, l1_loss=0.133, dssim_loss=0.104, depth_loss=0.904, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17255])) that is different to the input size (torch.Size([17255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 49%|██████████████████████▊                        | 486/1000 [07:40<08:01,  1.07it/s, total_loss=0.163, l1_loss=0.151, dssim_loss=0.106, depth_loss=0.997, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12215])) that is different to the input size (torch.Size([12215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 49%|██████████████████████▉                        | 487/1000 [07:41<08:12,  1.04it/s, total_loss=0.145, l1_loss=0.129, dssim_loss=0.104, depth_loss=0.853, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15466])) that is different to the input size (torch.Size([15466, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 50%|████████████████████████▎                        | 496/1000 [07:50<07:54,  1.06it/s, total_loss=0.115, l1_loss=0.109, dssim_loss=0.07, depth_loss=0.96, psnr=14.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19935])) that is different to the input size (torch.Size([19935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 50%|███████████████████████▎                       | 497/1000 [07:51<07:53,  1.06it/s, total_loss=0.172, l1_loss=0.154, dssim_loss=0.124, depth_loss=0.869, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16620])) that is different to the input size (torch.Size([16620, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 50%|███████████████████████▌                       | 500/1000 [09:24<3:55:31, 28.26s/it, total_loss=0.115, l1_loss=0.11, dssim_loss=0.067, depth_loss=1.05, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15723])) that is different to the input size (torch.Size([15723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_500.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 50%|███████████████████████▏                      | 503/1000 [09:27<1:25:40, 10.34s/it, total_loss=0.196, l1_loss=0.171, dssim_loss=0.148, depth_loss=1.06, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20575])) that is different to the input size (torch.Size([20575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 52%|████████████████████████▉                       | 519/1000 [09:43<07:44,  1.04it/s, total_loss=0.154, l1_loss=0.148, dssim_loss=0.087, depth_loss=1.13, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20663])) that is different to the input size (torch.Size([20663, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 52%|████████████████████████▋                      | 524/1000 [09:47<07:36,  1.04it/s, total_loss=0.121, l1_loss=0.114, dssim_loss=0.075, depth_loss=0.948, psnr=14.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14950])) that is different to the input size (torch.Size([14950, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 57%|██████████████████████████▋                    | 567/1000 [10:28<06:54,  1.05it/s, total_loss=0.103, l1_loss=0.098, dssim_loss=0.062, depth_loss=0.924, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18766])) that is different to the input size (torch.Size([18766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 57%|███████████████████████████▎                    | 569/1000 [10:30<06:46,  1.06it/s, total_loss=0.202, l1_loss=0.176, dssim_loss=0.153, depth_loss=1.63, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17471])) that is different to the input size (torch.Size([17471, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 60%|█████████████████████████████▏                   | 596/1000 [10:56<06:22,  1.06it/s, total_loss=0.165, l1_loss=0.153, dssim_loss=0.106, depth_loss=0.923, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15628])) that is different to the input size (torch.Size([15628, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 60%|██████████████████████████████                    | 600/1000 [10:59<06:22,  1.05it/s, total_loss=0.194, l1_loss=0.166, dssim_loss=0.151, depth_loss=1.66, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17741])) that is different to the input size (torch.Size([17741, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 62%|████████████████████████████▉                  | 616/1000 [11:15<06:00,  1.07it/s, total_loss=0.134, l1_loss=0.119, dssim_loss=0.098, depth_loss=0.842, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15296])) that is different to the input size (torch.Size([15296, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 65%|███████████████████████████████▏                | 650/1000 [11:47<05:29,  1.06it/s, total_loss=0.135, l1_loss=0.129, dssim_loss=0.079, depth_loss=1.08, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20606])) that is different to the input size (torch.Size([20606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 68%|████████████████████████████████▋               | 680/1000 [12:15<05:00,  1.06it/s, total_loss=0.201, l1_loss=0.171, dssim_loss=0.159, depth_loss=1.27, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20081])) that is different to the input size (torch.Size([20081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 79%|█████████████████████████████████████▏         | 790/1000 [14:00<03:17,  1.06it/s, total_loss=0.138, l1_loss=0.126, dssim_loss=0.094, depth_loss=0.793, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15767])) that is different to the input size (torch.Size([15767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 85%|████████████████████████████████████████▉       | 854/1000 [15:01<02:17,  1.06it/s, total_loss=0.134, l1_loss=0.118, dssim_loss=0.101, depth_loss=1.04, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20889])) that is different to the input size (torch.Size([20889, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 93%|███████████████████████████████████████████▌   | 926/1000 [16:10<01:10,  1.04it/s, total_loss=0.139, l1_loss=0.123, dssim_loss=0.101, depth_loss=0.832, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15219])) that is different to the input size (torch.Size([15219, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 94%|█████████████████████████████████████████████   | 938/1000 [16:21<00:59,  1.04it/s, total_loss=0.175, l1_loss=0.147, dssim_loss=0.143, depth_loss=1.18, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17632])) that is different to the input size (torch.Size([17632, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
100%|███████████████████████████████████████████████| 1000/1000 [18:51<00:00,  1.13s/it, total_loss=0.097, l1_loss=0.093, dssim_loss=0.057, depth_loss=0.83, psnr=15.8]
Video saved to outputs/video_1000.mp4
