Video saved to outputs/video_0.mp4
  0%|                                                                                                                                         | 0/1000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19935])) that is different to the input size (torch.Size([19935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                   | 1/1000 [00:00<06:05,  2.74it/s, total_loss=0.681, l1_loss=0.555, dssim_loss=0.593, depth_loss=1.48, psnr=4.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16394])) that is different to the input size (torch.Size([16394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                   | 2/1000 [00:00<04:53,  3.40it/s, total_loss=0.736, l1_loss=0.609, dssim_loss=0.622, depth_loss=1.1, psnr=3.73]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16449])) that is different to the input size (torch.Size([16449, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                 | 3/1000 [00:00<04:29,  3.70it/s, total_loss=0.668, l1_loss=0.562, dssim_loss=0.545, depth_loss=1.06, psnr=4.36]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15594])) that is different to the input size (torch.Size([15594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                 | 4/1000 [00:01<04:17,  3.87it/s, total_loss=0.574, l1_loss=0.494, dssim_loss=0.447, depth_loss=1.55, psnr=5.47]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20566])) that is different to the input size (torch.Size([20566, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▎                                                 | 5/1000 [00:01<04:13,  3.92it/s, total_loss=0.762, l1_loss=0.599, dssim_loss=0.707, depth_loss=1.83, psnr=3.48]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20374])) that is different to the input size (torch.Size([20374, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                   | 6/1000 [00:01<04:10,  3.97it/s, total_loss=0.535, l1_loss=0.459, dssim_loss=0.42, depth_loss=1.42, psnr=5.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15754])) that is different to the input size (torch.Size([15754, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                   | 7/1000 [00:01<04:06,  4.02it/s, total_loss=0.54, l1_loss=0.47, dssim_loss=0.409, depth_loss=1.65, psnr=5.88]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18217])) that is different to the input size (torch.Size([18217, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                    | 8/1000 [00:02<04:05,  4.03it/s, total_loss=0.517, l1_loss=0.455, dssim_loss=0.384, depth_loss=1.22, psnr=6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20624])) that is different to the input size (torch.Size([20624, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                 | 9/1000 [00:02<04:05,  4.04it/s, total_loss=0.694, l1_loss=0.556, dssim_loss=0.624, depth_loss=1.76, psnr=4.08]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15732])) that is different to the input size (torch.Size([15732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                 | 10/1000 [00:02<04:02,  4.08it/s, total_loss=0.504, l1_loss=0.445, dssim_loss=0.37, depth_loss=1.68, psnr=6.34]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21003])) that is different to the input size (torch.Size([21003, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                 | 11/1000 [00:03<05:10,  3.19it/s, total_loss=0.579, l1_loss=0.489, dssim_loss=0.47, depth_loss=1.65, psnr=5.47]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12215])) that is different to the input size (torch.Size([12215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                                  | 13/1000 [00:03<04:30,  3.65it/s, total_loss=0.68, l1_loss=0.556, dssim_loss=0.588, depth_loss=1.9, psnr=4.28]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18385])) that is different to the input size (torch.Size([18385, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                                | 15/1000 [00:03<04:12,  3.91it/s, total_loss=0.437, l1_loss=0.393, dssim_loss=0.305, depth_loss=1.53, psnr=7.17]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15214])) that is different to the input size (torch.Size([15214, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                                | 16/1000 [00:04<04:07,  3.98it/s, total_loss=0.444, l1_loss=0.398, dssim_loss=0.315, depth_loss=1.48, psnr=7.09]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19992])) that is different to the input size (torch.Size([19992, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                                | 17/1000 [00:04<04:05,  4.01it/s, total_loss=0.437, l1_loss=0.391, dssim_loss=0.309, depth_loss=1.37, psnr=7.07]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16387])) that is different to the input size (torch.Size([16387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                                | 18/1000 [00:04<04:01,  4.06it/s, total_loss=0.392, l1_loss=0.354, dssim_loss=0.272, depth_loss=1.03, psnr=7.39]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15636])) that is different to the input size (torch.Size([15636, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                                | 19/1000 [00:04<03:58,  4.11it/s, total_loss=0.609, l1_loss=0.508, dssim_loss=0.506, depth_loss=1.89, psnr=5.07]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15383])) that is different to the input size (torch.Size([15383, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                  | 20/1000 [00:05<03:56,  4.14it/s, total_loss=0.609, l1_loss=0.509, dssim_loss=0.503, depth_loss=1.8, psnr=5.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20236])) that is different to the input size (torch.Size([20236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                 | 21/1000 [00:05<03:57,  4.12it/s, total_loss=0.387, l1_loss=0.353, dssim_loss=0.262, depth_loss=1.39, psnr=7.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15844])) that is different to the input size (torch.Size([15844, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                 | 22/1000 [00:05<03:55,  4.15it/s, total_loss=0.513, l1_loss=0.451, dssim_loss=0.38, depth_loss=1.76, psnr=6.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20935])) that is different to the input size (torch.Size([20935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                                  | 23/1000 [00:05<03:57,  4.12it/s, total_loss=0.542, l1_loss=0.464, dssim_loss=0.425, depth_loss=1.23, psnr=6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14895])) that is different to the input size (torch.Size([14895, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                                | 24/1000 [00:06<03:55,  4.15it/s, total_loss=0.567, l1_loss=0.48, dssim_loss=0.457, depth_loss=1.82, psnr=5.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20763])) that is different to the input size (torch.Size([20763, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▎                                                | 25/1000 [00:06<03:57,  4.11it/s, total_loss=0.52, l1_loss=0.439, dssim_loss=0.422, depth_loss=1.63, psnr=6.14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19328])) that is different to the input size (torch.Size([19328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                                | 26/1000 [00:06<03:57,  4.11it/s, total_loss=0.595, l1_loss=0.495, dssim_loss=0.496, depth_loss=1.9, psnr=5.19]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17532])) that is different to the input size (torch.Size([17532, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                               | 27/1000 [00:06<03:57,  4.10it/s, total_loss=0.319, l1_loss=0.301, dssim_loss=0.194, depth_loss=1.23, psnr=8.43]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15628])) that is different to the input size (torch.Size([15628, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                                  | 28/1000 [00:07<03:54,  4.14it/s, total_loss=0.48, l1_loss=0.415, dssim_loss=0.37, depth_loss=1.84, psnr=6.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17876])) that is different to the input size (torch.Size([17876, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                                | 29/1000 [00:07<03:54,  4.14it/s, total_loss=0.318, l1_loss=0.298, dssim_loss=0.198, depth_loss=1.3, psnr=8.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21021])) that is different to the input size (torch.Size([21021, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                               | 30/1000 [00:07<03:55,  4.12it/s, total_loss=0.325, l1_loss=0.297, dssim_loss=0.219, depth_loss=1.57, psnr=8.83]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16386])) that is different to the input size (torch.Size([16386, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                                | 31/1000 [00:07<03:54,  4.14it/s, total_loss=0.304, l1_loss=0.29, dssim_loss=0.181, depth_loss=1.03, psnr=8.52]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18791])) that is different to the input size (torch.Size([18791, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                               | 32/1000 [00:08<03:54,  4.13it/s, total_loss=0.536, l1_loss=0.457, dssim_loss=0.426, depth_loss=1.49, psnr=5.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20580])) that is different to the input size (torch.Size([20580, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                               | 33/1000 [00:08<03:55,  4.11it/s, total_loss=0.408, l1_loss=0.364, dssim_loss=0.291, depth_loss=1.47, psnr=7.21]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19102])) that is different to the input size (torch.Size([19102, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▋                                                | 34/1000 [00:08<03:54,  4.12it/s, total_loss=0.286, l1_loss=0.278, dssim_loss=0.16, depth_loss=1.24, psnr=8.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18800])) that is different to the input size (torch.Size([18800, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                                 | 36/1000 [00:09<03:53,  4.13it/s, total_loss=0.361, l1_loss=0.332, dssim_loss=0.24, depth_loss=1.5, psnr=8.09]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16140])) that is different to the input size (torch.Size([16140, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                               | 37/1000 [00:09<03:52,  4.14it/s, total_loss=0.313, l1_loss=0.289, dssim_loss=0.204, depth_loss=0.99, psnr=8.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13941])) that is different to the input size (torch.Size([13941, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                               | 39/1000 [00:09<03:52,  4.13it/s, total_loss=0.271, l1_loss=0.259, dssim_loss=0.159, depth_loss=1.36, psnr=9.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18439])) that is different to the input size (torch.Size([18439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                               | 41/1000 [00:10<03:53,  4.10it/s, total_loss=0.321, l1_loss=0.292, dssim_loss=0.217, depth_loss=1.58, psnr=8.62]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20457])) that is different to the input size (torch.Size([20457, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                               | 42/1000 [00:10<03:53,  4.10it/s, total_loss=0.264, l1_loss=0.251, dssim_loss=0.158, depth_loss=1.39, psnr=9.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18397])) that is different to the input size (torch.Size([18397, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                               | 43/1000 [00:10<03:53,  4.10it/s, total_loss=0.524, l1_loss=0.453, dssim_loss=0.405, depth_loss=1.62, psnr=6.18]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18372])) that is different to the input size (torch.Size([18372, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██▏                                               | 44/1000 [00:11<03:54,  4.08it/s, total_loss=0.493, l1_loss=0.433, dssim_loss=0.367, depth_loss=1.52, psnr=6.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17907])) that is different to the input size (torch.Size([17907, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                              | 46/1000 [00:11<03:54,  4.08it/s, total_loss=0.436, l1_loss=0.391, dssim_loss=0.307, depth_loss=1.59, psnr=6.68]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17464])) that is different to the input size (torch.Size([17464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                               | 48/1000 [00:11<03:50,  4.12it/s, total_loss=0.274, l1_loss=0.259, dssim_loss=0.167, depth_loss=1.5, psnr=9.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15271])) that is different to the input size (torch.Size([15271, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                                | 49/1000 [00:12<03:49,  4.15it/s, total_loss=0.44, l1_loss=0.389, dssim_loss=0.322, depth_loss=1.71, psnr=7.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18562])) that is different to the input size (torch.Size([18562, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                               | 50/1000 [00:12<03:49,  4.14it/s, total_loss=0.37, l1_loss=0.338, dssim_loss=0.249, depth_loss=1.46, psnr=8.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20081])) that is different to the input size (torch.Size([20081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                               | 51/1000 [00:12<03:50,  4.11it/s, total_loss=0.38, l1_loss=0.343, dssim_loss=0.264, depth_loss=1.35, psnr=7.51]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17771])) that is different to the input size (torch.Size([17771, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                               | 52/1000 [00:12<03:50,  4.11it/s, total_loss=0.25, l1_loss=0.236, dssim_loss=0.151, depth_loss=1.42, psnr=9.88]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17924])) that is different to the input size (torch.Size([17924, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▌                                              | 53/1000 [00:13<03:50,  4.11it/s, total_loss=0.407, l1_loss=0.367, dssim_loss=0.285, depth_loss=1.01, psnr=7.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20663])) that is different to the input size (torch.Size([20663, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▋                                               | 54/1000 [00:13<03:50,  4.10it/s, total_loss=0.338, l1_loss=0.309, dssim_loss=0.229, depth_loss=1.5, psnr=8.04]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20183])) that is different to the input size (torch.Size([20183, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                              | 55/1000 [00:13<03:51,  4.09it/s, total_loss=0.454, l1_loss=0.408, dssim_loss=0.318, depth_loss=1.82, psnr=6.41]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21083])) that is different to the input size (torch.Size([21083, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                               | 56/1000 [00:13<03:51,  4.07it/s, total_loss=0.478, l1_loss=0.42, dssim_loss=0.356, depth_loss=1.23, psnr=6.76]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15443])) that is different to the input size (torch.Size([15443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                              | 58/1000 [00:14<03:49,  4.10it/s, total_loss=0.249, l1_loss=0.238, dssim_loss=0.146, depth_loss=1.36, psnr=9.68]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16792])) that is different to the input size (torch.Size([16792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███                                                 | 59/1000 [00:14<03:48,  4.11it/s, total_loss=0.24, l1_loss=0.231, dssim_loss=0.137, depth_loss=1.04, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19946])) that is different to the input size (torch.Size([19946, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███                                                | 60/1000 [00:14<03:49,  4.09it/s, total_loss=0.41, l1_loss=0.368, dssim_loss=0.29, depth_loss=1.84, psnr=7.04]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17573])) that is different to the input size (torch.Size([17573, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▉                                              | 61/1000 [00:15<03:49,  4.09it/s, total_loss=0.555, l1_loss=0.475, dssim_loss=0.436, depth_loss=1.23, psnr=5.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11732])) that is different to the input size (torch.Size([11732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███                                              | 62/1000 [00:15<03:46,  4.14it/s, total_loss=0.544, l1_loss=0.473, dssim_loss=0.413, depth_loss=1.36, psnr=5.93]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19828])) that is different to the input size (torch.Size([19828, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███                                              | 63/1000 [00:15<03:47,  4.12it/s, total_loss=0.431, l1_loss=0.386, dssim_loss=0.306, depth_loss=1.06, psnr=7.33]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11147])) that is different to the input size (torch.Size([11147, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|███▏                                             | 65/1000 [00:16<03:46,  4.13it/s, total_loss=0.324, l1_loss=0.292, dssim_loss=0.225, depth_loss=1.42, psnr=8.42]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20866])) that is different to the input size (torch.Size([20866, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                              | 66/1000 [00:16<03:47,  4.11it/s, total_loss=0.286, l1_loss=0.26, dssim_loss=0.195, depth_loss=1.51, psnr=9.35]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21204])) that is different to the input size (torch.Size([21204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                             | 67/1000 [00:16<04:44,  3.28it/s, total_loss=0.375, l1_loss=0.339, dssim_loss=0.258, depth_loss=1.25, psnr=7.79]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15524])) that is different to the input size (torch.Size([15524, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▍                                             | 69/1000 [00:17<04:13,  3.68it/s, total_loss=0.216, l1_loss=0.208, dssim_loss=0.125, depth_loss=1.32, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18412])) that is different to the input size (torch.Size([18412, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▍                                             | 70/1000 [00:17<04:04,  3.80it/s, total_loss=0.369, l1_loss=0.337, dssim_loss=0.247, depth_loss=1.65, psnr=8.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15531])) that is different to the input size (torch.Size([15531, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▌                                               | 71/1000 [00:17<03:57,  3.91it/s, total_loss=0.4, l1_loss=0.349, dssim_loss=0.302, depth_loss=1.81, psnr=7.69]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15723])) that is different to the input size (torch.Size([15723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▋                                               | 72/1000 [00:18<03:52,  4.00it/s, total_loss=0.392, l1_loss=0.345, dssim_loss=0.29, depth_loss=1.8, psnr=7.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14595])) that is different to the input size (torch.Size([14595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▋                                             | 74/1000 [00:18<03:45,  4.11it/s, total_loss=0.389, l1_loss=0.339, dssim_loss=0.293, depth_loss=1.81, psnr=7.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21254])) that is different to the input size (torch.Size([21254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▊                                             | 77/1000 [00:19<03:42,  4.15it/s, total_loss=0.382, l1_loss=0.342, dssim_loss=0.271, depth_loss=1.73, psnr=7.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13148])) that is different to the input size (torch.Size([13148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▊                                            | 79/1000 [00:19<03:41,  4.16it/s, total_loss=0.275, l1_loss=0.259, dssim_loss=0.169, depth_loss=0.981, psnr=9.26]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17255])) that is different to the input size (torch.Size([17255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▉                                             | 81/1000 [00:20<03:41,  4.15it/s, total_loss=0.366, l1_loss=0.331, dssim_loss=0.252, depth_loss=1.22, psnr=8.11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20713])) that is different to the input size (torch.Size([20713, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|████▏                                              | 82/1000 [00:20<04:12,  3.64it/s, total_loss=0.288, l1_loss=0.26, dssim_loss=0.199, depth_loss=1.48, psnr=9.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19807])) that is different to the input size (torch.Size([19807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|████▏                                            | 85/1000 [00:21<03:50,  3.96it/s, total_loss=0.267, l1_loss=0.255, dssim_loss=0.157, depth_loss=1.67, psnr=9.93]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18387])) that is different to the input size (torch.Size([18387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▎                                            | 87/1000 [00:21<03:45,  4.04it/s, total_loss=0.208, l1_loss=0.201, dssim_loss=0.118, depth_loss=1.29, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13554])) that is different to the input size (torch.Size([13554, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▎                                            | 88/1000 [00:21<03:43,  4.09it/s, total_loss=0.351, l1_loss=0.316, dssim_loss=0.245, depth_loss=1.58, psnr=8.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13931])) that is different to the input size (torch.Size([13931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▎                                            | 89/1000 [00:22<03:40,  4.13it/s, total_loss=0.338, l1_loss=0.302, dssim_loss=0.242, depth_loss=1.64, psnr=8.78]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17261])) that is different to the input size (torch.Size([17261, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▌                                             | 90/1000 [00:22<03:41,  4.11it/s, total_loss=0.214, l1_loss=0.21, dssim_loss=0.116, depth_loss=1.03, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15458])) that is different to the input size (torch.Size([15458, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▌                                            | 92/1000 [00:22<03:38,  4.16it/s, total_loss=0.249, l1_loss=0.238, dssim_loss=0.147, depth_loss=1.66, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17762])) that is different to the input size (torch.Size([17762, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▋                                              | 93/1000 [00:23<03:38,  4.15it/s, total_loss=0.2, l1_loss=0.196, dssim_loss=0.109, depth_loss=1.05, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16357])) that is different to the input size (torch.Size([16357, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|█████                                                 | 94/1000 [00:23<03:38,  4.15it/s, total_loss=0.205, l1_loss=0.198, dssim_loss=0.117, depth_loss=1, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17822])) that is different to the input size (torch.Size([17822, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▊                                              | 95/1000 [00:23<03:38,  4.15it/s, total_loss=0.205, l1_loss=0.199, dssim_loss=0.115, depth_loss=1.32, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17165])) that is different to the input size (torch.Size([17165, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▊                                           | 100/1000 [00:24<03:37,  4.15it/s, total_loss=0.234, l1_loss=0.224, dssim_loss=0.136, depth_loss=1.66, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19434])) that is different to the input size (torch.Size([19434, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▊                                           | 101/1000 [00:25<03:37,  4.13it/s, total_loss=0.189, l1_loss=0.184, dssim_loss=0.104, depth_loss=1.18, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20575])) that is different to the input size (torch.Size([20575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▉                                           | 103/1000 [00:25<03:38,  4.10it/s, total_loss=0.256, l1_loss=0.236, dssim_loss=0.168, depth_loss=1.49, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16550])) that is different to the input size (torch.Size([16550, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▉                                          | 104/1000 [00:25<03:37,  4.12it/s, total_loss=0.192, l1_loss=0.183, dssim_loss=0.114, depth_loss=0.967, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15219])) that is different to the input size (torch.Size([15219, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|█████                                           | 105/1000 [00:26<03:36,  4.14it/s, total_loss=0.332, l1_loss=0.303, dssim_loss=0.223, depth_loss=1.66, psnr=8.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16167])) that is different to the input size (torch.Size([16167, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 11%|█████▎                                          | 111/1000 [00:27<03:34,  4.15it/s, total_loss=0.185, l1_loss=0.178, dssim_loss=0.107, depth_loss=1.27, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15164])) that is different to the input size (torch.Size([15164, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▉                                              | 115/1000 [00:28<03:32,  4.17it/s, total_loss=0.312, l1_loss=0.29, dssim_loss=0.2, depth_loss=1.4, psnr=9.13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13182])) that is different to the input size (torch.Size([13182, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▋                                           | 116/1000 [00:28<03:31,  4.18it/s, total_loss=0.329, l1_loss=0.305, dssim_loss=0.213, depth_loss=1.3, psnr=9.02]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16728])) that is different to the input size (torch.Size([16728, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▊                                            | 117/1000 [00:28<03:31,  4.18it/s, total_loss=0.205, l1_loss=0.195, dssim_loss=0.122, depth_loss=1.54, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19058])) that is different to the input size (torch.Size([19058, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▊                                           | 118/1000 [00:29<03:32,  4.15it/s, total_loss=0.322, l1_loss=0.296, dssim_loss=0.213, depth_loss=1.34, psnr=8.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20527])) that is different to the input size (torch.Size([20527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▋                                          | 119/1000 [00:29<03:33,  4.13it/s, total_loss=0.307, l1_loss=0.278, dssim_loss=0.212, depth_loss=1.28, psnr=8.88]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16227])) that is different to the input size (torch.Size([16227, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▊                                          | 122/1000 [00:30<03:32,  4.13it/s, total_loss=0.197, l1_loss=0.188, dssim_loss=0.115, depth_loss=1.25, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15792])) that is different to the input size (torch.Size([15792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|█████▉                                          | 124/1000 [00:30<03:32,  4.12it/s, total_loss=0.24, l1_loss=0.227, dssim_loss=0.147, depth_loss=0.953, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13568])) that is different to the input size (torch.Size([13568, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 12%|██████                                          | 125/1000 [00:30<03:31,  4.13it/s, total_loss=0.304, l1_loss=0.284, dssim_loss=0.193, depth_loss=1.29, psnr=9.39]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18398])) that is different to the input size (torch.Size([18398, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▏                                          | 126/1000 [00:31<03:32,  4.12it/s, total_loss=0.279, l1_loss=0.261, dssim_loss=0.177, depth_loss=1.45, psnr=9.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16149])) that is different to the input size (torch.Size([16149, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▏                                         | 128/1000 [00:31<03:29,  4.15it/s, total_loss=0.252, l1_loss=0.236, dssim_loss=0.157, depth_loss=1.52, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17575])) that is different to the input size (torch.Size([17575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▏                                         | 130/1000 [00:32<03:30,  4.13it/s, total_loss=0.279, l1_loss=0.249, dssim_loss=0.198, depth_loss=1.65, psnr=9.43]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17259])) that is different to the input size (torch.Size([17259, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▍                                         | 133/1000 [00:32<03:31,  4.09it/s, total_loss=0.175, l1_loss=0.169, dssim_loss=0.098, depth_loss=1.21, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17474])) that is different to the input size (torch.Size([17474, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 13%|██████▍                                         | 134/1000 [00:33<03:30,  4.10it/s, total_loss=0.261, l1_loss=0.241, dssim_loss=0.172, depth_loss=1.02, psnr=9.41]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15313])) that is different to the input size (torch.Size([15313, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▍                                         | 135/1000 [00:33<03:28,  4.14it/s, total_loss=0.339, l1_loss=0.307, dssim_loss=0.235, depth_loss=1.64, psnr=8.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19561])) that is different to the input size (torch.Size([19561, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▉                                            | 137/1000 [00:33<03:28,  4.14it/s, total_loss=0.261, l1_loss=0.24, dssim_loss=0.174, depth_loss=1.53, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14255])) that is different to the input size (torch.Size([14255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▌                                         | 138/1000 [00:34<03:27,  4.16it/s, total_loss=0.279, l1_loss=0.248, dssim_loss=0.202, depth_loss=1.62, psnr=9.73]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17600])) that is different to the input size (torch.Size([17600, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▋                                         | 139/1000 [00:34<03:26,  4.16it/s, total_loss=0.256, l1_loss=0.234, dssim_loss=0.172, depth_loss=1.07, psnr=9.55]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20634])) that is different to the input size (torch.Size([20634, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▊                                         | 141/1000 [00:34<03:28,  4.13it/s, total_loss=0.299, l1_loss=0.268, dssim_loss=0.213, depth_loss=1.69, psnr=8.99]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20943])) that is different to the input size (torch.Size([20943, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▊                                         | 142/1000 [00:35<03:28,  4.11it/s, total_loss=0.206, l1_loss=0.195, dssim_loss=0.126, depth_loss=1.41, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11264])) that is different to the input size (torch.Size([11264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▊                                         | 143/1000 [00:35<03:26,  4.15it/s, total_loss=0.266, l1_loss=0.253, dssim_loss=0.159, depth_loss=1.22, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20877])) that is different to the input size (torch.Size([20877, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 14%|██████▊                                        | 145/1000 [00:35<03:26,  4.13it/s, total_loss=0.172, l1_loss=0.165, dssim_loss=0.101, depth_loss=0.919, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18352])) that is different to the input size (torch.Size([18352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▍                                           | 147/1000 [00:36<03:26,  4.13it/s, total_loss=0.242, l1_loss=0.22, dssim_loss=0.165, depth_loss=1.07, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18667])) that is different to the input size (torch.Size([18667, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████                                         | 148/1000 [00:36<03:27,  4.11it/s, total_loss=0.169, l1_loss=0.165, dssim_loss=0.092, depth_loss=1.07, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14586])) that is different to the input size (torch.Size([14586, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▍                                          | 149/1000 [00:36<03:25,  4.14it/s, total_loss=0.271, l1_loss=0.239, dssim_loss=0.2, depth_loss=1.63, psnr=9.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16468])) that is different to the input size (torch.Size([16468, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▌                                          | 150/1000 [00:36<03:25,  4.14it/s, total_loss=0.205, l1_loss=0.197, dssim_loss=0.118, depth_loss=1.55, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15407])) that is different to the input size (torch.Size([15407, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▏                                        | 151/1000 [00:37<03:24,  4.16it/s, total_loss=0.269, l1_loss=0.253, dssim_loss=0.168, depth_loss=1.37, psnr=9.65]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15666])) that is different to the input size (torch.Size([15666, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▎                                        | 152/1000 [00:37<03:23,  4.17it/s, total_loss=0.228, l1_loss=0.215, dssim_loss=0.141, depth_loss=1.55, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16542])) that is different to the input size (torch.Size([16542, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▎                                        | 153/1000 [00:37<03:23,  4.16it/s, total_loss=0.177, l1_loss=0.168, dssim_loss=0.105, depth_loss=0.88, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18766])) that is different to the input size (torch.Size([18766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 15%|███████▏                                       | 154/1000 [00:37<03:24,  4.14it/s, total_loss=0.212, l1_loss=0.197, dssim_loss=0.136, depth_loss=0.948, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17741])) that is different to the input size (torch.Size([17741, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▍                                        | 155/1000 [00:38<03:24,  4.13it/s, total_loss=0.181, l1_loss=0.176, dssim_loss=0.099, depth_loss=1.11, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16682])) that is different to the input size (torch.Size([16682, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▌                                        | 157/1000 [00:38<03:23,  4.15it/s, total_loss=0.163, l1_loss=0.157, dssim_loss=0.093, depth_loss=1.03, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19723])) that is different to the input size (torch.Size([19723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▋                                        | 159/1000 [00:39<03:22,  4.15it/s, total_loss=0.311, l1_loss=0.277, dssim_loss=0.222, depth_loss=1.67, psnr=8.65]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20867])) that is different to the input size (torch.Size([20867, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▋                                        | 161/1000 [00:39<03:21,  4.15it/s, total_loss=0.283, l1_loss=0.257, dssim_loss=0.195, depth_loss=1.45, psnr=8.77]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17613])) that is different to the input size (torch.Size([17613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 16%|███████▊                                        | 164/1000 [00:40<03:24,  4.09it/s, total_loss=0.333, l1_loss=0.302, dssim_loss=0.228, depth_loss=1.42, psnr=7.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17319])) that is different to the input size (torch.Size([17319, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 17%|████████                                        | 168/1000 [00:41<03:26,  4.03it/s, total_loss=0.209, l1_loss=0.193, dssim_loss=0.136, depth_loss=0.98, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21121])) that is different to the input size (torch.Size([21121, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 17%|████████▎                                       | 174/1000 [00:42<03:26,  4.01it/s, total_loss=0.183, l1_loss=0.173, dssim_loss=0.112, depth_loss=1.38, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16945])) that is different to the input size (torch.Size([16945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 18%|████████▏                                      | 175/1000 [00:43<03:24,  4.04it/s, total_loss=0.187, l1_loss=0.178, dssim_loss=0.111, depth_loss=0.883, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15466])) that is different to the input size (torch.Size([15466, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 18%|████████▋                                       | 181/1000 [00:44<03:17,  4.14it/s, total_loss=0.218, l1_loss=0.197, dssim_loss=0.151, depth_loss=1.14, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20767])) that is different to the input size (torch.Size([20767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 18%|████████▊                                       | 183/1000 [00:44<03:18,  4.12it/s, total_loss=0.234, l1_loss=0.218, dssim_loss=0.148, depth_loss=1.27, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12671])) that is different to the input size (torch.Size([12671, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 18%|█████████▏                                        | 184/1000 [00:45<03:16,  4.16it/s, total_loss=0.241, l1_loss=0.222, dssim_loss=0.159, depth_loss=1.35, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15435])) that is different to the input size (torch.Size([15435, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 19%|█████████                                        | 186/1000 [00:45<03:17,  4.13it/s, total_loss=0.272, l1_loss=0.245, dssim_loss=0.19, depth_loss=1.19, psnr=9.18]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11303])) that is different to the input size (torch.Size([11303, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 19%|█████████▎                                      | 193/1000 [00:47<03:16,  4.11it/s, total_loss=0.208, l1_loss=0.197, dssim_loss=0.126, depth_loss=1.17, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15606])) that is different to the input size (torch.Size([15606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 20%|█████████▍                                      | 196/1000 [00:48<03:13,  4.17it/s, total_loss=0.249, l1_loss=0.233, dssim_loss=0.156, depth_loss=1.31, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20452])) that is different to the input size (torch.Size([20452, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 20%|█████████▊                                       | 201/1000 [00:49<03:10,  4.20it/s, total_loss=0.207, l1_loss=0.194, dssim_loss=0.13, depth_loss=1.51, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15705])) that is different to the input size (torch.Size([15705, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|█████████▉                                      | 206/1000 [00:50<03:11,  4.15it/s, total_loss=0.199, l1_loss=0.185, dssim_loss=0.129, depth_loss=1.24, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15375])) that is different to the input size (torch.Size([15375, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 21%|██████████▋                                        | 209/1000 [00:51<03:09,  4.17it/s, total_loss=0.136, l1_loss=0.131, dssim_loss=0.078, depth_loss=1, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19047])) that is different to the input size (torch.Size([19047, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 22%|██████████▋                                      | 218/1000 [00:53<03:07,  4.17it/s, total_loss=0.231, l1_loss=0.215, dssim_loss=0.148, depth_loss=1.3, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15299])) that is different to the input size (torch.Size([15299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 22%|██████████▌                                     | 219/1000 [00:53<03:06,  4.19it/s, total_loss=0.263, l1_loss=0.238, dssim_loss=0.182, depth_loss=1.49, psnr=9.31]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21129])) that is different to the input size (torch.Size([21129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 22%|██████████▊                                      | 220/1000 [00:53<03:07,  4.15it/s, total_loss=0.267, l1_loss=0.24, dssim_loss=0.186, depth_loss=1.23, psnr=9.38]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15236])) that is different to the input size (torch.Size([15236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 22%|██████████▌                                    | 224/1000 [00:54<03:06,  4.15it/s, total_loss=0.191, l1_loss=0.176, dssim_loss=0.126, depth_loss=0.995, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20814])) that is different to the input size (torch.Size([20814, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 23%|██████████▊                                     | 226/1000 [00:55<03:07,  4.13it/s, total_loss=0.148, l1_loss=0.142, dssim_loss=0.086, depth_loss=1.06, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17022])) that is different to the input size (torch.Size([17022, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 23%|██████████▉                                     | 227/1000 [00:55<03:06,  4.13it/s, total_loss=0.172, l1_loss=0.161, dssim_loss=0.108, depth_loss=0.89, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12264])) that is different to the input size (torch.Size([12264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 23%|███████████▌                                      | 232/1000 [00:56<03:07,  4.10it/s, total_loss=0.214, l1_loss=0.191, dssim_loss=0.152, depth_loss=1.42, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15445])) that is different to the input size (torch.Size([15445, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 23%|███████████▏                                    | 233/1000 [00:57<03:06,  4.11it/s, total_loss=0.169, l1_loss=0.159, dssim_loss=0.105, depth_loss=1.55, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17134])) that is different to the input size (torch.Size([17134, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 24%|███████████▋                                     | 239/1000 [00:58<03:03,  4.15it/s, total_loss=0.172, l1_loss=0.167, dssim_loss=0.096, depth_loss=1.2, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20533])) that is different to the input size (torch.Size([20533, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 25%|███████████▊                                    | 246/1000 [01:00<03:02,  4.13it/s, total_loss=0.237, l1_loss=0.217, dssim_loss=0.158, depth_loss=1.13, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16620])) that is different to the input size (torch.Size([16620, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 25%|███████████▌                                   | 247/1000 [01:00<03:02,  4.13it/s, total_loss=0.134, l1_loss=0.129, dssim_loss=0.077, depth_loss=0.923, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16954])) that is different to the input size (torch.Size([16954, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 25%|████████████                                    | 252/1000 [01:01<03:00,  4.14it/s, total_loss=0.173, l1_loss=0.165, dssim_loss=0.101, depth_loss=1.38, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19770])) that is different to the input size (torch.Size([19770, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 25%|████████████▏                                   | 254/1000 [01:02<03:01,  4.11it/s, total_loss=0.139, l1_loss=0.134, dssim_loss=0.08, depth_loss=0.845, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17632])) that is different to the input size (torch.Size([17632, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 26%|████████████▎                                   | 257/1000 [01:02<02:59,  4.14it/s, total_loss=0.161, l1_loss=0.153, dssim_loss=0.095, depth_loss=1.31, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17318])) that is different to the input size (torch.Size([17318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 26%|████████████▉                                     | 259/1000 [01:03<02:59,  4.13it/s, total_loss=0.201, l1_loss=0.181, dssim_loss=0.141, depth_loss=1.24, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18595])) that is different to the input size (torch.Size([18595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 26%|████████████▍                                   | 260/1000 [01:03<03:01,  4.09it/s, total_loss=0.238, l1_loss=0.214, dssim_loss=0.168, depth_loss=1.46, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20290])) that is different to the input size (torch.Size([20290, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 26%|████████████▌                                   | 261/1000 [01:03<03:02,  4.05it/s, total_loss=0.222, l1_loss=0.203, dssim_loss=0.148, depth_loss=1.11, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18354])) that is different to the input size (torch.Size([18354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 27%|█████████████                                   | 272/1000 [01:06<02:57,  4.10it/s, total_loss=0.184, l1_loss=0.174, dssim_loss=0.112, depth_loss=1.33, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20756])) that is different to the input size (torch.Size([20756, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 27%|█████████████                                   | 273/1000 [01:06<02:58,  4.07it/s, total_loss=0.161, l1_loss=0.153, dssim_loss=0.098, depth_loss=1.24, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21243])) that is different to the input size (torch.Size([21243, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 28%|█████████████▊                                    | 276/1000 [01:07<02:57,  4.07it/s, total_loss=0.2, l1_loss=0.184, dssim_loss=0.132, depth_loss=1.04, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18423])) that is different to the input size (torch.Size([18423, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 28%|█████████████▋                                  | 285/1000 [01:09<02:50,  4.19it/s, total_loss=0.241, l1_loss=0.217, dssim_loss=0.168, depth_loss=1.46, psnr=9.45]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20889])) that is different to the input size (torch.Size([20889, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 29%|█████████████▉                                  | 290/1000 [01:11<02:55,  4.04it/s, total_loss=0.134, l1_loss=0.128, dssim_loss=0.079, depth_loss=1.03, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21002])) that is different to the input size (torch.Size([21002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 29%|█████████████▉                                  | 291/1000 [01:11<02:56,  4.02it/s, total_loss=0.247, l1_loss=0.221, dssim_loss=0.175, depth_loss=1.22, psnr=9.64]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21011])) that is different to the input size (torch.Size([21011, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 29%|██████████████                                  | 292/1000 [01:11<02:55,  4.03it/s, total_loss=0.209, l1_loss=0.187, dssim_loss=0.147, depth_loss=1.04, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11743])) that is different to the input size (torch.Size([11743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 30%|██████████████                                 | 298/1000 [01:13<02:51,  4.08it/s, total_loss=0.138, l1_loss=0.135, dssim_loss=0.075, depth_loss=0.796, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19299])) that is different to the input size (torch.Size([19299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 30%|██████████████▎                                 | 299/1000 [01:13<02:54,  4.03it/s, total_loss=0.191, l1_loss=0.178, dssim_loss=0.123, depth_loss=1.15, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21225])) that is different to the input size (torch.Size([21225, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 30%|██████████████▍                                 | 302/1000 [01:14<02:52,  4.04it/s, total_loss=0.206, l1_loss=0.189, dssim_loss=0.136, depth_loss=1.09, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16977])) that is different to the input size (torch.Size([16977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 31%|██████████████▊                                 | 308/1000 [01:15<02:47,  4.13it/s, total_loss=0.257, l1_loss=0.227, dssim_loss=0.189, depth_loss=1.57, psnr=9.27]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18410])) that is different to the input size (torch.Size([18410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 31%|███████████████▏                                 | 310/1000 [01:15<02:47,  4.11it/s, total_loss=0.171, l1_loss=0.154, dssim_loss=0.119, depth_loss=1.2, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17471])) that is different to the input size (torch.Size([17471, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 31%|███████████████                                 | 314/1000 [01:16<02:46,  4.11it/s, total_loss=0.191, l1_loss=0.175, dssim_loss=0.127, depth_loss=1.09, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16740])) that is different to the input size (torch.Size([16740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 32%|███████████████▌                                 | 318/1000 [01:17<03:03,  3.71it/s, total_loss=0.21, l1_loss=0.193, dssim_loss=0.139, depth_loss=1.27, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16490])) that is different to the input size (torch.Size([16490, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 32%|███████████████▌                                | 324/1000 [01:19<02:44,  4.11it/s, total_loss=0.172, l1_loss=0.162, dssim_loss=0.108, depth_loss=1.46, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15944])) that is different to the input size (torch.Size([15944, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 34%|████████████████▏                               | 336/1000 [01:22<02:40,  4.14it/s, total_loss=0.15, l1_loss=0.137, dssim_loss=0.099, depth_loss=0.879, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19539])) that is different to the input size (torch.Size([19539, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 35%|████████████████▋                               | 348/1000 [01:25<02:38,  4.10it/s, total_loss=0.128, l1_loss=0.121, dssim_loss=0.076, depth_loss=1.04, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16859])) that is different to the input size (torch.Size([16859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 35%|█████████████████▋                                | 353/1000 [01:26<02:35,  4.17it/s, total_loss=0.147, l1_loss=0.138, dssim_loss=0.091, depth_loss=1.48, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19579])) that is different to the input size (torch.Size([19579, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 36%|█████████████████                               | 356/1000 [01:27<02:35,  4.14it/s, total_loss=0.195, l1_loss=0.181, dssim_loss=0.126, depth_loss=1.26, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17905])) that is different to the input size (torch.Size([17905, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 36%|█████████████████▉                                | 358/1000 [01:27<02:35,  4.12it/s, total_loss=0.149, l1_loss=0.139, dssim_loss=0.094, depth_loss=1.25, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20606])) that is different to the input size (torch.Size([20606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 36%|█████████████████▉                               | 365/1000 [01:29<02:46,  3.81it/s, total_loss=0.238, l1_loss=0.208, dssim_loss=0.18, depth_loss=1.53, psnr=9.74]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15767])) that is different to the input size (torch.Size([15767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 38%|██████████████████▍                              | 376/1000 [01:32<02:31,  4.11it/s, total_loss=0.186, l1_loss=0.17, dssim_loss=0.124, depth_loss=1.34, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20721])) that is different to the input size (torch.Size([20721, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 38%|█████████████████▉                             | 382/1000 [01:33<02:29,  4.12it/s, total_loss=0.165, l1_loss=0.149, dssim_loss=0.115, depth_loss=0.961, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14950])) that is different to the input size (torch.Size([14950, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 40%|███████████████████▍                             | 396/1000 [01:36<02:27,  4.09it/s, total_loss=0.137, l1_loss=0.13, dssim_loss=0.081, depth_loss=1.19, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16352])) that is different to the input size (torch.Size([16352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 40%|████████████████████▏                             | 404/1000 [01:38<02:25,  4.10it/s, total_loss=0.19, l1_loss=0.17, dssim_loss=0.137, depth_loss=1.24, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20100])) that is different to the input size (torch.Size([20100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 41%|████████████████████▏                            | 413/1000 [01:41<02:25,  4.03it/s, total_loss=0.17, l1_loss=0.148, dssim_loss=0.127, depth_loss=1.29, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20560])) that is different to the input size (torch.Size([20560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 42%|████████████████████▋                            | 421/1000 [01:43<02:20,  4.13it/s, total_loss=0.203, l1_loss=0.18, dssim_loss=0.147, depth_loss=1.24, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19204])) that is different to the input size (torch.Size([19204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 43%|████████████████████▉                            | 427/1000 [01:44<02:20,  4.09it/s, total_loss=0.14, l1_loss=0.132, dssim_loss=0.085, depth_loss=1.25, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20391])) that is different to the input size (torch.Size([20391, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 46%|█████████████████████▊                         | 463/1000 [01:53<02:14,  3.99it/s, total_loss=0.121, l1_loss=0.117, dssim_loss=0.068, depth_loss=0.945, psnr=14.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14253])) that is different to the input size (torch.Size([14253, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 46%|██████████████████████▋                          | 464/1000 [01:53<02:12,  4.03it/s, total_loss=0.184, l1_loss=0.165, dssim_loss=0.13, depth_loss=1.09, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15798])) that is different to the input size (torch.Size([15798, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 48%|██████████████████████▊                         | 476/1000 [01:56<02:07,  4.11it/s, total_loss=0.141, l1_loss=0.133, dssim_loss=0.086, depth_loss=1.28, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20683])) that is different to the input size (torch.Size([20683, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 48%|██████████████████████▋                        | 484/1000 [01:58<02:05,  4.10it/s, total_loss=0.177, l1_loss=0.158, dssim_loss=0.127, depth_loss=0.984, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15296])) that is different to the input size (torch.Size([15296, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 50%|███████████████████████▉                        | 498/1000 [02:01<02:01,  4.12it/s, total_loss=0.197, l1_loss=0.174, dssim_loss=0.144, depth_loss=1.27, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16707])) that is different to the input size (torch.Size([16707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 50%|████████████████████████▋                        | 504/1000 [02:27<16:25,  1.99s/it, total_loss=0.203, l1_loss=0.179, dssim_loss=0.15, depth_loss=1.34, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20363])) that is different to the input size (torch.Size([20363, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_500.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 52%|████████████████████████▉                       | 519/1000 [02:31<02:01,  3.97it/s, total_loss=0.172, l1_loss=0.153, dssim_loss=0.126, depth_loss=1.17, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12699])) that is different to the input size (torch.Size([12699, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 53%|███████████████████████████▌                        | 530/1000 [02:33<01:54,  4.10it/s, total_loss=0.16, l1_loss=0.145, dssim_loss=0.11, depth_loss=1.02, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20066])) that is different to the input size (torch.Size([20066, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 54%|█████████████████████████▋                      | 535/1000 [02:35<01:52,  4.12it/s, total_loss=0.197, l1_loss=0.171, dssim_loss=0.152, depth_loss=1.42, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16994])) that is different to the input size (torch.Size([16994, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 54%|███████████████████████████▍                       | 537/1000 [02:35<01:52,  4.12it/s, total_loss=0.1, l1_loss=0.095, dssim_loss=0.059, depth_loss=0.711, psnr=16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15528])) that is different to the input size (torch.Size([15528, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 55%|███████████████████████████                      | 552/1000 [02:39<01:49,  4.09it/s, total_loss=0.148, l1_loss=0.136, dssim_loss=0.1, depth_loss=0.862, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16231])) that is different to the input size (torch.Size([16231, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 55%|█████████████████████████▉                     | 553/1000 [02:39<01:49,  4.10it/s, total_loss=0.112, l1_loss=0.107, dssim_loss=0.066, depth_loss=0.721, psnr=15.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20188])) that is different to the input size (torch.Size([20188, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 56%|██████████████████████████▎                    | 559/1000 [02:41<01:47,  4.10it/s, total_loss=0.129, l1_loss=0.113, dssim_loss=0.096, depth_loss=0.981, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20477])) that is different to the input size (torch.Size([20477, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 56%|███████████████████████████▋                     | 564/1000 [02:42<01:45,  4.15it/s, total_loss=0.139, l1_loss=0.13, dssim_loss=0.088, depth_loss=1.39, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20583])) that is different to the input size (torch.Size([20583, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 57%|███████████████████████████▎                    | 569/1000 [02:43<01:44,  4.12it/s, total_loss=0.141, l1_loss=0.137, dssim_loss=0.078, depth_loss=1.09, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15598])) that is different to the input size (torch.Size([15598, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 73%|██████████████████████████████████▎            | 729/1000 [03:22<01:05,  4.12it/s, total_loss=0.147, l1_loss=0.132, dssim_loss=0.103, depth_loss=0.931, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17429])) that is different to the input size (torch.Size([17429, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 90%|███████████████████████████████████████████▍    | 905/1000 [04:05<00:23,  4.12it/s, total_loss=0.163, l1_loss=0.149, dssim_loss=0.11, depth_loss=0.979, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20294])) that is different to the input size (torch.Size([20294, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 97%|██████████████████████████████████████████████▎ | 966/1000 [04:20<00:08,  4.10it/s, total_loss=0.181, l1_loss=0.152, dssim_loss=0.149, depth_loss=1.23, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20830])) that is different to the input size (torch.Size([20830, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
100%|██████████████████████████████████████████████| 1000/1000 [04:53<00:00,  3.41it/s, total_loss=0.149, l1_loss=0.131, dssim_loss=0.109, depth_loss=0.958, psnr=13.4]
Video saved to outputs/video_1000.mp4
