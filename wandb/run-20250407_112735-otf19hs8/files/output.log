Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21083])) that is different to the input size (torch.Size([21083, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 1/10000 [00:00<1:34:39,  1.76it/s, total_loss=0.81, l1_loss=0.425, dssim_loss=0.356, depth_loss=0.974, psnr=6.69]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14586])) that is different to the input size (torch.Size([14586, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 2/10000 [00:01<1:29:59,  1.85it/s, total_loss=0.885, l1_loss=0.429, dssim_loss=0.36, depth_loss=1.21, psnr=6.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18800])) that is different to the input size (torch.Size([18800, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 3/10000 [00:01<1:24:09,  1.98it/s, total_loss=0.88, l1_loss=0.477, dssim_loss=0.451, depth_loss=0.908, psnr=5.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17924])) that is different to the input size (torch.Size([17924, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 4/10000 [00:02<1:21:27,  2.05it/s, total_loss=0.877, l1_loss=0.458, dssim_loss=0.392, depth_loss=1.05, psnr=6.08]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17632])) that is different to the input size (torch.Size([17632, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 5/10000 [00:02<1:20:24,  2.07it/s, total_loss=0.79, l1_loss=0.374, dssim_loss=0.273, depth_loss=1.18, psnr=7.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17134])) that is different to the input size (torch.Size([17134, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 6/10000 [00:02<1:20:19,  2.07it/s, total_loss=0.794, l1_loss=0.342, dssim_loss=0.241, depth_loss=1.33, psnr=8.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18423])) that is different to the input size (torch.Size([18423, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 7/10000 [00:03<1:18:23,  2.12it/s, total_loss=0.768, l1_loss=0.428, dssim_loss=0.369, depth_loss=0.802, psnr=6.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16231])) that is different to the input size (torch.Size([16231, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 8/10000 [00:03<1:18:07,  2.13it/s, total_loss=0.764, l1_loss=0.405, dssim_loss=0.305, depth_loss=0.958, psnr=7.12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16140])) that is different to the input size (torch.Size([16140, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 9/10000 [00:04<1:17:54,  2.14it/s, total_loss=0.747, l1_loss=0.389, dssim_loss=0.284, depth_loss=0.979, psnr=7.46]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15236])) that is different to the input size (torch.Size([15236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                  | 10/10000 [00:04<1:19:16,  2.10it/s, total_loss=1, l1_loss=0.443, dssim_loss=0.382, depth_loss=1.52, psnr=6.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14595])) that is different to the input size (torch.Size([14595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 11/10000 [00:05<1:20:53,  2.06it/s, total_loss=0.87, l1_loss=0.474, dssim_loss=0.416, depth_loss=0.942, psnr=5.96]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17771])) that is different to the input size (torch.Size([17771, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 12/10000 [00:05<1:20:06,  2.08it/s, total_loss=0.647, l1_loss=0.267, dssim_loss=0.177, depth_loss=1.15, psnr=9.38]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15466])) that is different to the input size (torch.Size([15466, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 14/10000 [00:06<1:19:52,  2.08it/s, total_loss=0.627, l1_loss=0.301, dssim_loss=0.191, depth_loss=0.971, psnr=9.26]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16620])) that is different to the input size (torch.Size([16620, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 15/10000 [00:07<1:19:18,  2.10it/s, total_loss=0.548, l1_loss=0.25, dssim_loss=0.156, depth_loss=0.901, psnr=9.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16490])) that is different to the input size (torch.Size([16490, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 16/10000 [00:07<1:20:40,  2.06it/s, total_loss=1.02, l1_loss=0.442, dssim_loss=0.386, depth_loss=1.57, psnr=6.52]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16945])) that is different to the input size (torch.Size([16945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 17/10000 [00:08<1:19:33,  2.09it/s, total_loss=0.567, l1_loss=0.249, dssim_loss=0.149, depth_loss=0.977, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15271])) that is different to the input size (torch.Size([15271, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 18/10000 [00:08<1:20:14,  2.07it/s, total_loss=0.922, l1_loss=0.406, dssim_loss=0.334, depth_loss=1.43, psnr=7.26]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21121])) that is different to the input size (torch.Size([21121, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 20/10000 [00:09<1:20:00,  2.08it/s, total_loss=0.598, l1_loss=0.281, dssim_loss=0.165, depth_loss=0.971, psnr=8.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17259])) that is different to the input size (torch.Size([17259, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 21/10000 [00:10<1:19:54,  2.08it/s, total_loss=0.504, l1_loss=0.218, dssim_loss=0.124, depth_loss=0.893, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15524])) that is different to the input size (torch.Size([15524, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 22/10000 [00:10<1:20:46,  2.06it/s, total_loss=0.689, l1_loss=0.292, dssim_loss=0.182, depth_loss=1.21, psnr=9.61]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20477])) that is different to the input size (torch.Size([20477, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 23/10000 [00:11<1:20:17,  2.07it/s, total_loss=0.791, l1_loss=0.383, dssim_loss=0.329, depth_loss=1.07, psnr=7.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17907])) that is different to the input size (torch.Size([17907, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 24/10000 [00:11<1:19:42,  2.09it/s, total_loss=0.56, l1_loss=0.224, dssim_loss=0.137, depth_loss=1.04, psnr=9.95]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18398])) that is different to the input size (torch.Size([18398, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 25/10000 [00:12<1:17:41,  2.14it/s, total_loss=0.638, l1_loss=0.35, dssim_loss=0.269, depth_loss=0.746, psnr=8.13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17741])) that is different to the input size (torch.Size([17741, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 26/10000 [00:12<1:18:15,  2.12it/s, total_loss=0.503, l1_loss=0.209, dssim_loss=0.119, depth_loss=0.921, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16994])) that is different to the input size (torch.Size([16994, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 27/10000 [00:12<1:18:58,  2.10it/s, total_loss=0.902, l1_loss=0.383, dssim_loss=0.305, depth_loss=1.48, psnr=7.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16357])) that is different to the input size (torch.Size([16357, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 28/10000 [00:13<1:18:31,  2.12it/s, total_loss=0.476, l1_loss=0.2, dssim_loss=0.11, depth_loss=0.868, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19579])) that is different to the input size (torch.Size([19579, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 29/10000 [00:13<1:18:39,  2.11it/s, total_loss=0.636, l1_loss=0.309, dssim_loss=0.237, depth_loss=0.9, psnr=8.99]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20457])) that is different to the input size (torch.Size([20457, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 30/10000 [00:14<1:18:01,  2.13it/s, total_loss=0.564, l1_loss=0.239, dssim_loss=0.151, depth_loss=0.992, psnr=9.83]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16394])) that is different to the input size (torch.Size([16394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 31/10000 [00:14<1:17:39,  2.14it/s, total_loss=0.487, l1_loss=0.193, dssim_loss=0.109, depth_loss=0.928, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15844])) that is different to the input size (torch.Size([15844, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 32/10000 [00:15<1:19:05,  2.10it/s, total_loss=0.688, l1_loss=0.21, dssim_loss=0.139, depth_loss=1.5, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12215])) that is different to the input size (torch.Size([12215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 33/10000 [00:15<1:20:44,  2.06it/s, total_loss=0.641, l1_loss=0.294, dssim_loss=0.197, depth_loss=1.03, psnr=9.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15705])) that is different to the input size (torch.Size([15705, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 34/10000 [00:16<1:21:18,  2.04it/s, total_loss=0.657, l1_loss=0.31, dssim_loss=0.207, depth_loss=1.02, psnr=9.11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15606])) that is different to the input size (torch.Size([15606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 35/10000 [00:16<1:21:10,  2.05it/s, total_loss=0.786, l1_loss=0.322, dssim_loss=0.254, depth_loss=1.34, psnr=8.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20560])) that is different to the input size (torch.Size([20560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 36/10000 [00:17<1:20:40,  2.06it/s, total_loss=0.588, l1_loss=0.32, dssim_loss=0.254, depth_loss=0.682, psnr=8.35]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20374])) that is different to the input size (torch.Size([20374, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 37/10000 [00:17<1:20:09,  2.07it/s, total_loss=0.577, l1_loss=0.32, dssim_loss=0.258, depth_loss=0.639, psnr=8.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15732])) that is different to the input size (torch.Size([15732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 38/10000 [00:18<1:20:53,  2.05it/s, total_loss=0.612, l1_loss=0.243, dssim_loss=0.152, depth_loss=1.14, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20527])) that is different to the input size (torch.Size([20527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 39/10000 [00:18<1:20:27,  2.06it/s, total_loss=0.538, l1_loss=0.288, dssim_loss=0.218, depth_loss=0.663, psnr=9.06]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15528])) that is different to the input size (torch.Size([15528, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 40/10000 [00:19<1:20:34,  2.06it/s, total_loss=0.771, l1_loss=0.31, dssim_loss=0.243, depth_loss=1.34, psnr=8.79]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20877])) that is different to the input size (torch.Size([20877, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 41/10000 [00:19<1:19:50,  2.08it/s, total_loss=0.54, l1_loss=0.217, dssim_loss=0.138, depth_loss=0.989, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19935])) that is different to the input size (torch.Size([19935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 43/10000 [00:20<1:19:12,  2.10it/s, total_loss=0.62, l1_loss=0.21, dssim_loss=0.142, depth_loss=1.27, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20634])) that is different to the input size (torch.Size([20634, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 45/10000 [00:21<1:18:45,  2.11it/s, total_loss=0.482, l1_loss=0.195, dssim_loss=0.112, depth_loss=0.899, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16977])) that is different to the input size (torch.Size([16977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 46/10000 [00:22<1:19:14,  2.09it/s, total_loss=0.621, l1_loss=0.196, dssim_loss=0.135, depth_loss=1.32, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14253])) that is different to the input size (torch.Size([14253, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 48/10000 [00:23<1:19:33,  2.08it/s, total_loss=0.482, l1_loss=0.184, dssim_loss=0.103, depth_loss=0.944, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19723])) that is different to the input size (torch.Size([19723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 49/10000 [00:23<1:18:40,  2.11it/s, total_loss=0.466, l1_loss=0.175, dssim_loss=0.103, depth_loss=0.915, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12671])) that is different to the input size (torch.Size([12671, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 50/10000 [00:24<1:20:29,  2.06it/s, total_loss=0.6, l1_loss=0.253, dssim_loss=0.169, depth_loss=1.04, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16468])) that is different to the input size (torch.Size([16468, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                               | 51/10000 [00:24<1:20:47,  2.05it/s, total_loss=0.639, l1_loss=0.192, dssim_loss=0.127, depth_loss=1.41, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13148])) that is different to the input size (torch.Size([13148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                             | 52/10000 [00:25<1:22:05,  2.02it/s, total_loss=0.591, l1_loss=0.236, dssim_loss=0.164, depth_loss=1.07, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17261])) that is different to the input size (torch.Size([17261, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                             | 54/10000 [00:26<1:20:17,  2.06it/s, total_loss=0.453, l1_loss=0.23, dssim_loss=0.152, depth_loss=0.642, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18387])) that is different to the input size (torch.Size([18387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                            | 55/10000 [00:26<1:18:33,  2.11it/s, total_loss=0.516, l1_loss=0.253, dssim_loss=0.182, depth_loss=0.742, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20866])) that is different to the input size (torch.Size([20866, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 56/10000 [00:26<1:18:41,  2.11it/s, total_loss=0.496, l1_loss=0.232, dssim_loss=0.138, depth_loss=0.803, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17532])) that is different to the input size (torch.Size([17532, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 58/10000 [00:27<1:18:51,  2.10it/s, total_loss=0.663, l1_loss=0.294, dssim_loss=0.244, depth_loss=1.02, psnr=9.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17474])) that is different to the input size (torch.Size([17474, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 60/10000 [00:28<1:18:25,  2.11it/s, total_loss=0.417, l1_loss=0.152, dssim_loss=0.091, depth_loss=0.832, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17600])) that is different to the input size (torch.Size([17600, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 63/10000 [00:30<1:20:04,  2.07it/s, total_loss=0.628, l1_loss=0.27, dssim_loss=0.221, depth_loss=1.01, psnr=9.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20943])) that is different to the input size (torch.Size([20943, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 64/10000 [00:30<1:19:26,  2.08it/s, total_loss=0.471, l1_loss=0.171, dssim_loss=0.111, depth_loss=0.93, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20183])) that is different to the input size (torch.Size([20183, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 65/10000 [00:31<1:19:18,  2.09it/s, total_loss=0.597, l1_loss=0.25, dssim_loss=0.204, depth_loss=0.986, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13182])) that is different to the input size (torch.Size([13182, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 67/10000 [00:32<1:20:11,  2.06it/s, total_loss=0.402, l1_loss=0.2, dssim_loss=0.134, depth_loss=0.583, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16550])) that is different to the input size (torch.Size([16550, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 68/10000 [00:32<1:18:56,  2.10it/s, total_loss=0.408, l1_loss=0.141, dssim_loss=0.081, depth_loss=0.85, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20889])) that is different to the input size (torch.Size([20889, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 70/10000 [00:33<1:18:20,  2.11it/s, total_loss=0.465, l1_loss=0.168, dssim_loss=0.109, depth_loss=0.923, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19328])) that is different to the input size (torch.Size([19328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 72/10000 [00:34<1:19:16,  2.09it/s, total_loss=0.564, l1_loss=0.174, dssim_loss=0.115, depth_loss=1.22, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15767])) that is different to the input size (torch.Size([15767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 73/10000 [00:35<1:20:02,  2.07it/s, total_loss=0.526, l1_loss=0.201, dssim_loss=0.129, depth_loss=1, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20713])) that is different to the input size (torch.Size([20713, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 74/10000 [00:35<1:19:22,  2.08it/s, total_loss=0.436, l1_loss=0.196, dssim_loss=0.121, depth_loss=0.73, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15754])) that is different to the input size (torch.Size([15754, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 75/10000 [00:36<1:20:01,  2.07it/s, total_loss=0.529, l1_loss=0.185, dssim_loss=0.121, depth_loss=1.07, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16859])) that is different to the input size (torch.Size([16859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 76/10000 [00:36<1:20:27,  2.06it/s, total_loss=0.797, l1_loss=0.3, dssim_loss=0.221, depth_loss=1.49, psnr=8.96]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20236])) that is different to the input size (torch.Size([20236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 77/10000 [00:37<1:19:13,  2.09it/s, total_loss=0.443, l1_loss=0.157, dssim_loss=0.094, depth_loss=0.905, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19204])) that is different to the input size (torch.Size([19204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 80/10000 [00:38<1:20:22,  2.06it/s, total_loss=0.485, l1_loss=0.188, dssim_loss=0.131, depth_loss=0.897, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18385])) that is different to the input size (torch.Size([18385, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 81/10000 [00:38<1:19:03,  2.09it/s, total_loss=0.427, l1_loss=0.211, dssim_loss=0.15, depth_loss=0.612, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20756])) that is different to the input size (torch.Size([20756, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 88/10000 [00:42<1:19:40,  2.07it/s, total_loss=0.492, l1_loss=0.172, dssim_loss=0.121, depth_loss=0.977, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17822])) that is different to the input size (torch.Size([17822, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                | 89/10000 [00:42<1:19:02,  2.09it/s, total_loss=0.472, l1_loss=0.15, dssim_loss=0.1, depth_loss=1.01, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15723])) that is different to the input size (torch.Size([15723, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 90/10000 [00:43<1:19:26,  2.08it/s, total_loss=0.699, l1_loss=0.258, dssim_loss=0.214, depth_loss=1.28, psnr=9.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20867])) that is different to the input size (torch.Size([20867, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 92/10000 [00:44<1:18:00,  2.12it/s, total_loss=0.404, l1_loss=0.129, dssim_loss=0.078, depth_loss=0.874, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15375])) that is different to the input size (torch.Size([15375, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 93/10000 [00:44<1:19:35,  2.07it/s, total_loss=0.664, l1_loss=0.237, dssim_loss=0.2, depth_loss=1.25, psnr=9.41]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19770])) that is different to the input size (torch.Size([19770, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 94/10000 [00:45<1:18:47,  2.10it/s, total_loss=0.373, l1_loss=0.173, dssim_loss=0.126, depth_loss=0.571, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21021])) that is different to the input size (torch.Size([21021, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 95/10000 [00:45<1:18:27,  2.10it/s, total_loss=0.445, l1_loss=0.152, dssim_loss=0.103, depth_loss=0.906, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16227])) that is different to the input size (torch.Size([16227, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 97/10000 [00:46<1:18:50,  2.09it/s, total_loss=0.506, l1_loss=0.16, dssim_loss=0.114, depth_loss=1.07, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20830])) that is different to the input size (torch.Size([20830, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 98/10000 [00:47<1:18:16,  2.11it/s, total_loss=0.435, l1_loss=0.145, dssim_loss=0.103, depth_loss=0.892, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20606])) that is different to the input size (torch.Size([20606, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 100/10000 [00:48<1:18:49,  2.09it/s, total_loss=0.513, l1_loss=0.146, dssim_loss=0.105, depth_loss=1.15, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16792])) that is different to the input size (torch.Size([16792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 102/10000 [00:48<1:18:02,  2.11it/s, total_loss=0.534, l1_loss=0.185, dssim_loss=0.125, depth_loss=1.08, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17905])) that is different to the input size (torch.Size([17905, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 104/10000 [00:49<1:16:56,  2.14it/s, total_loss=0.433, l1_loss=0.181, dssim_loss=0.151, depth_loss=0.706, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16682])) that is different to the input size (torch.Size([16682, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 108/10000 [00:51<1:20:18,  2.05it/s, total_loss=0.384, l1_loss=0.121, dssim_loss=0.078, depth_loss=0.828, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19539])) that is different to the input size (torch.Size([19539, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 109/10000 [00:52<1:19:10,  2.08it/s, total_loss=0.363, l1_loss=0.165, dssim_loss=0.124, depth_loss=0.564, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20814])) that is different to the input size (torch.Size([20814, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 110/10000 [00:52<1:18:24,  2.10it/s, total_loss=0.591, l1_loss=0.246, dssim_loss=0.192, depth_loss=0.995, psnr=9.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15313])) that is different to the input size (torch.Size([15313, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 111/10000 [00:53<1:19:00,  2.09it/s, total_loss=0.687, l1_loss=0.236, dssim_loss=0.189, depth_loss=1.35, psnr=9.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15435])) that is different to the input size (torch.Size([15435, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 113/10000 [00:54<1:20:07,  2.06it/s, total_loss=0.47, l1_loss=0.153, dssim_loss=0.116, depth_loss=0.965, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19992])) that is different to the input size (torch.Size([19992, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 114/10000 [00:54<1:18:54,  2.09it/s, total_loss=0.4, l1_loss=0.13, dssim_loss=0.079, depth_loss=0.857, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18217])) that is different to the input size (torch.Size([18217, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 115/10000 [00:55<1:18:41,  2.09it/s, total_loss=0.37, l1_loss=0.119, dssim_loss=0.072, depth_loss=0.797, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20081])) that is different to the input size (torch.Size([20081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 116/10000 [00:55<1:18:11,  2.11it/s, total_loss=0.346, l1_loss=0.152, dssim_loss=0.119, depth_loss=0.552, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19807])) that is different to the input size (torch.Size([19807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 117/10000 [00:56<1:18:12,  2.11it/s, total_loss=0.487, l1_loss=0.191, dssim_loss=0.172, depth_loss=0.826, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15598])) that is different to the input size (torch.Size([15598, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 118/10000 [00:56<1:19:15,  2.08it/s, total_loss=0.744, l1_loss=0.243, dssim_loss=0.188, depth_loss=1.52, psnr=9.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17471])) that is different to the input size (torch.Size([17471, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 119/10000 [00:57<1:19:13,  2.08it/s, total_loss=0.632, l1_loss=0.209, dssim_loss=0.153, depth_loss=1.29, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17255])) that is different to the input size (torch.Size([17255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 121/10000 [00:58<1:18:59,  2.08it/s, total_loss=0.662, l1_loss=0.219, dssim_loss=0.189, depth_loss=1.31, psnr=9.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13931])) that is different to the input size (torch.Size([13931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 122/10000 [00:58<1:20:29,  2.05it/s, total_loss=0.55, l1_loss=0.176, dssim_loss=0.146, depth_loss=1.12, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16386])) that is different to the input size (torch.Size([16386, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 123/10000 [00:59<1:18:57,  2.08it/s, total_loss=0.382, l1_loss=0.125, dssim_loss=0.074, depth_loss=0.815, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17762])) that is different to the input size (torch.Size([17762, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 128/10000 [01:01<1:18:18,  2.10it/s, total_loss=0.661, l1_loss=0.215, dssim_loss=0.181, depth_loss=1.33, psnr=9.79]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15531])) that is different to the input size (torch.Size([15531, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 134/10000 [01:04<1:18:00,  2.11it/s, total_loss=0.357, l1_loss=0.117, dssim_loss=0.066, depth_loss=0.767, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15407])) that is different to the input size (torch.Size([15407, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 135/10000 [01:04<1:18:59,  2.08it/s, total_loss=0.458, l1_loss=0.149, dssim_loss=0.12, depth_loss=0.928, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14895])) that is different to the input size (torch.Size([14895, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 138/10000 [01:06<1:20:49,  2.03it/s, total_loss=0.553, l1_loss=0.167, dssim_loss=0.153, depth_loss=1.14, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20763])) that is different to the input size (torch.Size([20763, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 141/10000 [01:07<1:19:34,  2.06it/s, total_loss=0.504, l1_loss=0.142, dssim_loss=0.099, depth_loss=1.14, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19946])) that is different to the input size (torch.Size([19946, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 142/10000 [01:08<1:19:08,  2.08it/s, total_loss=0.49, l1_loss=0.191, dssim_loss=0.171, depth_loss=0.839, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11303])) that is different to the input size (torch.Size([11303, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 145/10000 [01:09<1:20:19,  2.05it/s, total_loss=0.446, l1_loss=0.151, dssim_loss=0.12, depth_loss=0.883, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13941])) that is different to the input size (torch.Size([13941, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 146/10000 [01:10<1:21:18,  2.02it/s, total_loss=0.447, l1_loss=0.153, dssim_loss=0.123, depth_loss=0.877, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21102])) that is different to the input size (torch.Size([21102, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 147/10000 [01:10<1:20:08,  2.05it/s, total_loss=0.419, l1_loss=0.138, dssim_loss=0.1, depth_loss=0.859, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20767])) that is different to the input size (torch.Size([20767, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 148/10000 [01:11<1:19:08,  2.07it/s, total_loss=0.525, l1_loss=0.195, dssim_loss=0.144, depth_loss=0.99, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15792])) that is different to the input size (torch.Size([15792, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                               | 151/10000 [01:12<1:21:04,  2.02it/s, total_loss=0.608, l1_loss=0.2, dssim_loss=0.176, depth_loss=1.2, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20575])) that is different to the input size (torch.Size([20575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 152/10000 [01:13<1:20:00,  2.05it/s, total_loss=0.541, l1_loss=0.223, dssim_loss=0.179, depth_loss=0.91, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21204])) that is different to the input size (torch.Size([21204, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 153/10000 [01:13<1:24:04,  1.95it/s, total_loss=0.552, l1_loss=0.209, dssim_loss=0.164, depth_loss=1.01, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11147])) that is different to the input size (torch.Size([11147, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 156/10000 [01:15<1:20:19,  2.04it/s, total_loss=0.383, l1_loss=0.143, dssim_loss=0.1, depth_loss=0.729, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20452])) that is different to the input size (torch.Size([20452, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 160/10000 [01:17<1:19:57,  2.05it/s, total_loss=0.454, l1_loss=0.138, dssim_loss=0.109, depth_loss=0.966, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16707])) that is different to the input size (torch.Size([16707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 161/10000 [01:17<1:18:48,  2.08it/s, total_loss=0.375, l1_loss=0.11, dssim_loss=0.072, depth_loss=0.837, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15628])) that is different to the input size (torch.Size([15628, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 164/10000 [01:18<1:19:31,  2.06it/s, total_loss=0.598, l1_loss=0.152, dssim_loss=0.1, depth_loss=1.42, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20624])) that is different to the input size (torch.Size([20624, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 165/10000 [01:19<1:18:50,  2.08it/s, total_loss=0.504, l1_loss=0.189, dssim_loss=0.166, depth_loss=0.9, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18397])) that is different to the input size (torch.Size([18397, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 168/10000 [01:20<1:16:47,  2.13it/s, total_loss=0.364, l1_loss=0.143, dssim_loss=0.1, depth_loss=0.666, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20533])) that is different to the input size (torch.Size([20533, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 177/10000 [01:25<1:17:50,  2.10it/s, total_loss=0.42, l1_loss=0.165, dssim_loss=0.148, depth_loss=0.714, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21129])) that is different to the input size (torch.Size([21129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 182/10000 [01:27<1:16:30,  2.14it/s, total_loss=0.343, l1_loss=0.102, dssim_loss=0.065, depth_loss=0.763, psnr=15.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15944])) that is different to the input size (torch.Size([15944, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 183/10000 [01:27<1:17:51,  2.10it/s, total_loss=0.686, l1_loss=0.203, dssim_loss=0.168, depth_loss=1.47, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17573])) that is different to the input size (torch.Size([17573, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 186/10000 [01:29<1:18:00,  2.10it/s, total_loss=0.413, l1_loss=0.145, dssim_loss=0.097, depth_loss=0.829, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15296])) that is different to the input size (torch.Size([15296, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 188/10000 [01:30<1:19:49,  2.05it/s, total_loss=0.434, l1_loss=0.144, dssim_loss=0.121, depth_loss=0.859, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18439])) that is different to the input size (torch.Size([18439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 191/10000 [01:31<1:17:52,  2.10it/s, total_loss=0.34, l1_loss=0.153, dssim_loss=0.112, depth_loss=0.539, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16167])) that is different to the input size (torch.Size([16167, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 192/10000 [01:32<1:18:14,  2.09it/s, total_loss=0.594, l1_loss=0.157, dssim_loss=0.104, depth_loss=1.39, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18595])) that is different to the input size (torch.Size([18595, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 197/10000 [01:34<1:18:50,  2.07it/s, total_loss=0.599, l1_loss=0.199, dssim_loss=0.175, depth_loss=1.17, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20294])) that is different to the input size (torch.Size([20294, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 201/10000 [01:36<1:16:39,  2.13it/s, total_loss=0.366, l1_loss=0.153, dssim_loss=0.124, depth_loss=0.605, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20683])) that is different to the input size (torch.Size([20683, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 204/10000 [01:37<1:16:10,  2.14it/s, total_loss=0.361, l1_loss=0.144, dssim_loss=0.12, depth_loss=0.621, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17429])) that is different to the input size (torch.Size([17429, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                              | 208/10000 [01:39<1:17:57,  2.09it/s, total_loss=0.66, l1_loss=0.19, dssim_loss=0.163, depth_loss=1.42, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19047])) that is different to the input size (torch.Size([19047, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 210/10000 [01:40<1:18:29,  2.08it/s, total_loss=0.433, l1_loss=0.142, dssim_loss=0.118, depth_loss=0.87, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16352])) that is different to the input size (torch.Size([16352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 211/10000 [01:41<1:17:28,  2.11it/s, total_loss=0.333, l1_loss=0.098, dssim_loss=0.061, depth_loss=0.748, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16954])) that is different to the input size (torch.Size([16954, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 212/10000 [01:41<1:17:32,  2.10it/s, total_loss=0.343, l1_loss=0.108, dssim_loss=0.068, depth_loss=0.741, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12699])) that is different to the input size (torch.Size([12699, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 214/10000 [01:42<1:19:26,  2.05it/s, total_loss=0.529, l1_loss=0.14, dssim_loss=0.095, depth_loss=1.23, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11732])) that is different to the input size (torch.Size([11732, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                              | 215/10000 [01:43<1:20:01,  2.04it/s, total_loss=0.43, l1_loss=0.127, dssim_loss=0.106, depth_loss=0.916, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20566])) that is different to the input size (torch.Size([20566, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 217/10000 [01:44<1:20:07,  2.03it/s, total_loss=0.422, l1_loss=0.139, dssim_loss=0.114, depth_loss=0.844, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17165])) that is different to the input size (torch.Size([17165, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 223/10000 [01:47<1:18:15,  2.08it/s, total_loss=0.488, l1_loss=0.171, dssim_loss=0.156, depth_loss=0.908, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15214])) that is different to the input size (torch.Size([15214, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 224/10000 [01:47<1:18:57,  2.06it/s, total_loss=0.437, l1_loss=0.141, dssim_loss=0.114, depth_loss=0.89, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20363])) that is different to the input size (torch.Size([20363, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 226/10000 [01:48<1:17:42,  2.10it/s, total_loss=0.485, l1_loss=0.153, dssim_loss=0.103, depth_loss=1.03, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18562])) that is different to the input size (torch.Size([18562, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 229/10000 [01:49<1:17:54,  2.09it/s, total_loss=0.481, l1_loss=0.161, dssim_loss=0.145, depth_loss=0.933, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21003])) that is different to the input size (torch.Size([21003, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 234/10000 [01:52<1:16:24,  2.13it/s, total_loss=0.596, l1_loss=0.186, dssim_loss=0.169, depth_loss=1.21, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20100])) that is different to the input size (torch.Size([20100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 239/10000 [01:54<1:17:29,  2.10it/s, total_loss=0.346, l1_loss=0.147, dssim_loss=0.111, depth_loss=0.578, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15443])) that is different to the input size (torch.Size([15443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                             | 246/10000 [01:57<1:16:56,  2.11it/s, total_loss=0.586, l1_loss=0.143, dssim_loss=0.096, depth_loss=1.41, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18352])) that is different to the input size (torch.Size([18352, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                            | 248/10000 [01:58<1:16:29,  2.12it/s, total_loss=0.458, l1_loss=0.17, dssim_loss=0.159, depth_loss=0.81, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19299])) that is different to the input size (torch.Size([19299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█                                           | 254/10000 [02:01<1:16:34,  2.12it/s, total_loss=0.354, l1_loss=0.142, dssim_loss=0.099, depth_loss=0.635, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11743])) that is different to the input size (torch.Size([11743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 258/10000 [02:03<1:18:15,  2.07it/s, total_loss=0.368, l1_loss=0.12, dssim_loss=0.074, depth_loss=0.783, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20580])) that is different to the input size (torch.Size([20580, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                              | 261/10000 [02:05<1:17:34,  2.09it/s, total_loss=0.327, l1_loss=0.133, dssim_loss=0.1, depth_loss=0.567, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17876])) that is different to the input size (torch.Size([17876, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                          | 262/10000 [02:05<1:17:28,  2.09it/s, total_loss=0.373, l1_loss=0.115, dssim_loss=0.075, depth_loss=0.813, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15299])) that is different to the input size (torch.Size([15299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                          | 264/10000 [02:06<1:17:07,  2.10it/s, total_loss=0.343, l1_loss=0.105, dssim_loss=0.068, depth_loss=0.752, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20066])) that is different to the input size (torch.Size([20066, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                          | 265/10000 [02:06<1:17:01,  2.11it/s, total_loss=0.459, l1_loss=0.184, dssim_loss=0.165, depth_loss=0.763, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17022])) that is different to the input size (torch.Size([17022, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 267/10000 [02:07<1:17:28,  2.09it/s, total_loss=0.572, l1_loss=0.142, dssim_loss=0.092, depth_loss=1.38, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15383])) that is different to the input size (torch.Size([15383, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 269/10000 [02:08<1:17:57,  2.08it/s, total_loss=0.471, l1_loss=0.138, dssim_loss=0.113, depth_loss=1.02, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15445])) that is different to the input size (torch.Size([15445, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 271/10000 [02:09<1:18:15,  2.07it/s, total_loss=0.346, l1_loss=0.118, dssim_loss=0.07, depth_loss=0.724, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15666])) that is different to the input size (torch.Size([15666, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                          | 275/10000 [02:11<1:16:52,  2.11it/s, total_loss=0.442, l1_loss=0.169, dssim_loss=0.156, depth_loss=0.764, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21011])) that is different to the input size (torch.Size([21011, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                          | 280/10000 [02:14<1:16:16,  2.12it/s, total_loss=0.371, l1_loss=0.123, dssim_loss=0.087, depth_loss=0.765, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19561])) that is different to the input size (torch.Size([19561, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 283/10000 [02:15<1:15:52,  2.13it/s, total_loss=0.343, l1_loss=0.162, dssim_loss=0.114, depth_loss=0.52, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19828])) that is different to the input size (torch.Size([19828, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                          | 284/10000 [02:15<1:16:04,  2.13it/s, total_loss=0.405, l1_loss=0.126, dssim_loss=0.104, depth_loss=0.841, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14255])) that is different to the input size (torch.Size([14255, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 286/10000 [02:16<1:17:05,  2.10it/s, total_loss=0.424, l1_loss=0.124, dssim_loss=0.082, depth_loss=0.948, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18667])) that is different to the input size (torch.Size([18667, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 288/10000 [02:17<1:17:33,  2.09it/s, total_loss=0.634, l1_loss=0.189, dssim_loss=0.155, depth_loss=1.35, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21225])) that is different to the input size (torch.Size([21225, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 289/10000 [02:18<1:17:21,  2.09it/s, total_loss=0.467, l1_loss=0.168, dssim_loss=0.151, depth_loss=0.858, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17575])) that is different to the input size (torch.Size([17575, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 291/10000 [02:19<1:17:02,  2.10it/s, total_loss=0.435, l1_loss=0.154, dssim_loss=0.151, depth_loss=0.788, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20583])) that is different to the input size (torch.Size([20583, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 302/10000 [02:24<1:16:11,  2.12it/s, total_loss=0.441, l1_loss=0.177, dssim_loss=0.15, depth_loss=0.745, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15636])) that is different to the input size (torch.Size([15636, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                           | 308/10000 [02:27<1:18:02,  2.07it/s, total_loss=0.497, l1_loss=0.121, dssim_loss=0.089, depth_loss=1.19, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21254])) that is different to the input size (torch.Size([21254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 310/10000 [02:28<1:20:40,  2.00it/s, total_loss=0.422, l1_loss=0.156, dssim_loss=0.151, depth_loss=0.738, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17464])) that is different to the input size (torch.Size([17464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 314/10000 [02:30<1:16:42,  2.10it/s, total_loss=0.343, l1_loss=0.143, dssim_loss=0.096, depth_loss=0.601, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18791])) that is different to the input size (torch.Size([18791, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 322/10000 [02:34<1:16:25,  2.11it/s, total_loss=0.356, l1_loss=0.143, dssim_loss=0.125, depth_loss=0.596, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18410])) that is different to the input size (torch.Size([18410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                           | 332/10000 [02:38<1:17:50,  2.07it/s, total_loss=0.613, l1_loss=0.176, dssim_loss=0.152, depth_loss=1.32, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15219])) that is different to the input size (torch.Size([15219, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 334/10000 [02:39<1:19:05,  2.04it/s, total_loss=0.41, l1_loss=0.131, dssim_loss=0.111, depth_loss=0.833, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16449])) that is different to the input size (torch.Size([16449, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 339/10000 [02:42<1:15:32,  2.13it/s, total_loss=0.297, l1_loss=0.098, dssim_loss=0.054, depth_loss=0.638, psnr=16.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20935])) that is different to the input size (torch.Size([20935, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                           | 341/10000 [02:43<1:17:29,  2.08it/s, total_loss=0.508, l1_loss=0.146, dssim_loss=0.136, depth_loss=1.08, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20188])) that is different to the input size (torch.Size([20188, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                          | 346/10000 [02:45<1:15:11,  2.14it/s, total_loss=0.352, l1_loss=0.152, dssim_loss=0.121, depth_loss=0.569, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15798])) that is different to the input size (torch.Size([15798, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                           | 348/10000 [02:46<1:16:08,  2.11it/s, total_loss=0.387, l1_loss=0.122, dssim_loss=0.106, depth_loss=0.79, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15458])) that is different to the input size (torch.Size([15458, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                          | 351/10000 [02:47<1:15:25,  2.13it/s, total_loss=0.341, l1_loss=0.142, dssim_loss=0.116, depth_loss=0.567, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18372])) that is different to the input size (torch.Size([18372, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                           | 354/10000 [02:49<1:16:20,  2.11it/s, total_loss=0.422, l1_loss=0.14, dssim_loss=0.112, depth_loss=0.848, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20290])) that is different to the input size (torch.Size([20290, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                          | 356/10000 [02:50<1:16:13,  2.11it/s, total_loss=0.411, l1_loss=0.152, dssim_loss=0.144, depth_loss=0.724, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([14950])) that is different to the input size (torch.Size([14950, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                           | 361/10000 [02:52<1:17:08,  2.08it/s, total_loss=0.586, l1_loss=0.163, dssim_loss=0.149, depth_loss=1.27, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19434])) that is different to the input size (torch.Size([19434, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                             | 364/10000 [02:54<1:14:55,  2.14it/s, total_loss=0.37, l1_loss=0.115, dssim_loss=0.095, depth_loss=0.771, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20391])) that is different to the input size (torch.Size([20391, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                          | 367/10000 [02:55<1:14:17,  2.16it/s, total_loss=0.327, l1_loss=0.146, dssim_loss=0.116, depth_loss=0.507, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17319])) that is different to the input size (torch.Size([17319, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                          | 376/10000 [02:59<1:16:13,  2.10it/s, total_loss=0.458, l1_loss=0.172, dssim_loss=0.122, depth_loss=0.865, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16542])) that is different to the input size (torch.Size([16542, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                          | 379/10000 [03:01<1:16:32,  2.09it/s, total_loss=0.451, l1_loss=0.146, dssim_loss=0.107, depth_loss=0.937, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21243])) that is different to the input size (torch.Size([21243, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                          | 386/10000 [03:04<1:15:53,  2.11it/s, total_loss=0.414, l1_loss=0.171, dssim_loss=0.147, depth_loss=0.679, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17613])) that is different to the input size (torch.Size([17613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                             | 394/10000 [03:08<1:16:23,  2.10it/s, total_loss=0.444, l1_loss=0.131, dssim_loss=0.11, depth_loss=0.947, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17318])) that is different to the input size (torch.Size([17318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                             | 399/10000 [03:10<1:16:40,  2.09it/s, total_loss=0.555, l1_loss=0.18, dssim_loss=0.159, depth_loss=1.1, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21002])) that is different to the input size (torch.Size([21002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                          | 402/10000 [03:12<1:16:25,  2.09it/s, total_loss=0.391, l1_loss=0.136, dssim_loss=0.117, depth_loss=0.747, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20721])) that is different to the input size (torch.Size([20721, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                          | 422/10000 [03:21<1:15:12,  2.12it/s, total_loss=0.344, l1_loss=0.156, dssim_loss=0.105, depth_loss=0.557, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18354])) that is different to the input size (torch.Size([18354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                            | 432/10000 [03:26<1:15:22,  2.12it/s, total_loss=0.354, l1_loss=0.135, dssim_loss=0.094, depth_loss=0.662, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16740])) that is different to the input size (torch.Size([16740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                          | 435/10000 [03:27<1:15:45,  2.10it/s, total_loss=0.404, l1_loss=0.161, dssim_loss=0.149, depth_loss=0.667, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18412])) that is different to the input size (torch.Size([18412, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                            | 448/10000 [03:33<1:16:13,  2.09it/s, total_loss=0.326, l1_loss=0.154, dssim_loss=0.114, depth_loss=0.488, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13554])) that is different to the input size (torch.Size([13554, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                           | 466/10000 [03:42<1:15:59,  2.09it/s, total_loss=0.406, l1_loss=0.186, dssim_loss=0.107, depth_loss=0.678, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19058])) that is different to the input size (torch.Size([19058, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                          | 482/10000 [03:50<1:16:16,  2.08it/s, total_loss=0.546, l1_loss=0.186, dssim_loss=0.161, depth_loss=1.06, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16728])) that is different to the input size (torch.Size([16728, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                          | 483/10000 [03:50<1:16:03,  2.09it/s, total_loss=0.495, l1_loss=0.132, dssim_loss=0.089, depth_loss=1.15, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([12264])) that is different to the input size (torch.Size([12264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                          | 518/10000 [04:07<1:14:48,  2.11it/s, total_loss=0.39, l1_loss=0.127, dssim_loss=0.099, depth_loss=0.798, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16387])) that is different to the input size (torch.Size([16387, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▌                                         | 578/10000 [04:35<1:13:41,  2.13it/s, total_loss=0.278, l1_loss=0.112, dssim_loss=0.059, depth_loss=0.527, psnr=16.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([11264])) that is different to the input size (torch.Size([11264, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                          | 595/10000 [04:43<1:13:37,  2.13it/s, total_loss=0.302, l1_loss=0.104, dssim_loss=0.07, depth_loss=0.612, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16149])) that is different to the input size (torch.Size([16149, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▉                                           | 638/10000 [05:03<1:13:00,  2.14it/s, total_loss=0.358, l1_loss=0.181, dssim_loss=0.125, depth_loss=0.5, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18766])) that is different to the input size (torch.Size([18766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███                                         | 689/10000 [05:28<1:13:21,  2.12it/s, total_loss=0.282, l1_loss=0.103, dssim_loss=0.072, depth_loss=0.544, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([13568])) that is different to the input size (torch.Size([13568, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                         | 738/10000 [05:51<1:12:10,  2.14it/s, total_loss=0.263, l1_loss=0.11, dssim_loss=0.058, depth_loss=0.485, psnr=16.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19102])) that is different to the input size (torch.Size([19102, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                         | 740/10000 [05:52<1:11:35,  2.16it/s, total_loss=0.286, l1_loss=0.11, dssim_loss=0.064, depth_loss=0.552, psnr=15.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15164])) that is different to the input size (torch.Size([15164, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▊                                               | 759/10000 [06:01<1:12:22,  2.13it/s, total_loss=0.485, l1_loss=0.15, dssim_loss=0.131, depth_loss=1, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15594])) that is different to the input size (torch.Size([15594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▌                                         | 803/10000 [06:21<1:11:49,  2.13it/s, total_loss=0.32, l1_loss=0.129, dssim_loss=0.125, depth_loss=0.514, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20663])) that is different to the input size (torch.Size([20663, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 98%|███████████████████████████████████████████ | 9773/10000 [1:20:43<01:52,  2.02it/s, total_loss=0.227, l1_loss=0.08, dssim_loss=0.053, depth_loss=0.454, psnr=16.9]
Video saved to outputs/video_1000.mp4
Video saved to outputs/video_2000.mp4
Video saved to outputs/video_3000.mp4
Video saved to outputs/video_4000.mp4
Video saved to outputs/video_5000.mp4
Video saved to outputs/video_6000.mp4
Video saved to outputs/video_7000.mp4
Video saved to outputs/video_8000.mp4
Video saved to outputs/video_9000.mp4
Traceback (most recent call last):
  File "/home/ryan910702/hw1-nain9172/run.py", line 53, in <module>
    trainer.train()
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 124, in train
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 75, in train_step
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
