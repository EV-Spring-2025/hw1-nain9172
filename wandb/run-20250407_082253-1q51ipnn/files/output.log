Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19870])) that is different to the input size (torch.Size([19870, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 1/10000 [00:00<1:18:35,  2.12it/s, total_loss=0.52, l1_loss=0.455, dssim_loss=0.389, depth_loss=0.865, psnr=6.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17288])) that is different to the input size (torch.Size([17288, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 2/10000 [00:00<1:10:46,  2.35it/s, total_loss=0.451, l1_loss=0.406, dssim_loss=0.314, depth_loss=1.01, psnr=7.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15373])) that is different to the input size (torch.Size([15373, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 3/10000 [00:01<1:08:21,  2.44it/s, total_loss=0.416, l1_loss=0.381, dssim_loss=0.278, depth_loss=1.1, psnr=7.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28025])) that is different to the input size (torch.Size([28025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 4/10000 [00:01<1:07:17,  2.48it/s, total_loss=0.576, l1_loss=0.481, dssim_loss=0.478, depth_loss=1.25, psnr=5.46]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17918])) that is different to the input size (torch.Size([17918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 5/10000 [00:02<1:05:59,  2.52it/s, total_loss=0.404, l1_loss=0.367, dssim_loss=0.275, depth_loss=1.24, psnr=8.05]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20766])) that is different to the input size (torch.Size([20766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 6/10000 [00:02<1:05:08,  2.56it/s, total_loss=0.494, l1_loss=0.434, dssim_loss=0.367, depth_loss=1.62, psnr=6.73]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22613])) that is different to the input size (torch.Size([22613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 7/10000 [00:02<1:05:00,  2.56it/s, total_loss=0.469, l1_loss=0.421, dssim_loss=0.33, depth_loss=0.928, psnr=6.74]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18930])) that is different to the input size (torch.Size([18930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 8/10000 [00:03<1:05:00,  2.56it/s, total_loss=0.303, l1_loss=0.278, dssim_loss=0.203, depth_loss=0.91, psnr=8.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28205])) that is different to the input size (torch.Size([28205, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 9/10000 [00:03<1:09:52,  2.38it/s, total_loss=0.602, l1_loss=0.506, dssim_loss=0.492, depth_loss=0.948, psnr=5.15]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22124])) that is different to the input size (torch.Size([22124, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 10/10000 [00:04<1:07:58,  2.45it/s, total_loss=0.468, l1_loss=0.414, dssim_loss=0.343, depth_loss=1.5, psnr=7.05]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28930])) that is different to the input size (torch.Size([28930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 11/10000 [00:04<1:18:19,  2.13it/s, total_loss=0.477, l1_loss=0.415, dssim_loss=0.362, depth_loss=1.15, psnr=6.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23780])) that is different to the input size (torch.Size([23780, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 12/10000 [00:05<1:14:15,  2.24it/s, total_loss=0.473, l1_loss=0.421, dssim_loss=0.341, depth_loss=1.05, psnr=6.65]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23172])) that is different to the input size (torch.Size([23172, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 13/10000 [00:05<1:11:44,  2.32it/s, total_loss=0.405, l1_loss=0.367, dssim_loss=0.277, depth_loss=1.13, psnr=7.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24198])) that is different to the input size (torch.Size([24198, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 14/10000 [00:05<1:09:41,  2.39it/s, total_loss=0.399, l1_loss=0.364, dssim_loss=0.268, depth_loss=0.981, psnr=7.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28026])) that is different to the input size (torch.Size([28026, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 15/10000 [00:06<1:08:15,  2.44it/s, total_loss=0.388, l1_loss=0.349, dssim_loss=0.273, depth_loss=1.07, psnr=8.12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23499])) that is different to the input size (torch.Size([23499, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 16/10000 [00:06<1:07:38,  2.46it/s, total_loss=0.308, l1_loss=0.293, dssim_loss=0.184, depth_loss=0.908, psnr=9.29]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21317])) that is different to the input size (torch.Size([21317, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 17/10000 [00:07<1:05:55,  2.52it/s, total_loss=0.366, l1_loss=0.341, dssim_loss=0.233, depth_loss=1.05, psnr=8.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25029])) that is different to the input size (torch.Size([25029, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 18/10000 [00:07<1:05:46,  2.53it/s, total_loss=0.483, l1_loss=0.419, dssim_loss=0.369, depth_loss=0.767, psnr=6.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28569])) that is different to the input size (torch.Size([28569, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 19/10000 [00:07<1:05:10,  2.55it/s, total_loss=0.397, l1_loss=0.358, dssim_loss=0.276, depth_loss=1.01, psnr=7.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23797])) that is different to the input size (torch.Size([23797, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 20/10000 [00:08<1:04:46,  2.57it/s, total_loss=0.354, l1_loss=0.323, dssim_loss=0.239, depth_loss=1.28, psnr=8.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20996])) that is different to the input size (torch.Size([20996, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 21/10000 [00:08<1:03:32,  2.62it/s, total_loss=0.33, l1_loss=0.311, dssim_loss=0.201, depth_loss=1.16, psnr=9.12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19859])) that is different to the input size (torch.Size([19859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 22/10000 [00:08<1:03:37,  2.61it/s, total_loss=0.371, l1_loss=0.337, dssim_loss=0.254, depth_loss=1.36, psnr=8.62]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27979])) that is different to the input size (torch.Size([27979, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 23/10000 [00:09<1:03:43,  2.61it/s, total_loss=0.358, l1_loss=0.318, dssim_loss=0.257, depth_loss=0.824, psnr=8.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21236])) that is different to the input size (torch.Size([21236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 24/10000 [00:09<1:03:38,  2.61it/s, total_loss=0.348, l1_loss=0.315, dssim_loss=0.241, depth_loss=1.56, psnr=8.69]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18464])) that is different to the input size (torch.Size([18464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 25/10000 [00:10<1:03:34,  2.62it/s, total_loss=0.296, l1_loss=0.269, dssim_loss=0.201, depth_loss=1.27, psnr=9.57]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20289])) that is different to the input size (torch.Size([20289, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 26/10000 [00:10<1:03:39,  2.61it/s, total_loss=0.37, l1_loss=0.335, dssim_loss=0.255, depth_loss=1.38, psnr=8.63]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27615])) that is different to the input size (torch.Size([27615, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 27/10000 [00:10<1:03:54,  2.60it/s, total_loss=0.539, l1_loss=0.454, dssim_loss=0.438, depth_loss=1.26, psnr=5.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27564])) that is different to the input size (torch.Size([27564, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 28/10000 [00:11<1:04:33,  2.57it/s, total_loss=0.264, l1_loss=0.256, dssim_loss=0.149, depth_loss=0.944, psnr=9.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21229])) that is different to the input size (torch.Size([21229, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 29/10000 [00:11<1:03:58,  2.60it/s, total_loss=0.404, l1_loss=0.362, dssim_loss=0.286, depth_loss=1.55, psnr=8.01]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23778])) that is different to the input size (torch.Size([23778, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 30/10000 [00:12<1:04:26,  2.58it/s, total_loss=0.289, l1_loss=0.27, dssim_loss=0.182, depth_loss=1.18, psnr=9.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26669])) that is different to the input size (torch.Size([26669, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 31/10000 [00:12<1:04:45,  2.57it/s, total_loss=0.551, l1_loss=0.466, dssim_loss=0.447, depth_loss=1.19, psnr=5.71]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28841])) that is different to the input size (torch.Size([28841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 32/10000 [00:12<1:05:18,  2.54it/s, total_loss=0.338, l1_loss=0.305, dssim_loss=0.235, depth_loss=1.13, psnr=8.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21685])) that is different to the input size (torch.Size([21685, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 33/10000 [00:13<1:04:43,  2.57it/s, total_loss=0.307, l1_loss=0.277, dssim_loss=0.213, depth_loss=1.52, psnr=9.28]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27353])) that is different to the input size (torch.Size([27353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 34/10000 [00:13<1:04:59,  2.56it/s, total_loss=0.282, l1_loss=0.263, dssim_loss=0.181, depth_loss=1.05, psnr=9.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25931])) that is different to the input size (torch.Size([25931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 35/10000 [00:13<1:05:15,  2.54it/s, total_loss=0.412, l1_loss=0.366, dssim_loss=0.299, depth_loss=0.75, psnr=7.48]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17938])) that is different to the input size (torch.Size([17938, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 36/10000 [00:14<1:05:22,  2.54it/s, total_loss=0.265, l1_loss=0.249, dssim_loss=0.166, depth_loss=0.977, psnr=9.01]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21960])) that is different to the input size (torch.Size([21960, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 37/10000 [00:14<1:05:28,  2.54it/s, total_loss=0.248, l1_loss=0.238, dssim_loss=0.144, depth_loss=1.05, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27841])) that is different to the input size (torch.Size([27841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 38/10000 [00:15<1:05:38,  2.53it/s, total_loss=0.259, l1_loss=0.251, dssim_loss=0.145, depth_loss=0.964, psnr=9.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28704])) that is different to the input size (torch.Size([28704, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 41/10000 [00:16<1:04:59,  2.55it/s, total_loss=0.25, l1_loss=0.234, dssim_loss=0.156, depth_loss=1.18, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21215])) that is different to the input size (torch.Size([21215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 42/10000 [00:16<1:04:22,  2.58it/s, total_loss=0.272, l1_loss=0.251, dssim_loss=0.176, depth_loss=0.81, psnr=8.91]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21024])) that is different to the input size (torch.Size([21024, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 43/10000 [00:17<1:03:16,  2.62it/s, total_loss=0.248, l1_loss=0.241, dssim_loss=0.14, depth_loss=1.13, psnr=9.94]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22010])) that is different to the input size (torch.Size([22010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 44/10000 [00:17<1:02:45,  2.64it/s, total_loss=0.243, l1_loss=0.236, dssim_loss=0.135, depth_loss=1.19, psnr=9.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28518])) that is different to the input size (torch.Size([28518, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 45/10000 [00:17<1:03:36,  2.61it/s, total_loss=0.26, l1_loss=0.245, dssim_loss=0.16, depth_loss=1.06, psnr=9.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23485])) that is different to the input size (torch.Size([23485, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 48/10000 [00:19<1:04:46,  2.56it/s, total_loss=0.2, l1_loss=0.195, dssim_loss=0.111, depth_loss=0.905, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26610])) that is different to the input size (torch.Size([26610, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 49/10000 [00:19<1:04:56,  2.55it/s, total_loss=0.227, l1_loss=0.215, dssim_loss=0.138, depth_loss=1.04, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25049])) that is different to the input size (torch.Size([25049, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 50/10000 [00:19<1:05:22,  2.54it/s, total_loss=0.355, l1_loss=0.323, dssim_loss=0.241, depth_loss=0.736, psnr=8.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21428])) that is different to the input size (torch.Size([21428, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                             | 51/10000 [00:20<1:04:23,  2.58it/s, total_loss=0.335, l1_loss=0.302, dssim_loss=0.233, depth_loss=1.48, psnr=8.88]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21318])) that is different to the input size (torch.Size([21318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                             | 52/10000 [00:20<1:03:46,  2.60it/s, total_loss=0.335, l1_loss=0.303, dssim_loss=0.233, depth_loss=1.51, psnr=8.91]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21299])) that is different to the input size (torch.Size([21299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                            | 54/10000 [00:21<1:04:05,  2.59it/s, total_loss=0.187, l1_loss=0.181, dssim_loss=0.106, depth_loss=0.907, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22438])) that is different to the input size (torch.Size([22438, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 57/10000 [00:22<1:04:34,  2.57it/s, total_loss=0.195, l1_loss=0.182, dssim_loss=0.124, depth_loss=1.03, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16601])) that is different to the input size (torch.Size([16601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 58/10000 [00:22<1:04:46,  2.56it/s, total_loss=0.202, l1_loss=0.185, dssim_loss=0.136, depth_loss=1.16, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28254])) that is different to the input size (torch.Size([28254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 59/10000 [00:23<1:05:15,  2.54it/s, total_loss=0.212, l1_loss=0.199, dssim_loss=0.132, depth_loss=1.03, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21467])) that is different to the input size (torch.Size([21467, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 60/10000 [00:23<1:04:15,  2.58it/s, total_loss=0.231, l1_loss=0.218, dssim_loss=0.143, depth_loss=0.96, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27213])) that is different to the input size (torch.Size([27213, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 61/10000 [00:24<1:04:51,  2.55it/s, total_loss=0.18, l1_loss=0.171, dssim_loss=0.108, depth_loss=0.921, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28743])) that is different to the input size (torch.Size([28743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 63/10000 [00:24<1:05:40,  2.52it/s, total_loss=0.311, l1_loss=0.285, dssim_loss=0.208, depth_loss=0.741, psnr=9.47]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24171])) that is different to the input size (torch.Size([24171, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 64/10000 [00:25<1:05:46,  2.52it/s, total_loss=0.172, l1_loss=0.165, dssim_loss=0.099, depth_loss=0.898, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24163])) that is different to the input size (torch.Size([24163, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 65/10000 [00:25<1:05:33,  2.53it/s, total_loss=0.153, l1_loss=0.148, dssim_loss=0.087, depth_loss=0.906, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28740])) that is different to the input size (torch.Size([28740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 66/10000 [00:26<1:05:09,  2.54it/s, total_loss=0.227, l1_loss=0.21, dssim_loss=0.148, depth_loss=1.04, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20782])) that is different to the input size (torch.Size([20782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 68/10000 [00:26<1:04:55,  2.55it/s, total_loss=0.159, l1_loss=0.152, dssim_loss=0.093, depth_loss=0.899, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23927])) that is different to the input size (torch.Size([23927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 69/10000 [00:27<1:05:02,  2.54it/s, total_loss=0.192, l1_loss=0.176, dssim_loss=0.128, depth_loss=1.19, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27999])) that is different to the input size (torch.Size([27999, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 70/10000 [00:27<1:04:31,  2.56it/s, total_loss=0.272, l1_loss=0.249, dssim_loss=0.181, depth_loss=0.837, psnr=9.73]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28237])) that is different to the input size (torch.Size([28237, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 71/10000 [00:28<1:05:16,  2.54it/s, total_loss=0.304, l1_loss=0.273, dssim_loss=0.213, depth_loss=1.15, psnr=9.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25044])) that is different to the input size (torch.Size([25044, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 72/10000 [00:28<1:05:46,  2.52it/s, total_loss=0.364, l1_loss=0.333, dssim_loss=0.245, depth_loss=0.827, psnr=8.64]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15946])) that is different to the input size (torch.Size([15946, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 73/10000 [00:28<1:05:42,  2.52it/s, total_loss=0.184, l1_loss=0.167, dssim_loss=0.125, depth_loss=1.11, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18927])) that is different to the input size (torch.Size([18927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 74/10000 [00:29<1:04:57,  2.55it/s, total_loss=0.217, l1_loss=0.193, dssim_loss=0.157, depth_loss=1.27, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28725])) that is different to the input size (torch.Size([28725, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 75/10000 [00:29<1:04:46,  2.55it/s, total_loss=0.203, l1_loss=0.188, dssim_loss=0.132, depth_loss=1.06, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17252])) that is different to the input size (torch.Size([17252, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 76/10000 [00:29<1:04:31,  2.56it/s, total_loss=0.189, l1_loss=0.17, dssim_loss=0.134, depth_loss=1.19, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25582])) that is different to the input size (torch.Size([25582, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 80/10000 [00:31<1:03:36,  2.60it/s, total_loss=0.246, l1_loss=0.228, dssim_loss=0.161, depth_loss=0.813, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26859])) that is different to the input size (torch.Size([26859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 82/10000 [00:32<1:04:32,  2.56it/s, total_loss=0.173, l1_loss=0.154, dssim_loss=0.123, depth_loss=1.16, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23496])) that is different to the input size (torch.Size([23496, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 83/10000 [00:32<1:04:29,  2.56it/s, total_loss=0.141, l1_loss=0.138, dssim_loss=0.077, depth_loss=0.916, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21114])) that is different to the input size (torch.Size([21114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 84/10000 [00:33<1:03:57,  2.58it/s, total_loss=0.247, l1_loss=0.218, dssim_loss=0.181, depth_loss=1.4, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22538])) that is different to the input size (torch.Size([22538, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 86/10000 [00:33<1:04:07,  2.58it/s, total_loss=0.17, l1_loss=0.15, dssim_loss=0.126, depth_loss=1.19, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28272])) that is different to the input size (torch.Size([28272, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 88/10000 [00:34<1:04:41,  2.55it/s, total_loss=0.131, l1_loss=0.125, dssim_loss=0.076, depth_loss=0.912, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21116])) that is different to the input size (torch.Size([21116, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 91/10000 [00:35<1:03:16,  2.61it/s, total_loss=0.255, l1_loss=0.226, dssim_loss=0.185, depth_loss=1.46, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22251])) that is different to the input size (torch.Size([22251, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                 | 92/10000 [00:36<1:03:32,  2.60it/s, total_loss=0.136, l1_loss=0.131, dssim_loss=0.08, depth_loss=1, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21555])) that is different to the input size (torch.Size([21555, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 93/10000 [00:36<1:03:07,  2.62it/s, total_loss=0.219, l1_loss=0.204, dssim_loss=0.14, depth_loss=0.894, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23965])) that is different to the input size (torch.Size([23965, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 95/10000 [00:37<1:03:54,  2.58it/s, total_loss=0.24, l1_loss=0.221, dssim_loss=0.159, depth_loss=0.806, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22782])) that is different to the input size (torch.Size([22782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 96/10000 [00:37<1:04:21,  2.56it/s, total_loss=0.162, l1_loss=0.152, dssim_loss=0.102, depth_loss=1.1, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23107])) that is different to the input size (torch.Size([23107, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 99/10000 [00:38<1:04:00,  2.58it/s, total_loss=0.172, l1_loss=0.154, dssim_loss=0.121, depth_loss=1.03, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28679])) that is different to the input size (torch.Size([28679, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 100/10000 [00:39<1:03:54,  2.58it/s, total_loss=0.2, l1_loss=0.186, dssim_loss=0.128, depth_loss=1.02, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20785])) that is different to the input size (torch.Size([20785, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 102/10000 [00:40<1:03:31,  2.60it/s, total_loss=0.193, l1_loss=0.178, dssim_loss=0.126, depth_loss=1.02, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27836])) that is different to the input size (torch.Size([27836, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 104/10000 [00:40<1:04:00,  2.58it/s, total_loss=0.176, l1_loss=0.156, dssim_loss=0.127, depth_loss=1.03, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25986])) that is different to the input size (torch.Size([25986, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 105/10000 [00:41<1:04:34,  2.55it/s, total_loss=0.13, l1_loss=0.125, dssim_loss=0.075, depth_loss=0.907, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20855])) that is different to the input size (torch.Size([20855, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 106/10000 [00:41<1:03:49,  2.58it/s, total_loss=0.259, l1_loss=0.233, dssim_loss=0.181, depth_loss=1.54, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23740])) that is different to the input size (torch.Size([23740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 107/10000 [00:42<1:04:17,  2.56it/s, total_loss=0.146, l1_loss=0.136, dssim_loss=0.092, depth_loss=1.01, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22348])) that is different to the input size (torch.Size([22348, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 108/10000 [00:42<1:04:11,  2.57it/s, total_loss=0.125, l1_loss=0.12, dssim_loss=0.074, depth_loss=0.982, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27693])) that is different to the input size (torch.Size([27693, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 109/10000 [00:42<1:04:20,  2.56it/s, total_loss=0.166, l1_loss=0.147, dssim_loss=0.121, depth_loss=1.03, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27328])) that is different to the input size (torch.Size([27328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 111/10000 [00:43<1:03:07,  2.61it/s, total_loss=0.175, l1_loss=0.166, dssim_loss=0.106, depth_loss=1.16, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25283])) that is different to the input size (torch.Size([25283, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 112/10000 [00:43<1:04:04,  2.57it/s, total_loss=0.294, l1_loss=0.271, dssim_loss=0.191, depth_loss=0.931, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22114])) that is different to the input size (torch.Size([22114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 120/10000 [00:47<1:04:13,  2.56it/s, total_loss=0.283, l1_loss=0.254, dssim_loss=0.199, depth_loss=1.15, psnr=9.59]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27707])) that is different to the input size (torch.Size([27707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 121/10000 [00:47<1:04:27,  2.55it/s, total_loss=0.212, l1_loss=0.193, dssim_loss=0.145, depth_loss=0.728, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23082])) that is different to the input size (torch.Size([23082, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 123/10000 [00:48<1:04:38,  2.55it/s, total_loss=0.167, l1_loss=0.16, dssim_loss=0.098, depth_loss=1.05, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27915])) that is different to the input size (torch.Size([27915, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 125/10000 [00:49<1:05:03,  2.53it/s, total_loss=0.145, l1_loss=0.137, dssim_loss=0.089, depth_loss=0.925, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25587])) that is different to the input size (torch.Size([25587, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 127/10000 [00:49<1:04:41,  2.54it/s, total_loss=0.119, l1_loss=0.114, dssim_loss=0.069, depth_loss=1, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23902])) that is different to the input size (torch.Size([23902, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 130/10000 [00:50<1:02:51,  2.62it/s, total_loss=0.165, l1_loss=0.154, dssim_loss=0.103, depth_loss=0.96, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27481])) that is different to the input size (torch.Size([27481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 132/10000 [00:51<1:03:03,  2.61it/s, total_loss=0.219, l1_loss=0.189, dssim_loss=0.17, depth_loss=1.42, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28157])) that is different to the input size (torch.Size([28157, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 134/10000 [00:52<1:04:17,  2.56it/s, total_loss=0.195, l1_loss=0.177, dssim_loss=0.134, depth_loss=0.718, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22443])) that is different to the input size (torch.Size([22443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 136/10000 [00:53<1:04:27,  2.55it/s, total_loss=0.223, l1_loss=0.203, dssim_loss=0.152, depth_loss=0.816, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27010])) that is different to the input size (torch.Size([27010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 142/10000 [00:55<1:03:58,  2.57it/s, total_loss=0.175, l1_loss=0.163, dssim_loss=0.113, depth_loss=1.04, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26891])) that is different to the input size (torch.Size([26891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 144/10000 [00:56<1:03:29,  2.59it/s, total_loss=0.153, l1_loss=0.145, dssim_loss=0.094, depth_loss=1.19, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21173])) that is different to the input size (torch.Size([21173, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 146/10000 [00:57<1:03:01,  2.61it/s, total_loss=0.156, l1_loss=0.137, dssim_loss=0.117, depth_loss=1.19, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18481])) that is different to the input size (torch.Size([18481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 147/10000 [00:57<1:03:38,  2.58it/s, total_loss=0.209, l1_loss=0.19, dssim_loss=0.142, depth_loss=0.952, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21527])) that is different to the input size (torch.Size([21527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 149/10000 [00:58<1:02:50,  2.61it/s, total_loss=0.181, l1_loss=0.158, dssim_loss=0.138, depth_loss=1.26, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28328])) that is different to the input size (torch.Size([28328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 151/10000 [00:59<1:03:42,  2.58it/s, total_loss=0.186, l1_loss=0.164, dssim_loss=0.137, depth_loss=1.26, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26133])) that is different to the input size (torch.Size([26133, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 154/10000 [01:00<1:04:09,  2.56it/s, total_loss=0.113, l1_loss=0.107, dssim_loss=0.068, depth_loss=0.998, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26280])) that is different to the input size (torch.Size([26280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 155/10000 [01:00<1:04:32,  2.54it/s, total_loss=0.172, l1_loss=0.155, dssim_loss=0.12, depth_loss=0.721, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20609])) that is different to the input size (torch.Size([20609, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 156/10000 [01:01<1:04:14,  2.55it/s, total_loss=0.208, l1_loss=0.179, dssim_loss=0.161, depth_loss=1.35, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27982])) that is different to the input size (torch.Size([27982, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 158/10000 [01:01<1:04:25,  2.55it/s, total_loss=0.208, l1_loss=0.185, dssim_loss=0.151, depth_loss=1.07, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20966])) that is different to the input size (torch.Size([20966, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 162/10000 [01:03<1:03:43,  2.57it/s, total_loss=0.232, l1_loss=0.203, dssim_loss=0.173, depth_loss=1.5, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20945])) that is different to the input size (torch.Size([20945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 165/10000 [01:04<1:02:56,  2.60it/s, total_loss=0.226, l1_loss=0.197, dssim_loss=0.171, depth_loss=1.5, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27997])) that is different to the input size (torch.Size([27997, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 167/10000 [01:05<1:03:51,  2.57it/s, total_loss=0.134, l1_loss=0.13, dssim_loss=0.073, depth_loss=1.02, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25088])) that is different to the input size (torch.Size([25088, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 169/10000 [01:06<1:04:36,  2.54it/s, total_loss=0.171, l1_loss=0.157, dssim_loss=0.113, depth_loss=1.17, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25607])) that is different to the input size (torch.Size([25607, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 171/10000 [01:06<1:04:42,  2.53it/s, total_loss=0.147, l1_loss=0.137, dssim_loss=0.093, depth_loss=1.13, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25948])) that is different to the input size (torch.Size([25948, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 172/10000 [01:07<1:04:59,  2.52it/s, total_loss=0.212, l1_loss=0.189, dssim_loss=0.153, depth_loss=0.999, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21354])) that is different to the input size (torch.Size([21354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 173/10000 [01:07<1:03:56,  2.56it/s, total_loss=0.211, l1_loss=0.18, dssim_loss=0.168, depth_loss=1.4, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28063])) that is different to the input size (torch.Size([28063, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 176/10000 [01:08<1:04:18,  2.55it/s, total_loss=0.14, l1_loss=0.127, dssim_loss=0.097, depth_loss=1.12, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26601])) that is different to the input size (torch.Size([26601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 178/10000 [01:09<1:04:39,  2.53it/s, total_loss=0.148, l1_loss=0.134, dssim_loss=0.102, depth_loss=1.01, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22464])) that is different to the input size (torch.Size([22464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 180/10000 [01:10<1:04:16,  2.55it/s, total_loss=0.162, l1_loss=0.144, dssim_loss=0.116, depth_loss=1.02, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28439])) that is different to the input size (torch.Size([28439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 183/10000 [01:11<1:02:27,  2.62it/s, total_loss=0.147, l1_loss=0.139, dssim_loss=0.09, depth_loss=1.16, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28594])) that is different to the input size (torch.Size([28594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 185/10000 [01:12<1:03:43,  2.57it/s, total_loss=0.205, l1_loss=0.179, dssim_loss=0.153, depth_loss=1.08, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28072])) that is different to the input size (torch.Size([28072, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 187/10000 [01:13<1:04:24,  2.54it/s, total_loss=0.158, l1_loss=0.145, dssim_loss=0.106, depth_loss=1.01, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28425])) that is different to the input size (torch.Size([28425, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 189/10000 [01:13<1:03:42,  2.57it/s, total_loss=0.209, l1_loss=0.179, dssim_loss=0.164, depth_loss=1.4, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27596])) that is different to the input size (torch.Size([27596, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 190/10000 [01:14<1:04:07,  2.55it/s, total_loss=0.161, l1_loss=0.144, dssim_loss=0.113, depth_loss=0.713, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28081])) that is different to the input size (torch.Size([28081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 191/10000 [01:14<1:04:44,  2.53it/s, total_loss=0.147, l1_loss=0.138, dssim_loss=0.092, depth_loss=0.989, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21464])) that is different to the input size (torch.Size([21464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 193/10000 [01:15<1:03:54,  2.56it/s, total_loss=0.129, l1_loss=0.126, dssim_loss=0.07, depth_loss=0.994, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22809])) that is different to the input size (torch.Size([22809, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 194/10000 [01:15<1:03:34,  2.57it/s, total_loss=0.133, l1_loss=0.123, dssim_loss=0.087, depth_loss=1.15, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19411])) that is different to the input size (torch.Size([19411, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 198/10000 [01:17<1:03:46,  2.56it/s, total_loss=0.172, l1_loss=0.155, dssim_loss=0.122, depth_loss=1.01, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26939])) that is different to the input size (torch.Size([26939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 200/10000 [01:18<1:04:51,  2.52it/s, total_loss=0.205, l1_loss=0.178, dssim_loss=0.157, depth_loss=1.09, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22984])) that is different to the input size (torch.Size([22984, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 201/10000 [01:18<1:04:14,  2.54it/s, total_loss=0.201, l1_loss=0.176, dssim_loss=0.151, depth_loss=1.36, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15961])) that is different to the input size (torch.Size([15961, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 202/10000 [01:19<1:04:07,  2.55it/s, total_loss=0.153, l1_loss=0.135, dssim_loss=0.111, depth_loss=1.02, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25095])) that is different to the input size (torch.Size([25095, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 206/10000 [01:20<1:04:37,  2.53it/s, total_loss=0.207, l1_loss=0.189, dssim_loss=0.139, depth_loss=0.724, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21394])) that is different to the input size (torch.Size([21394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 208/10000 [01:21<1:04:28,  2.53it/s, total_loss=0.196, l1_loss=0.168, dssim_loss=0.154, depth_loss=1.09, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24807])) that is different to the input size (torch.Size([24807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 209/10000 [01:21<1:04:39,  2.52it/s, total_loss=0.118, l1_loss=0.114, dssim_loss=0.068, depth_loss=0.928, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27939])) that is different to the input size (torch.Size([27939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 210/10000 [01:22<1:04:54,  2.51it/s, total_loss=0.225, l1_loss=0.195, dssim_loss=0.172, depth_loss=1.12, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21399])) that is different to the input size (torch.Size([21399, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 218/10000 [01:25<1:03:02,  2.59it/s, total_loss=0.145, l1_loss=0.135, dssim_loss=0.093, depth_loss=0.968, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25410])) that is different to the input size (torch.Size([25410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 219/10000 [01:25<1:03:44,  2.56it/s, total_loss=0.109, l1_loss=0.104, dssim_loss=0.065, depth_loss=0.919, psnr=15.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23064])) that is different to the input size (torch.Size([23064, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 220/10000 [01:26<1:04:04,  2.54it/s, total_loss=0.117, l1_loss=0.11, dssim_loss=0.074, depth_loss=1.01, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21013])) that is different to the input size (torch.Size([21013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 223/10000 [01:27<1:03:16,  2.58it/s, total_loss=0.204, l1_loss=0.189, dssim_loss=0.133, depth_loss=0.898, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21349])) that is different to the input size (torch.Size([21349, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 224/10000 [01:27<1:02:57,  2.59it/s, total_loss=0.171, l1_loss=0.157, dssim_loss=0.114, depth_loss=0.834, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22248])) that is different to the input size (torch.Size([22248, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 225/10000 [01:28<1:03:07,  2.58it/s, total_loss=0.103, l1_loss=0.098, dssim_loss=0.061, depth_loss=0.961, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24977])) that is different to the input size (torch.Size([24977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                               | 226/10000 [01:28<1:03:37,  2.56it/s, total_loss=0.133, l1_loss=0.121, dssim_loss=0.091, depth_loss=1, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21100])) that is different to the input size (torch.Size([21100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 229/10000 [01:29<1:03:14,  2.58it/s, total_loss=0.163, l1_loss=0.151, dssim_loss=0.106, depth_loss=1.06, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22297])) that is different to the input size (torch.Size([22297, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                           | 230/10000 [01:30<1:03:17,  2.57it/s, total_loss=0.101, l1_loss=0.095, dssim_loss=0.061, depth_loss=0.945, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23841])) that is different to the input size (torch.Size([23841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 232/10000 [01:30<1:03:45,  2.55it/s, total_loss=0.131, l1_loss=0.122, dssim_loss=0.083, depth_loss=1.13, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25013])) that is different to the input size (torch.Size([25013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 236/10000 [01:32<1:03:58,  2.54it/s, total_loss=0.143, l1_loss=0.126, dssim_loss=0.105, depth_loss=1.02, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21993])) that is different to the input size (torch.Size([21993, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 239/10000 [01:33<1:04:03,  2.54it/s, total_loss=0.145, l1_loss=0.126, dssim_loss=0.11, depth_loss=1.02, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25262])) that is different to the input size (torch.Size([25262, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 248/10000 [01:37<1:03:48,  2.55it/s, total_loss=0.204, l1_loss=0.174, dssim_loss=0.161, depth_loss=1.52, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27324])) that is different to the input size (torch.Size([27324, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 249/10000 [01:37<1:04:15,  2.53it/s, total_loss=0.16, l1_loss=0.142, dssim_loss=0.115, depth_loss=0.712, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24384])) that is different to the input size (torch.Size([24384, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 251/10000 [01:38<1:04:38,  2.51it/s, total_loss=0.22, l1_loss=0.191, dssim_loss=0.169, depth_loss=1.11, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21530])) that is different to the input size (torch.Size([21530, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 255/10000 [01:39<1:02:45,  2.59it/s, total_loss=0.164, l1_loss=0.141, dssim_loss=0.127, depth_loss=1.24, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20860])) that is different to the input size (torch.Size([20860, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 256/10000 [01:40<1:02:43,  2.59it/s, total_loss=0.197, l1_loss=0.17, dssim_loss=0.154, depth_loss=1.54, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28432])) that is different to the input size (torch.Size([28432, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 258/10000 [01:41<1:03:31,  2.56it/s, total_loss=0.111, l1_loss=0.104, dssim_loss=0.07, depth_loss=1.04, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15368])) that is different to the input size (torch.Size([15368, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 261/10000 [01:42<1:03:45,  2.55it/s, total_loss=0.165, l1_loss=0.141, dssim_loss=0.131, depth_loss=1.25, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22842])) that is different to the input size (torch.Size([22842, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 269/10000 [01:45<1:03:59,  2.53it/s, total_loss=0.143, l1_loss=0.123, dssim_loss=0.112, depth_loss=1.02, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27483])) that is different to the input size (torch.Size([27483, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                              | 270/10000 [01:45<1:03:55,  2.54it/s, total_loss=0.204, l1_loss=0.179, dssim_loss=0.152, depth_loss=1.1, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23141])) that is different to the input size (torch.Size([23141, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 274/10000 [01:47<1:03:47,  2.54it/s, total_loss=0.146, l1_loss=0.136, dssim_loss=0.092, depth_loss=1.07, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28332])) that is different to the input size (torch.Size([28332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                          | 278/10000 [01:48<1:04:34,  2.51it/s, total_loss=0.136, l1_loss=0.128, dssim_loss=0.085, depth_loss=0.975, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25025])) that is different to the input size (torch.Size([25025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 287/10000 [01:52<1:04:05,  2.53it/s, total_loss=0.184, l1_loss=0.161, dssim_loss=0.139, depth_loss=0.994, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27747])) that is different to the input size (torch.Size([27747, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                             | 289/10000 [01:53<1:03:05,  2.57it/s, total_loss=0.141, l1_loss=0.134, dssim_loss=0.085, depth_loss=1.19, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22757])) that is different to the input size (torch.Size([22757, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 291/10000 [01:54<1:02:59,  2.57it/s, total_loss=0.162, l1_loss=0.151, dssim_loss=0.104, depth_loss=1.03, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25071])) that is different to the input size (torch.Size([25071, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 297/10000 [01:56<1:03:21,  2.55it/s, total_loss=0.158, l1_loss=0.145, dssim_loss=0.105, depth_loss=1.08, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21148])) that is different to the input size (torch.Size([21148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                            | 308/10000 [02:00<1:03:46,  2.53it/s, total_loss=0.139, l1_loss=0.13, dssim_loss=0.088, depth_loss=1.05, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24336])) that is different to the input size (torch.Size([24336, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 313/10000 [02:02<1:03:57,  2.52it/s, total_loss=0.101, l1_loss=0.096, dssim_loss=0.061, depth_loss=0.931, psnr=15.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20321])) that is different to the input size (torch.Size([20321, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                           | 317/10000 [02:04<1:03:51,  2.53it/s, total_loss=0.149, l1_loss=0.134, dssim_loss=0.105, depth_loss=0.72, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28092])) that is different to the input size (torch.Size([28092, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                            | 320/10000 [02:05<1:02:13,  2.59it/s, total_loss=0.127, l1_loss=0.119, dssim_loss=0.08, depth_loss=1.18, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25069])) that is different to the input size (torch.Size([25069, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                           | 334/10000 [02:10<1:03:59,  2.52it/s, total_loss=0.135, l1_loss=0.126, dssim_loss=0.085, depth_loss=1.01, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22522])) that is different to the input size (torch.Size([22522, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                          | 346/10000 [02:15<1:04:31,  2.49it/s, total_loss=0.173, l1_loss=0.151, dssim_loss=0.131, depth_loss=0.975, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28846])) that is different to the input size (torch.Size([28846, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                            | 349/10000 [02:16<1:04:30,  2.49it/s, total_loss=0.178, l1_loss=0.15, dssim_loss=0.144, depth_loss=1.08, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28476])) that is different to the input size (torch.Size([28476, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                           | 353/10000 [02:18<1:02:49,  2.56it/s, total_loss=0.129, l1_loss=0.122, dssim_loss=0.079, depth_loss=1.15, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26305])) that is different to the input size (torch.Size([26305, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                          | 354/10000 [02:18<1:03:29,  2.53it/s, total_loss=0.172, l1_loss=0.149, dssim_loss=0.131, depth_loss=0.994, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19405])) that is different to the input size (torch.Size([19405, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                           | 362/10000 [02:21<1:02:20,  2.58it/s, total_loss=0.186, l1_loss=0.158, dssim_loss=0.148, depth_loss=1.46, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24002])) that is different to the input size (torch.Size([24002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                           | 382/10000 [02:29<1:04:15,  2.49it/s, total_loss=0.159, l1_loss=0.132, dssim_loss=0.133, depth_loss=1.27, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20891])) that is different to the input size (torch.Size([20891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                           | 384/10000 [02:30<1:03:45,  2.51it/s, total_loss=0.153, l1_loss=0.132, dssim_loss=0.117, depth_loss=1.03, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23353])) that is different to the input size (torch.Size([23353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                          | 387/10000 [02:31<1:02:31,  2.56it/s, total_loss=0.165, l1_loss=0.153, dssim_loss=0.106, depth_loss=0.844, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28918])) that is different to the input size (torch.Size([28918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                           | 393/10000 [02:34<1:01:18,  2.61it/s, total_loss=0.124, l1_loss=0.116, dssim_loss=0.077, depth_loss=1.16, psnr=14.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26461])) that is different to the input size (torch.Size([26461, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                          | 399/10000 [02:36<1:04:21,  2.49it/s, total_loss=0.122, l1_loss=0.113, dssim_loss=0.078, depth_loss=0.989, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28280])) that is different to the input size (torch.Size([28280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                          | 411/10000 [02:41<1:02:33,  2.55it/s, total_loss=0.092, l1_loss=0.086, dssim_loss=0.056, depth_loss=0.991, psnr=16.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28597])) that is different to the input size (torch.Size([28597, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                            | 438/10000 [02:52<1:03:50,  2.50it/s, total_loss=0.164, l1_loss=0.14, dssim_loss=0.129, depth_loss=1.05, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15129])) that is different to the input size (torch.Size([15129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                           | 455/10000 [02:58<1:03:15,  2.51it/s, total_loss=0.177, l1_loss=0.152, dssim_loss=0.139, depth_loss=1.09, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23560])) that is different to the input size (torch.Size([23560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                            | 459/10000 [03:00<1:02:39,  2.54it/s, total_loss=0.118, l1_loss=0.11, dssim_loss=0.076, depth_loss=1.17, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22729])) that is different to the input size (torch.Size([22729, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                           | 467/10000 [03:03<1:02:02,  2.56it/s, total_loss=0.123, l1_loss=0.115, dssim_loss=0.076, depth_loss=1.18, psnr=14.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28494])) that is different to the input size (torch.Size([28494, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                          | 490/10000 [03:12<1:04:03,  2.47it/s, total_loss=0.164, l1_loss=0.145, dssim_loss=0.12, depth_loss=0.856, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27129])) that is different to the input size (torch.Size([27129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                          | 494/10000 [03:14<1:03:59,  2.48it/s, total_loss=0.169, l1_loss=0.148, dssim_loss=0.127, depth_loss=1.06, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27151])) that is different to the input size (torch.Size([27151, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                            | 510/10000 [03:43<1:32:47,  1.70it/s, total_loss=0.16, l1_loss=0.147, dssim_loss=0.105, depth_loss=0.733, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23953])) that is different to the input size (torch.Size([23953, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_500.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                          | 515/10000 [03:45<1:08:45,  2.30it/s, total_loss=0.186, l1_loss=0.159, dssim_loss=0.146, depth_loss=1.08, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23345])) that is different to the input size (torch.Size([23345, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                          | 527/10000 [03:49<1:01:45,  2.56it/s, total_loss=0.175, l1_loss=0.146, dssim_loss=0.147, depth_loss=1.48, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25074])) that is different to the input size (torch.Size([25074, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                          | 531/10000 [03:51<1:02:47,  2.51it/s, total_loss=0.095, l1_loss=0.091, dssim_loss=0.056, depth_loss=0.95, psnr=16.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20692])) that is different to the input size (torch.Size([20692, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                         | 533/10000 [03:52<1:02:26,  2.53it/s, total_loss=0.092, l1_loss=0.086, dssim_loss=0.058, depth_loss=0.983, psnr=16.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23593])) that is different to the input size (torch.Size([23593, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▋                                          | 596/10000 [04:17<1:02:48,  2.50it/s, total_loss=0.147, l1_loss=0.127, dssim_loss=0.114, depth_loss=1.19, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24393])) that is different to the input size (torch.Size([24393, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▏                                         | 717/10000 [05:05<1:01:55,  2.50it/s, total_loss=0.135, l1_loss=0.111, dssim_loss=0.116, depth_loss=1.22, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28631])) that is different to the input size (torch.Size([28631, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                         | 729/10000 [05:10<1:02:16,  2.48it/s, total_loss=0.155, l1_loss=0.131, dssim_loss=0.126, depth_loss=1.25, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20829])) that is different to the input size (torch.Size([20829, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                         | 745/10000 [05:16<1:01:49,  2.49it/s, total_loss=0.088, l1_loss=0.084, dssim_loss=0.053, depth_loss=0.96, psnr=16.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24260])) that is different to the input size (torch.Size([24260, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▍                                         | 760/10000 [05:22<1:02:36,  2.46it/s, total_loss=0.159, l1_loss=0.134, dssim_loss=0.127, depth_loss=1.07, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20930])) that is different to the input size (torch.Size([20930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▍                                         | 777/10000 [05:29<1:02:09,  2.47it/s, total_loss=0.108, l1_loss=0.097, dssim_loss=0.075, depth_loss=1.06, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24347])) that is different to the input size (torch.Size([24347, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▋                                          | 791/10000 [05:35<1:01:53,  2.48it/s, total_loss=0.142, l1_loss=0.122, dssim_loss=0.11, depth_loss=1.02, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16637])) that is different to the input size (torch.Size([16637, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  9%|████▎                                          | 926/10000 [06:29<1:00:49,  2.49it/s, total_loss=0.165, l1_loss=0.144, dssim_loss=0.127, depth_loss=1.08, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27871])) that is different to the input size (torch.Size([27871, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▋                                          | 989/10000 [06:55<1:00:12,  2.49it/s, total_loss=0.152, l1_loss=0.128, dssim_loss=0.124, depth_loss=1.06, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22332])) that is different to the input size (torch.Size([22332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 65%|█████████████████████████████▋                | 6460/10000 [48:57<26:49,  2.20it/s, total_loss=0.07, l1_loss=0.066, dssim_loss=0.042, depth_loss=0.939, psnr=18.5]
Video saved to outputs/video_1000.mp4
Video saved to outputs/video_1500.mp4
Video saved to outputs/video_2000.mp4
Video saved to outputs/video_2500.mp4
Video saved to outputs/video_3000.mp4
Video saved to outputs/video_3500.mp4
Video saved to outputs/video_4000.mp4
Video saved to outputs/video_4500.mp4
Video saved to outputs/video_5000.mp4
Video saved to outputs/video_5500.mp4
Video saved to outputs/video_6000.mp4
Traceback (most recent call last):
  File "/home/ryan910702/hw1-nain9172/run.py", line 53, in <module>
    trainer.train()
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 122, in train
    outputs = self.train_step()
              ^^^^^^^^^^^^^^^^^
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 75, in train_step
    total_loss.backward()
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
