Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:63: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with autocast():
/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24977])) that is different to the input size (torch.Size([24977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 1/10000 [00:00<2:20:51,  1.18it/s, total_loss=0.494, l1_loss=0.433, dssim_loss=0.369, depth_loss=0.681, psnr=6.49]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23499])) that is different to the input size (torch.Size([23499, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 2/10000 [00:01<2:07:20,  1.31it/s, total_loss=0.443, l1_loss=0.402, dssim_loss=0.304, depth_loss=0.758, psnr=7.08]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([19870])) that is different to the input size (torch.Size([19870, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 3/10000 [00:02<2:00:30,  1.38it/s, total_loss=0.449, l1_loss=0.405, dssim_loss=0.314, depth_loss=1.16, psnr=7.23]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28280])) that is different to the input size (torch.Size([28280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 4/10000 [00:03<2:08:07,  1.30it/s, total_loss=0.458, l1_loss=0.408, dssim_loss=0.329, depth_loss=0.864, psnr=7.08]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23107])) that is different to the input size (torch.Size([23107, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 5/10000 [00:03<2:01:45,  1.37it/s, total_loss=0.419, l1_loss=0.382, dssim_loss=0.284, depth_loss=1.17, psnr=7.48]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25607])) that is different to the input size (torch.Size([25607, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 6/10000 [00:04<1:58:55,  1.40it/s, total_loss=0.415, l1_loss=0.371, dssim_loss=0.295, depth_loss=0.809, psnr=7.72]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25025])) that is different to the input size (torch.Size([25025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 7/10000 [00:05<1:56:02,  1.44it/s, total_loss=0.332, l1_loss=0.304, dssim_loss=0.221, depth_loss=0.686, psnr=8.98]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([19405])) that is different to the input size (torch.Size([19405, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 8/10000 [00:05<1:54:26,  1.46it/s, total_loss=0.482, l1_loss=0.424, dssim_loss=0.357, depth_loss=0.986, psnr=6.83]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27483])) that is different to the input size (torch.Size([27483, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 9/10000 [00:06<1:55:21,  1.44it/s, total_loss=0.442, l1_loss=0.389, dssim_loss=0.327, depth_loss=0.901, psnr=7.29]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25948])) that is different to the input size (torch.Size([25948, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 10/10000 [00:07<1:55:06,  1.45it/s, total_loss=0.35, l1_loss=0.314, dssim_loss=0.248, depth_loss=0.843, psnr=8.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28725])) that is different to the input size (torch.Size([28725, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 11/10000 [00:08<2:05:23,  1.33it/s, total_loss=0.297, l1_loss=0.279, dssim_loss=0.183, depth_loss=0.992, psnr=9.68]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23172])) that is different to the input size (torch.Size([23172, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 12/10000 [00:08<2:02:20,  1.36it/s, total_loss=0.483, l1_loss=0.427, dssim_loss=0.352, depth_loss=0.619, psnr=6.53]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20966])) that is different to the input size (torch.Size([20966, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 13/10000 [00:09<1:59:42,  1.39it/s, total_loss=0.42, l1_loss=0.383, dssim_loss=0.284, depth_loss=1.26, psnr=7.74]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20930])) that is different to the input size (torch.Size([20930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 14/10000 [00:10<1:56:19,  1.43it/s, total_loss=0.351, l1_loss=0.331, dssim_loss=0.217, depth_loss=1.18, psnr=8.75]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28918])) that is different to the input size (torch.Size([28918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 15/10000 [00:10<2:04:47,  1.33it/s, total_loss=0.631, l1_loss=0.52, dssim_loss=0.536, depth_loss=0.857, psnr=4.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20782])) that is different to the input size (torch.Size([20782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 16/10000 [00:11<2:00:33,  1.38it/s, total_loss=0.569, l1_loss=0.486, dssim_loss=0.45, depth_loss=1.22, psnr=5.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22729])) that is different to the input size (torch.Size([22729, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 17/10000 [00:12<1:57:46,  1.41it/s, total_loss=0.369, l1_loss=0.342, dssim_loss=0.239, depth_loss=0.527, psnr=8.15]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21229])) that is different to the input size (torch.Size([21229, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 18/10000 [00:12<1:55:13,  1.44it/s, total_loss=0.489, l1_loss=0.426, dssim_loss=0.371, depth_loss=1.18, psnr=6.71]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25587])) that is different to the input size (torch.Size([25587, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 19/10000 [00:13<1:54:27,  1.45it/s, total_loss=0.437, l1_loss=0.391, dssim_loss=0.31, depth_loss=0.641, psnr=7.26]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21317])) that is different to the input size (torch.Size([21317, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 20/10000 [00:14<1:52:24,  1.48it/s, total_loss=0.361, l1_loss=0.339, dssim_loss=0.226, depth_loss=1.21, psnr=8.66]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25088])) that is different to the input size (torch.Size([25088, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 22/10000 [00:15<1:52:43,  1.48it/s, total_loss=0.34, l1_loss=0.314, dssim_loss=0.221, depth_loss=0.618, psnr=8.74]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27693])) that is different to the input size (torch.Size([27693, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 23/10000 [00:16<1:52:58,  1.47it/s, total_loss=0.445, l1_loss=0.394, dssim_loss=0.326, depth_loss=0.729, psnr=7.18]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23345])) that is different to the input size (torch.Size([23345, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 25/10000 [00:17<1:51:57,  1.48it/s, total_loss=0.474, l1_loss=0.415, dssim_loss=0.355, depth_loss=1.22, psnr=6.91]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23797])) that is different to the input size (torch.Size([23797, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                             | 26/10000 [00:18<1:51:52,  1.49it/s, total_loss=0.398, l1_loss=0.356, dssim_loss=0.284, depth_loss=0.895, psnr=7.71]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28081])) that is different to the input size (torch.Size([28081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 27/10000 [00:18<1:52:49,  1.47it/s, total_loss=0.253, l1_loss=0.243, dssim_loss=0.148, depth_loss=1.01, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25069])) that is different to the input size (torch.Size([25069, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 28/10000 [00:19<1:51:45,  1.49it/s, total_loss=0.242, l1_loss=0.224, dssim_loss=0.157, depth_loss=0.679, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24260])) that is different to the input size (torch.Size([24260, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 29/10000 [00:20<1:52:29,  1.48it/s, total_loss=0.223, l1_loss=0.213, dssim_loss=0.131, depth_loss=1.02, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25283])) that is different to the input size (torch.Size([25283, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 30/10000 [00:20<1:52:34,  1.48it/s, total_loss=0.278, l1_loss=0.254, dssim_loss=0.185, depth_loss=0.789, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21100])) that is different to the input size (torch.Size([21100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 31/10000 [00:21<1:51:25,  1.49it/s, total_loss=0.399, l1_loss=0.352, dssim_loss=0.294, depth_loss=1.17, psnr=7.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23064])) that is different to the input size (torch.Size([23064, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 34/10000 [00:23<1:50:41,  1.50it/s, total_loss=0.227, l1_loss=0.219, dssim_loss=0.131, depth_loss=1.17, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21116])) that is different to the input size (torch.Size([21116, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 35/10000 [00:24<1:49:56,  1.51it/s, total_loss=0.246, l1_loss=0.236, dssim_loss=0.144, depth_loss=1.2, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27213])) that is different to the input size (torch.Size([27213, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 36/10000 [00:24<1:51:21,  1.49it/s, total_loss=0.194, l1_loss=0.185, dssim_loss=0.114, depth_loss=0.95, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28518])) that is different to the input size (torch.Size([28518, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 37/10000 [00:25<1:52:19,  1.48it/s, total_loss=0.227, l1_loss=0.216, dssim_loss=0.136, depth_loss=1, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27999])) that is different to the input size (torch.Size([27999, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 38/10000 [00:26<1:53:46,  1.46it/s, total_loss=0.267, l1_loss=0.254, dssim_loss=0.158, depth_loss=0.809, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27564])) that is different to the input size (torch.Size([27564, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 39/10000 [00:27<1:53:57,  1.46it/s, total_loss=0.185, l1_loss=0.175, dssim_loss=0.115, depth_loss=0.984, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28679])) that is different to the input size (torch.Size([28679, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 41/10000 [00:28<1:54:39,  1.45it/s, total_loss=0.253, l1_loss=0.228, dssim_loss=0.177, depth_loss=0.799, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23082])) that is different to the input size (torch.Size([23082, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 42/10000 [00:29<1:55:15,  1.44it/s, total_loss=0.162, l1_loss=0.157, dssim_loss=0.092, depth_loss=0.7, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27836])) that is different to the input size (torch.Size([27836, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 44/10000 [00:30<1:55:48,  1.43it/s, total_loss=0.336, l1_loss=0.309, dssim_loss=0.221, depth_loss=0.849, psnr=7.97]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([16637])) that is different to the input size (torch.Size([16637, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                             | 45/10000 [00:31<1:54:37,  1.45it/s, total_loss=0.378, l1_loss=0.348, dssim_loss=0.25, depth_loss=0.903, psnr=8.22]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22464])) that is different to the input size (torch.Size([22464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 47/10000 [00:32<1:54:27,  1.45it/s, total_loss=0.187, l1_loss=0.176, dssim_loss=0.116, depth_loss=0.914, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([18927])) that is different to the input size (torch.Size([18927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                            | 48/10000 [00:33<1:53:48,  1.46it/s, total_loss=0.351, l1_loss=0.313, dssim_loss=0.251, depth_loss=0.954, psnr=8.59]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20609])) that is different to the input size (torch.Size([20609, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 49/10000 [00:33<1:52:50,  1.47it/s, total_loss=0.341, l1_loss=0.3, dssim_loss=0.254, depth_loss=1.02, psnr=8.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21236])) that is different to the input size (torch.Size([21236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 50/10000 [00:34<1:52:53,  1.47it/s, total_loss=0.309, l1_loss=0.276, dssim_loss=0.22, depth_loss=1.19, psnr=9.11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21394])) that is different to the input size (torch.Size([21394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                              | 51/10000 [00:35<1:51:19,  1.49it/s, total_loss=0.242, l1_loss=0.23, dssim_loss=0.145, depth_loss=1.21, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21467])) that is different to the input size (torch.Size([21467, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                             | 53/10000 [00:36<1:50:04,  1.51it/s, total_loss=0.238, l1_loss=0.222, dssim_loss=0.151, depth_loss=0.67, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28930])) that is different to the input size (torch.Size([28930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 54/10000 [00:37<2:02:15,  1.36it/s, total_loss=0.292, l1_loss=0.265, dssim_loss=0.2, depth_loss=0.842, psnr=9.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21428])) that is different to the input size (torch.Size([21428, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 55/10000 [00:38<1:58:42,  1.40it/s, total_loss=0.322, l1_loss=0.284, dssim_loss=0.237, depth_loss=1.16, psnr=8.65]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20996])) that is different to the input size (torch.Size([20996, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 57/10000 [00:39<1:53:47,  1.46it/s, total_loss=0.216, l1_loss=0.2, dssim_loss=0.141, depth_loss=0.694, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21399])) that is different to the input size (torch.Size([21399, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 58/10000 [00:40<1:52:42,  1.47it/s, total_loss=0.309, l1_loss=0.273, dssim_loss=0.225, depth_loss=1.18, psnr=8.88]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28846])) that is different to the input size (torch.Size([28846, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 60/10000 [00:41<1:54:51,  1.44it/s, total_loss=0.244, l1_loss=0.219, dssim_loss=0.172, depth_loss=0.849, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21685])) that is different to the input size (torch.Size([21685, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 61/10000 [00:42<1:54:20,  1.45it/s, total_loss=0.278, l1_loss=0.248, dssim_loss=0.199, depth_loss=1.16, psnr=9.82]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21530])) that is different to the input size (torch.Size([21530, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 62/10000 [00:42<1:52:21,  1.47it/s, total_loss=0.227, l1_loss=0.213, dssim_loss=0.142, depth_loss=1.24, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22438])) that is different to the input size (torch.Size([22438, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 63/10000 [00:43<1:52:52,  1.47it/s, total_loss=0.174, l1_loss=0.169, dssim_loss=0.098, depth_loss=0.531, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26601])) that is different to the input size (torch.Size([26601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 64/10000 [00:44<1:54:17,  1.45it/s, total_loss=0.244, l1_loss=0.228, dssim_loss=0.155, depth_loss=0.653, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26669])) that is different to the input size (torch.Size([26669, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 65/10000 [00:45<1:54:50,  1.44it/s, total_loss=0.267, l1_loss=0.24, dssim_loss=0.188, depth_loss=0.849, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20829])) that is different to the input size (torch.Size([20829, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 66/10000 [00:45<1:53:05,  1.46it/s, total_loss=0.284, l1_loss=0.252, dssim_loss=0.206, depth_loss=1.17, psnr=9.42]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22757])) that is different to the input size (torch.Size([22757, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 67/10000 [00:46<1:52:47,  1.47it/s, total_loss=0.262, l1_loss=0.235, dssim_loss=0.186, depth_loss=1.08, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21148])) that is different to the input size (torch.Size([21148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 68/10000 [00:47<1:51:39,  1.48it/s, total_loss=0.168, l1_loss=0.158, dssim_loss=0.104, depth_loss=1.18, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25931])) that is different to the input size (torch.Size([25931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 69/10000 [00:47<1:52:25,  1.47it/s, total_loss=0.215, l1_loss=0.199, dssim_loss=0.14, depth_loss=0.652, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22809])) that is different to the input size (torch.Size([22809, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                 | 72/10000 [00:49<1:49:59,  1.50it/s, total_loss=0.175, l1_loss=0.164, dssim_loss=0.11, depth_loss=1.2, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26280])) that is different to the input size (torch.Size([26280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 73/10000 [00:50<1:51:33,  1.48it/s, total_loss=0.192, l1_loss=0.175, dssim_loss=0.13, depth_loss=0.649, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22124])) that is different to the input size (torch.Size([22124, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                             | 74/10000 [00:51<1:51:57,  1.48it/s, total_loss=0.244, l1_loss=0.217, dssim_loss=0.177, depth_loss=1.14, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27010])) that is different to the input size (torch.Size([27010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 75/10000 [00:51<1:51:58,  1.48it/s, total_loss=0.228, l1_loss=0.211, dssim_loss=0.147, depth_loss=0.696, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25410])) that is different to the input size (torch.Size([25410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 76/10000 [00:52<1:53:10,  1.46it/s, total_loss=0.179, l1_loss=0.176, dssim_loss=0.096, depth_loss=0.811, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25582])) that is different to the input size (torch.Size([25582, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 78/10000 [00:53<1:54:17,  1.45it/s, total_loss=0.28, l1_loss=0.25, dssim_loss=0.198, depth_loss=0.849, psnr=9.77]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22348])) that is different to the input size (torch.Size([22348, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 79/10000 [00:54<1:54:27,  1.44it/s, total_loss=0.149, l1_loss=0.143, dssim_loss=0.086, depth_loss=0.554, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27939])) that is different to the input size (torch.Size([27939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 82/10000 [00:56<1:54:25,  1.44it/s, total_loss=0.272, l1_loss=0.237, dssim_loss=0.205, depth_loss=0.969, psnr=9.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23841])) that is different to the input size (torch.Size([23841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                            | 83/10000 [00:57<1:55:16,  1.43it/s, total_loss=0.137, l1_loss=0.131, dssim_loss=0.082, depth_loss=0.814, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([18481])) that is different to the input size (torch.Size([18481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 85/10000 [00:58<1:54:14,  1.45it/s, total_loss=0.171, l1_loss=0.155, dssim_loss=0.117, depth_loss=0.652, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22522])) that is different to the input size (torch.Size([22522, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 87/10000 [01:00<1:54:14,  1.45it/s, total_loss=0.136, l1_loss=0.133, dssim_loss=0.075, depth_loss=0.584, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20945])) that is different to the input size (torch.Size([20945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 88/10000 [01:00<1:52:27,  1.47it/s, total_loss=0.256, l1_loss=0.226, dssim_loss=0.188, depth_loss=1.16, psnr=9.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24393])) that is different to the input size (torch.Size([24393, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 89/10000 [01:01<1:52:15,  1.47it/s, total_loss=0.16, l1_loss=0.149, dssim_loss=0.101, depth_loss=0.604, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21318])) that is different to the input size (torch.Size([21318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 90/10000 [01:02<1:51:28,  1.48it/s, total_loss=0.258, l1_loss=0.226, dssim_loss=0.193, depth_loss=1.15, psnr=9.73]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21349])) that is different to the input size (torch.Size([21349, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 91/10000 [01:02<1:51:10,  1.49it/s, total_loss=0.22, l1_loss=0.205, dssim_loss=0.14, depth_loss=1.27, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21024])) that is different to the input size (torch.Size([21024, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 92/10000 [01:03<1:50:12,  1.50it/s, total_loss=0.164, l1_loss=0.155, dssim_loss=0.1, depth_loss=1.18, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28439])) that is different to the input size (torch.Size([28439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 94/10000 [01:04<1:51:02,  1.49it/s, total_loss=0.191, l1_loss=0.178, dssim_loss=0.121, depth_loss=1.25, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28025])) that is different to the input size (torch.Size([28025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 95/10000 [01:05<1:52:33,  1.47it/s, total_loss=0.241, l1_loss=0.21, dssim_loss=0.181, depth_loss=0.923, psnr=9.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([15368])) that is different to the input size (torch.Size([15368, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 97/10000 [01:06<1:51:16,  1.48it/s, total_loss=0.243, l1_loss=0.215, dssim_loss=0.179, depth_loss=1.16, psnr=9.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25044])) that is different to the input size (torch.Size([25044, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 98/10000 [01:07<1:51:10,  1.48it/s, total_loss=0.231, l1_loss=0.212, dssim_loss=0.153, depth_loss=0.722, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([15373])) that is different to the input size (torch.Size([15373, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 99/10000 [01:08<1:51:22,  1.48it/s, total_loss=0.256, l1_loss=0.235, dssim_loss=0.169, depth_loss=0.861, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28092])) that is different to the input size (torch.Size([28092, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 100/10000 [01:08<1:53:31,  1.45it/s, total_loss=0.168, l1_loss=0.153, dssim_loss=0.113, depth_loss=0.838, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27747])) that is different to the input size (torch.Size([27747, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 101/10000 [01:09<1:54:42,  1.44it/s, total_loss=0.24, l1_loss=0.21, dssim_loss=0.181, depth_loss=0.861, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24384])) that is different to the input size (torch.Size([24384, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 102/10000 [01:10<1:55:18,  1.43it/s, total_loss=0.134, l1_loss=0.127, dssim_loss=0.083, depth_loss=0.954, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23593])) that is different to the input size (torch.Size([23593, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 103/10000 [01:10<1:54:00,  1.45it/s, total_loss=0.236, l1_loss=0.215, dssim_loss=0.161, depth_loss=0.951, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22010])) that is different to the input size (torch.Size([22010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 104/10000 [01:11<1:52:44,  1.46it/s, total_loss=0.161, l1_loss=0.153, dssim_loss=0.097, depth_loss=1.17, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25262])) that is different to the input size (torch.Size([25262, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 105/10000 [01:12<1:52:43,  1.46it/s, total_loss=0.167, l1_loss=0.151, dssim_loss=0.115, depth_loss=0.648, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28157])) that is different to the input size (torch.Size([28157, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 106/10000 [01:13<1:54:20,  1.44it/s, total_loss=0.235, l1_loss=0.207, dssim_loss=0.173, depth_loss=0.92, psnr=10.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26461])) that is different to the input size (torch.Size([26461, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 107/10000 [01:13<1:54:37,  1.44it/s, total_loss=0.121, l1_loss=0.115, dssim_loss=0.073, depth_loss=0.893, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23353])) that is different to the input size (torch.Size([23353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                            | 108/10000 [01:14<1:53:32,  1.45it/s, total_loss=0.159, l1_loss=0.149, dssim_loss=0.099, depth_loss=1.12, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26859])) that is different to the input size (torch.Size([26859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 109/10000 [01:15<1:53:49,  1.45it/s, total_loss=0.123, l1_loss=0.116, dssim_loss=0.075, depth_loss=0.928, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28254])) that is different to the input size (torch.Size([28254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 110/10000 [01:15<1:54:13,  1.44it/s, total_loss=0.161, l1_loss=0.151, dssim_loss=0.1, depth_loss=1.01, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25095])) that is different to the input size (torch.Size([25095, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 111/10000 [01:16<1:53:35,  1.45it/s, total_loss=0.217, l1_loss=0.195, dssim_loss=0.152, depth_loss=0.75, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27979])) that is different to the input size (torch.Size([27979, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                           | 113/10000 [01:17<1:53:17,  1.45it/s, total_loss=0.193, l1_loss=0.173, dssim_loss=0.136, depth_loss=0.721, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28740])) that is different to the input size (torch.Size([28740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 117/10000 [01:20<1:53:58,  1.45it/s, total_loss=0.207, l1_loss=0.189, dssim_loss=0.141, depth_loss=1.16, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23485])) that is different to the input size (torch.Size([23485, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 121/10000 [01:23<1:51:26,  1.48it/s, total_loss=0.184, l1_loss=0.164, dssim_loss=0.131, depth_loss=0.661, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25074])) that is different to the input size (torch.Size([25074, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 122/10000 [01:24<1:51:10,  1.48it/s, total_loss=0.175, l1_loss=0.155, dssim_loss=0.129, depth_loss=0.696, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([18930])) that is different to the input size (torch.Size([18930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 125/10000 [01:26<1:54:08,  1.44it/s, total_loss=0.154, l1_loss=0.141, dssim_loss=0.104, depth_loss=0.843, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21960])) that is different to the input size (torch.Size([21960, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 130/10000 [01:29<1:52:02,  1.47it/s, total_loss=0.166, l1_loss=0.153, dssim_loss=0.107, depth_loss=1.21, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24807])) that is different to the input size (torch.Size([24807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                           | 131/10000 [01:30<1:52:48,  1.46it/s, total_loss=0.109, l1_loss=0.105, dssim_loss=0.063, depth_loss=0.758, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23496])) that is different to the input size (torch.Size([23496, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 132/10000 [01:30<1:53:12,  1.45it/s, total_loss=0.103, l1_loss=0.098, dssim_loss=0.061, depth_loss=0.67, psnr=15.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([15129])) that is different to the input size (torch.Size([15129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                            | 133/10000 [01:31<1:52:57,  1.46it/s, total_loss=0.211, l1_loss=0.194, dssim_loss=0.14, depth_loss=0.733, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28026])) that is different to the input size (torch.Size([28026, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 136/10000 [01:33<1:53:00,  1.45it/s, total_loss=0.104, l1_loss=0.1, dssim_loss=0.06, depth_loss=0.592, psnr=15.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21013])) that is different to the input size (torch.Size([21013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 140/10000 [01:36<1:51:48,  1.47it/s, total_loss=0.14, l1_loss=0.131, dssim_loss=0.089, depth_loss=1.18, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23560])) that is different to the input size (torch.Size([23560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                               | 141/10000 [01:37<1:51:37,  1.47it/s, total_loss=0.149, l1_loss=0.14, dssim_loss=0.092, depth_loss=1.11, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20891])) that is different to the input size (torch.Size([20891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 142/10000 [01:37<1:51:15,  1.48it/s, total_loss=0.253, l1_loss=0.219, dssim_loss=0.196, depth_loss=1.03, psnr=9.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21299])) that is different to the input size (torch.Size([21299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 143/10000 [01:38<1:50:54,  1.48it/s, total_loss=0.245, l1_loss=0.212, dssim_loss=0.19, depth_loss=1.08, psnr=9.99]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27324])) that is different to the input size (torch.Size([27324, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                           | 145/10000 [01:39<1:52:55,  1.45it/s, total_loss=0.157, l1_loss=0.143, dssim_loss=0.107, depth_loss=0.678, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20855])) that is different to the input size (torch.Size([20855, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                            | 146/10000 [01:40<1:51:28,  1.47it/s, total_loss=0.218, l1_loss=0.189, dssim_loss=0.167, depth_loss=1.15, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28272])) that is different to the input size (torch.Size([28272, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 151/10000 [01:43<1:54:14,  1.44it/s, total_loss=0.182, l1_loss=0.155, dssim_loss=0.143, depth_loss=0.843, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26305])) that is different to the input size (torch.Size([26305, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 152/10000 [01:44<1:54:28,  1.43it/s, total_loss=0.215, l1_loss=0.189, dssim_loss=0.158, depth_loss=0.82, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22251])) that is different to the input size (torch.Size([22251, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 153/10000 [01:45<1:54:33,  1.43it/s, total_loss=0.112, l1_loss=0.106, dssim_loss=0.067, depth_loss=0.543, psnr=15]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26939])) that is different to the input size (torch.Size([26939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 154/10000 [01:46<1:55:00,  1.43it/s, total_loss=0.213, l1_loss=0.184, dssim_loss=0.163, depth_loss=0.838, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22114])) that is different to the input size (torch.Size([22114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 158/10000 [01:48<1:53:44,  1.44it/s, total_loss=0.098, l1_loss=0.092, dssim_loss=0.06, depth_loss=0.763, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28332])) that is different to the input size (torch.Size([28332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 159/10000 [01:49<1:55:08,  1.42it/s, total_loss=0.202, l1_loss=0.175, dssim_loss=0.156, depth_loss=0.848, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20692])) that is different to the input size (torch.Size([20692, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 160/10000 [01:50<1:55:04,  1.43it/s, total_loss=0.191, l1_loss=0.174, dssim_loss=0.13, depth_loss=1.24, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([15961])) that is different to the input size (torch.Size([15961, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 162/10000 [01:51<1:54:12,  1.44it/s, total_loss=0.113, l1_loss=0.107, dssim_loss=0.069, depth_loss=0.933, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27129])) that is different to the input size (torch.Size([27129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 164/10000 [01:53<1:55:33,  1.42it/s, total_loss=0.119, l1_loss=0.112, dssim_loss=0.073, depth_loss=0.959, psnr=14.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21114])) that is different to the input size (torch.Size([21114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                            | 166/10000 [01:54<1:53:40,  1.44it/s, total_loss=0.185, l1_loss=0.167, dssim_loss=0.13, depth_loss=0.912, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27615])) that is different to the input size (torch.Size([27615, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                               | 167/10000 [01:55<1:54:20,  1.43it/s, total_loss=0.22, l1_loss=0.19, dssim_loss=0.168, depth_loss=0.834, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23902])) that is different to the input size (torch.Size([23902, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                           | 168/10000 [01:55<1:53:22,  1.45it/s, total_loss=0.191, l1_loss=0.173, dssim_loss=0.132, depth_loss=0.855, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27481])) that is different to the input size (torch.Size([27481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 169/10000 [01:56<1:53:51,  1.44it/s, total_loss=0.16, l1_loss=0.142, dssim_loss=0.115, depth_loss=0.691, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22332])) that is different to the input size (torch.Size([22332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 171/10000 [01:57<1:52:31,  1.46it/s, total_loss=0.225, l1_loss=0.192, dssim_loss=0.179, depth_loss=1.08, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25013])) that is different to the input size (torch.Size([25013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 178/10000 [02:02<1:52:52,  1.45it/s, total_loss=0.102, l1_loss=0.099, dssim_loss=0.058, depth_loss=0.598, psnr=16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27915])) that is different to the input size (torch.Size([27915, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 179/10000 [02:03<1:53:27,  1.44it/s, total_loss=0.163, l1_loss=0.146, dssim_loss=0.114, depth_loss=0.773, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26133])) that is different to the input size (torch.Size([26133, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 182/10000 [02:05<1:51:51,  1.46it/s, total_loss=0.164, l1_loss=0.145, dssim_loss=0.12, depth_loss=0.684, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28743])) that is different to the input size (torch.Size([28743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                            | 183/10000 [02:06<1:53:14,  1.44it/s, total_loss=0.189, l1_loss=0.161, dssim_loss=0.15, depth_loss=0.844, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24163])) that is different to the input size (torch.Size([24163, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 187/10000 [02:08<1:54:18,  1.43it/s, total_loss=0.196, l1_loss=0.172, dssim_loss=0.148, depth_loss=0.835, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23927])) that is different to the input size (torch.Size([23927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 189/10000 [02:10<1:52:56,  1.45it/s, total_loss=0.191, l1_loss=0.177, dssim_loss=0.124, depth_loss=0.765, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21215])) that is different to the input size (torch.Size([21215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                           | 192/10000 [02:12<1:53:27,  1.44it/s, total_loss=0.171, l1_loss=0.148, dssim_loss=0.133, depth_loss=0.838, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20860])) that is different to the input size (torch.Size([20860, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 197/10000 [02:15<1:52:20,  1.45it/s, total_loss=0.213, l1_loss=0.18, dssim_loss=0.172, depth_loss=1.02, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24171])) that is different to the input size (torch.Size([24171, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 199/10000 [02:17<1:53:06,  1.44it/s, total_loss=0.168, l1_loss=0.153, dssim_loss=0.114, depth_loss=0.77, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22842])) that is different to the input size (torch.Size([22842, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 200/10000 [02:17<1:53:18,  1.44it/s, total_loss=0.094, l1_loss=0.089, dssim_loss=0.056, depth_loss=0.629, psnr=16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23953])) that is different to the input size (torch.Size([23953, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 202/10000 [02:19<1:53:19,  1.44it/s, total_loss=0.18, l1_loss=0.156, dssim_loss=0.137, depth_loss=0.816, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22984])) that is different to the input size (torch.Size([22984, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 205/10000 [02:21<1:52:57,  1.45it/s, total_loss=0.198, l1_loss=0.174, dssim_loss=0.147, depth_loss=1.13, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26610])) that is different to the input size (torch.Size([26610, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 209/10000 [02:24<1:52:57,  1.44it/s, total_loss=0.171, l1_loss=0.156, dssim_loss=0.117, depth_loss=0.663, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20785])) that is different to the input size (torch.Size([20785, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 210/10000 [02:24<1:51:39,  1.46it/s, total_loss=0.194, l1_loss=0.166, dssim_loss=0.152, depth_loss=1.14, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24198])) that is different to the input size (torch.Size([24198, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                            | 211/10000 [02:25<1:52:01,  1.46it/s, total_loss=0.136, l1_loss=0.128, dssim_loss=0.082, depth_loss=1.07, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24347])) that is different to the input size (torch.Size([24347, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 214/10000 [02:27<1:52:58,  1.44it/s, total_loss=0.105, l1_loss=0.1, dssim_loss=0.062, depth_loss=0.556, psnr=15.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25986])) that is different to the input size (torch.Size([25986, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 216/10000 [02:28<1:51:49,  1.46it/s, total_loss=0.139, l1_loss=0.13, dssim_loss=0.087, depth_loss=1.17, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27596])) that is different to the input size (torch.Size([27596, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 217/10000 [02:29<1:52:27,  1.45it/s, total_loss=0.158, l1_loss=0.141, dssim_loss=0.113, depth_loss=0.716, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20766])) that is different to the input size (torch.Size([20766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 222/10000 [02:33<1:53:02,  1.44it/s, total_loss=0.142, l1_loss=0.129, dssim_loss=0.099, depth_loss=0.869, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21527])) that is different to the input size (torch.Size([21527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                           | 227/10000 [02:36<1:52:45,  1.44it/s, total_loss=0.121, l1_loss=0.119, dssim_loss=0.064, depth_loss=0.721, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23740])) that is different to the input size (torch.Size([23740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 229/10000 [02:37<1:50:29,  1.47it/s, total_loss=0.153, l1_loss=0.14, dssim_loss=0.103, depth_loss=1.22, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28841])) that is different to the input size (torch.Size([28841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 231/10000 [02:39<1:53:19,  1.44it/s, total_loss=0.159, l1_loss=0.136, dssim_loss=0.127, depth_loss=0.84, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([23141])) that is different to the input size (torch.Size([23141, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 236/10000 [02:42<1:51:48,  1.46it/s, total_loss=0.225, l1_loss=0.198, dssim_loss=0.166, depth_loss=0.952, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([18464])) that is different to the input size (torch.Size([18464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                            | 240/10000 [02:45<1:54:19,  1.42it/s, total_loss=0.137, l1_loss=0.127, dssim_loss=0.088, depth_loss=1.01, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([17938])) that is different to the input size (torch.Size([17938, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 260/10000 [02:59<1:51:02,  1.46it/s, total_loss=0.208, l1_loss=0.178, dssim_loss=0.163, depth_loss=1.01, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([26891])) that is different to the input size (torch.Size([26891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                             | 263/10000 [03:01<1:52:13,  1.45it/s, total_loss=0.16, l1_loss=0.142, dssim_loss=0.118, depth_loss=1.1, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([17288])) that is different to the input size (torch.Size([17288, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 266/10000 [03:03<1:50:46,  1.46it/s, total_loss=0.152, l1_loss=0.144, dssim_loss=0.09, depth_loss=1.14, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21993])) that is different to the input size (torch.Size([21993, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 268/10000 [03:04<1:52:12,  1.45it/s, total_loss=0.11, l1_loss=0.107, dssim_loss=0.062, depth_loss=0.776, psnr=15.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21173])) that is different to the input size (torch.Size([21173, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 269/10000 [03:05<1:50:36,  1.47it/s, total_loss=0.139, l1_loss=0.129, dssim_loss=0.091, depth_loss=1.2, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([24002])) that is different to the input size (torch.Size([24002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 274/10000 [03:08<1:51:10,  1.46it/s, total_loss=0.132, l1_loss=0.123, dssim_loss=0.083, depth_loss=1.11, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28704])) that is different to the input size (torch.Size([28704, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                           | 275/10000 [03:09<1:52:15,  1.44it/s, total_loss=0.168, l1_loss=0.148, dssim_loss=0.126, depth_loss=0.82, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28494])) that is different to the input size (torch.Size([28494, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 285/10000 [03:16<1:50:58,  1.46it/s, total_loss=0.138, l1_loss=0.125, dssim_loss=0.096, depth_loss=1.23, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22782])) that is different to the input size (torch.Size([22782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 292/10000 [03:21<1:51:20,  1.45it/s, total_loss=0.199, l1_loss=0.177, dssim_loss=0.143, depth_loss=1.15, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27151])) that is different to the input size (torch.Size([27151, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 293/10000 [03:22<1:52:30,  1.44it/s, total_loss=0.204, l1_loss=0.177, dssim_loss=0.156, depth_loss=0.842, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22297])) that is different to the input size (torch.Size([22297, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 294/10000 [03:22<1:53:08,  1.43it/s, total_loss=0.095, l1_loss=0.091, dssim_loss=0.056, depth_loss=0.641, psnr=16.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([25071])) that is different to the input size (torch.Size([25071, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                            | 300/10000 [03:26<1:53:30,  1.42it/s, total_loss=0.2, l1_loss=0.173, dssim_loss=0.154, depth_loss=0.855, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27997])) that is different to the input size (torch.Size([27997, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                            | 301/10000 [03:27<1:53:42,  1.42it/s, total_loss=0.211, l1_loss=0.183, dssim_loss=0.161, depth_loss=0.9, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27328])) that is different to the input size (torch.Size([27328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                          | 302/10000 [03:28<1:54:06,  1.42it/s, total_loss=0.205, l1_loss=0.178, dssim_loss=0.155, depth_loss=0.847, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([19859])) that is different to the input size (torch.Size([19859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                           | 305/10000 [03:30<1:52:42,  1.43it/s, total_loss=0.213, l1_loss=0.186, dssim_loss=0.16, depth_loss=0.862, psnr=11.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28063])) that is different to the input size (torch.Size([28063, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 314/10000 [03:36<1:51:17,  1.45it/s, total_loss=0.128, l1_loss=0.119, dssim_loss=0.082, depth_loss=0.647, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([20321])) that is different to the input size (torch.Size([20321, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 316/10000 [03:38<1:51:07,  1.45it/s, total_loss=0.161, l1_loss=0.143, dssim_loss=0.117, depth_loss=0.871, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21354])) that is different to the input size (torch.Size([21354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                           | 317/10000 [03:38<1:50:31,  1.46it/s, total_loss=0.201, l1_loss=0.171, dssim_loss=0.162, depth_loss=1.07, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27841])) that is different to the input size (torch.Size([27841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 323/10000 [03:42<1:52:41,  1.43it/s, total_loss=0.196, l1_loss=0.173, dssim_loss=0.145, depth_loss=0.848, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([17252])) that is different to the input size (torch.Size([17252, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 329/10000 [03:47<1:52:30,  1.43it/s, total_loss=0.148, l1_loss=0.137, dssim_loss=0.096, depth_loss=0.997, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28237])) that is different to the input size (torch.Size([28237, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 330/10000 [03:47<1:53:34,  1.42it/s, total_loss=0.179, l1_loss=0.153, dssim_loss=0.143, depth_loss=0.848, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28425])) that is different to the input size (torch.Size([28425, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                           | 337/10000 [03:52<1:51:25,  1.45it/s, total_loss=0.133, l1_loss=0.12, dssim_loss=0.094, depth_loss=0.768, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28072])) that is different to the input size (torch.Size([28072, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                          | 338/10000 [03:53<1:52:22,  1.43it/s, total_loss=0.188, l1_loss=0.161, dssim_loss=0.146, depth_loss=0.869, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([21464])) that is different to the input size (torch.Size([21464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                            | 351/10000 [04:02<1:50:16,  1.46it/s, total_loss=0.181, l1_loss=0.154, dssim_loss=0.145, depth_loss=0.957, psnr=12]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27353])) that is different to the input size (torch.Size([27353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                               | 363/10000 [04:10<1:52:24,  1.43it/s, total_loss=0.116, l1_loss=0.11, dssim_loss=0.069, depth_loss=1, psnr=15.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([28569])) that is different to the input size (torch.Size([28569, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                          | 380/10000 [04:22<1:52:00,  1.43it/s, total_loss=0.199, l1_loss=0.173, dssim_loss=0.151, depth_loss=0.864, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22248])) that is different to the input size (torch.Size([22248, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                           | 408/10000 [04:41<1:53:23,  1.41it/s, total_loss=0.119, l1_loss=0.116, dssim_loss=0.066, depth_loss=0.83, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([22538])) that is different to the input size (torch.Size([22538, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                          | 413/10000 [04:45<1:53:45,  1.40it/s, total_loss=0.146, l1_loss=0.131, dssim_loss=0.103, depth_loss=0.733, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:67: UserWarning: Using a target size (torch.Size([27707])) that is different to the input size (torch.Size([27707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                          | 413/10000 [04:46<1:50:40,  1.44it/s, total_loss=0.146, l1_loss=0.131, dssim_loss=0.103, depth_loss=0.733, psnr=14.2]
Traceback (most recent call last):
  File "/home/ryan910702/hw1-nain9172/run.py", line 53, in <module>
    trainer.train()
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 119, in train
    outputs = self.train_step()
              ^^^^^^^^^^^^^^^^^
  File "/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py", line 70, in train_step
    scaler.scale(total_loss).backward()
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/ryan910702/new2/envs/ev_hw1/lib/python3.11/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
