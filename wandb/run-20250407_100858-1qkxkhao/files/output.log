Video saved to outputs/video_0.mp4
  0%|                                                                                                                                        | 0/10000 [00:00<?, ?it/s]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26280])) that is different to the input size (torch.Size([26280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 1/10000 [00:00<1:11:28,  2.33it/s, total_loss=0.837, l1_loss=0.451, dssim_loss=0.408, depth_loss=0.908, psnr=6.04]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23780])) that is different to the input size (torch.Size([23780, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 2/10000 [00:00<1:00:49,  2.74it/s, total_loss=0.91, l1_loss=0.438, dssim_loss=0.356, depth_loss=1.27, psnr=6.55]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23082])) that is different to the input size (torch.Size([23082, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 3/10000 [00:01<58:17,  2.86it/s, total_loss=0.816, l1_loss=0.445, dssim_loss=0.361, depth_loss=0.931, psnr=6.37]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19405])) that is different to the input size (torch.Size([19405, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 4/10000 [00:01<55:47,  2.99it/s, total_loss=0.936, l1_loss=0.477, dssim_loss=0.436, depth_loss=1.12, psnr=5.86]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27010])) that is different to the input size (torch.Size([27010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 5/10000 [00:01<1:09:58,  2.38it/s, total_loss=0.957, l1_loss=0.524, dssim_loss=0.532, depth_loss=0.904, psnr=4.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22809])) that is different to the input size (torch.Size([22809, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 6/10000 [00:02<1:03:51,  2.61it/s, total_loss=0.77, l1_loss=0.34, dssim_loss=0.227, depth_loss=1.28, psnr=8.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27841])) that is different to the input size (torch.Size([27841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 8/10000 [00:03<1:04:09,  2.60it/s, total_loss=0.612, l1_loss=0.256, dssim_loss=0.152, depth_loss=1.1, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27707])) that is different to the input size (torch.Size([27707, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 9/10000 [00:03<1:01:06,  2.72it/s, total_loss=0.608, l1_loss=0.286, dssim_loss=0.186, depth_loss=0.952, psnr=9.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24384])) that is different to the input size (torch.Size([24384, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 10/10000 [00:03<59:29,  2.80it/s, total_loss=0.602, l1_loss=0.225, dssim_loss=0.131, depth_loss=1.19, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20829])) that is different to the input size (torch.Size([20829, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 11/10000 [00:04<56:52,  2.93it/s, total_loss=1.07, l1_loss=0.481, dssim_loss=0.445, depth_loss=1.56, psnr=5.88]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28930])) that is different to the input size (torch.Size([28930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 12/10000 [00:04<1:06:21,  2.51it/s, total_loss=1.1, l1_loss=0.56, dssim_loss=0.625, depth_loss=1.13, psnr=4.11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27747])) that is different to the input size (torch.Size([27747, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 13/10000 [00:04<1:03:11,  2.63it/s, total_loss=1.04, l1_loss=0.52, dssim_loss=0.552, depth_loss=1.16, psnr=4.83]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23841])) that is different to the input size (torch.Size([23841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                              | 14/10000 [00:05<1:00:45,  2.74it/s, total_loss=0.532, l1_loss=0.205, dssim_loss=0.113, depth_loss=1.04, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24198])) that is different to the input size (torch.Size([24198, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 15/10000 [00:05<58:36,  2.84it/s, total_loss=0.603, l1_loss=0.209, dssim_loss=0.121, depth_loss=1.25, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23064])) that is different to the input size (torch.Size([23064, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                  | 17/10000 [00:06<55:16,  3.01it/s, total_loss=0.6, l1_loss=0.201, dssim_loss=0.123, depth_loss=1.26, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28518])) that is different to the input size (torch.Size([28518, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                 | 18/10000 [00:06<55:10,  3.02it/s, total_loss=0.618, l1_loss=0.281, dssim_loss=0.152, depth_loss=1.06, psnr=8.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28425])) that is different to the input size (torch.Size([28425, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 20/10000 [00:07<54:27,  3.05it/s, total_loss=0.603, l1_loss=0.214, dssim_loss=0.122, depth_loss=1.23, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23141])) that is different to the input size (torch.Size([23141, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 21/10000 [00:07<53:56,  3.08it/s, total_loss=0.842, l1_loss=0.418, dssim_loss=0.347, depth_loss=1.11, psnr=6.89]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20289])) that is different to the input size (torch.Size([20289, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 22/10000 [00:07<53:09,  3.13it/s, total_loss=0.821, l1_loss=0.386, dssim_loss=0.312, depth_loss=1.19, psnr=7.61]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23953])) that is different to the input size (torch.Size([23953, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 23/10000 [00:08<53:02,  3.14it/s, total_loss=0.688, l1_loss=0.352, dssim_loss=0.262, depth_loss=0.918, psnr=8.07]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28846])) that is different to the input size (torch.Size([28846, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                               | 25/10000 [00:08<53:52,  3.09it/s, total_loss=0.558, l1_loss=0.247, dssim_loss=0.166, depth_loss=0.926, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21530])) that is different to the input size (torch.Size([21530, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|                                                | 26/10000 [00:09<52:45,  3.15it/s, total_loss=0.796, l1_loss=0.369, dssim_loss=0.261, depth_loss=1.24, psnr=8.04]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15961])) that is different to the input size (torch.Size([15961, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 27/10000 [00:09<52:24,  3.17it/s, total_loss=0.761, l1_loss=0.396, dssim_loss=0.306, depth_loss=0.97, psnr=7.25]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20891])) that is different to the input size (torch.Size([20891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 28/10000 [00:09<52:03,  3.19it/s, total_loss=0.817, l1_loss=0.365, dssim_loss=0.287, depth_loss=1.27, psnr=8.07]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25410])) that is different to the input size (torch.Size([25410, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 29/10000 [00:10<53:01,  3.13it/s, total_loss=0.489, l1_loss=0.193, dssim_loss=0.1, depth_loss=0.949, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24163])) that is different to the input size (torch.Size([24163, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 30/10000 [00:10<53:24,  3.11it/s, total_loss=0.461, l1_loss=0.193, dssim_loss=0.099, depth_loss=0.86, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28841])) that is different to the input size (torch.Size([28841, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                | 31/10000 [00:10<54:16,  3.06it/s, total_loss=0.766, l1_loss=0.361, dssim_loss=0.295, depth_loss=1.1, psnr=7.58]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21114])) that is different to the input size (torch.Size([21114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                 | 32/10000 [00:10<53:25,  3.11it/s, total_loss=0.8, l1_loss=0.342, dssim_loss=0.264, depth_loss=1.31, psnr=8.46]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27564])) that is different to the input size (torch.Size([27564, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                 | 33/10000 [00:11<53:45,  3.09it/s, total_loss=0.5, l1_loss=0.169, dssim_loss=0.101, depth_loss=1.05, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28704])) that is different to the input size (torch.Size([28704, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 34/10000 [00:11<54:15,  3.06it/s, total_loss=0.641, l1_loss=0.288, dssim_loss=0.222, depth_loss=0.999, psnr=8.53]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21173])) that is different to the input size (torch.Size([21173, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 35/10000 [00:11<53:03,  3.13it/s, total_loss=0.718, l1_loss=0.292, dssim_loss=0.179, depth_loss=1.32, psnr=9.74]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23560])) that is different to the input size (torch.Size([23560, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 36/10000 [00:12<52:54,  3.14it/s, total_loss=0.567, l1_loss=0.183, dssim_loss=0.115, depth_loss=1.21, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28072])) that is different to the input size (torch.Size([28072, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 37/10000 [00:12<53:46,  3.09it/s, total_loss=0.784, l1_loss=0.362, dssim_loss=0.303, depth_loss=1.14, psnr=7.48]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21148])) that is different to the input size (torch.Size([21148, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                 | 38/10000 [00:12<52:50,  3.14it/s, total_loss=0.641, l1_loss=0.23, dssim_loss=0.13, depth_loss=1.31, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28740])) that is different to the input size (torch.Size([28740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                  | 41/10000 [00:13<54:21,  3.05it/s, total_loss=0.627, l1_loss=0.279, dssim_loss=0.205, depth_loss=1, psnr=8.31]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28476])) that is different to the input size (torch.Size([28476, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 42/10000 [00:14<54:59,  3.02it/s, total_loss=0.685, l1_loss=0.297, dssim_loss=0.231, depth_loss=1.11, psnr=8.24]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22251])) that is different to the input size (torch.Size([22251, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                              | 43/10000 [00:14<54:37,  3.04it/s, total_loss=0.443, l1_loss=0.221, dssim_loss=0.121, depth_loss=0.685, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21024])) that is different to the input size (torch.Size([21024, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 44/10000 [00:14<53:16,  3.11it/s, total_loss=0.621, l1_loss=0.206, dssim_loss=0.128, depth_loss=1.31, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28092])) that is different to the input size (torch.Size([28092, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                                   | 45/10000 [00:15<53:57,  3.07it/s, total_loss=0.55, l1_loss=0.224, dssim_loss=0.141, depth_loss=1, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28025])) that is different to the input size (torch.Size([28025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 46/10000 [00:15<54:23,  3.05it/s, total_loss=0.705, l1_loss=0.308, dssim_loss=0.246, depth_loss=1.12, psnr=8.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28081])) that is different to the input size (torch.Size([28081, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 47/10000 [00:15<54:28,  3.05it/s, total_loss=0.482, l1_loss=0.158, dssim_loss=0.098, depth_loss=1.02, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28494])) that is different to the input size (torch.Size([28494, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▏                                               | 49/10000 [00:16<54:36,  3.04it/s, total_loss=0.471, l1_loss=0.152, dssim_loss=0.091, depth_loss=1.01, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24347])) that is different to the input size (torch.Size([24347, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  0%|▎                                                 | 50/10000 [00:16<54:44,  3.03it/s, total_loss=0.522, l1_loss=0.159, dssim_loss=0.1, depth_loss=1.15, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27982])) that is different to the input size (torch.Size([27982, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                              | 51/10000 [00:17<54:37,  3.04it/s, total_loss=0.532, l1_loss=0.224, dssim_loss=0.145, depth_loss=0.934, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23107])) that is different to the input size (torch.Size([23107, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 52/10000 [00:17<53:50,  3.08it/s, total_loss=0.558, l1_loss=0.178, dssim_loss=0.112, depth_loss=1.2, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28631])) that is different to the input size (torch.Size([28631, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▏                                              | 53/10000 [00:17<54:03,  3.07it/s, total_loss=0.486, l1_loss=0.166, dssim_loss=0.108, depth_loss=0.997, psnr=12.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25071])) that is different to the input size (torch.Size([25071, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 55/10000 [00:18<52:30,  3.16it/s, total_loss=0.76, l1_loss=0.261, dssim_loss=0.197, depth_loss=1.51, psnr=9.07]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25013])) that is different to the input size (torch.Size([25013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 56/10000 [00:18<52:32,  3.15it/s, total_loss=0.739, l1_loss=0.369, dssim_loss=0.326, depth_loss=0.936, psnr=7.16]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27596])) that is different to the input size (torch.Size([27596, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 57/10000 [00:19<53:05,  3.12it/s, total_loss=0.509, l1_loss=0.218, dssim_loss=0.151, depth_loss=0.863, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26305])) that is different to the input size (torch.Size([26305, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 59/10000 [00:19<52:58,  3.13it/s, total_loss=0.643, l1_loss=0.267, dssim_loss=0.207, depth_loss=1.09, psnr=9.23]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21236])) that is different to the input size (torch.Size([21236, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 60/10000 [00:20<52:38,  3.15it/s, total_loss=0.733, l1_loss=0.274, dssim_loss=0.209, depth_loss=1.36, psnr=8.67]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28205])) that is different to the input size (torch.Size([28205, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 63/10000 [00:21<54:09,  3.06it/s, total_loss=0.699, l1_loss=0.336, dssim_loss=0.266, depth_loss=0.988, psnr=7.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18481])) that is different to the input size (torch.Size([18481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 64/10000 [00:21<53:31,  3.09it/s, total_loss=0.69, l1_loss=0.317, dssim_loss=0.221, depth_loss=1.08, psnr=8.79]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20766])) that is different to the input size (torch.Size([20766, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 65/10000 [00:21<52:50,  3.13it/s, total_loss=0.737, l1_loss=0.258, dssim_loss=0.199, depth_loss=1.44, psnr=9.19]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26939])) that is different to the input size (torch.Size([26939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 67/10000 [00:22<54:16,  3.05it/s, total_loss=0.593, l1_loss=0.232, dssim_loss=0.183, depth_loss=1.05, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22348])) that is different to the input size (torch.Size([22348, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 68/10000 [00:22<54:07,  3.06it/s, total_loss=0.422, l1_loss=0.203, dssim_loss=0.11, depth_loss=0.682, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21318])) that is different to the input size (torch.Size([21318, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 69/10000 [00:22<53:14,  3.11it/s, total_loss=0.737, l1_loss=0.243, dssim_loss=0.197, depth_loss=1.48, psnr=9.51]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28597])) that is different to the input size (torch.Size([28597, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 70/10000 [00:23<54:10,  3.05it/s, total_loss=0.588, l1_loss=0.236, dssim_loss=0.182, depth_loss=1.03, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23965])) that is different to the input size (torch.Size([23965, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 72/10000 [00:23<54:18,  3.05it/s, total_loss=0.48, l1_loss=0.168, dssim_loss=0.113, depth_loss=0.965, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27979])) that is different to the input size (torch.Size([27979, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 73/10000 [00:24<54:20,  3.04it/s, total_loss=0.476, l1_loss=0.176, dssim_loss=0.119, depth_loss=0.918, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17938])) that is different to the input size (torch.Size([17938, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                                | 74/10000 [00:24<53:34,  3.09it/s, total_loss=0.623, l1_loss=0.27, dssim_loss=0.187, depth_loss=1.04, psnr=9.46]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21013])) that is different to the input size (torch.Size([21013, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                               | 75/10000 [00:24<52:36,  3.14it/s, total_loss=0.583, l1_loss=0.184, dssim_loss=0.112, depth_loss=1.27, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27129])) that is different to the input size (torch.Size([27129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▎                                              | 76/10000 [00:25<53:34,  3.09it/s, total_loss=0.498, l1_loss=0.225, dssim_loss=0.154, depth_loss=0.802, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27481])) that is different to the input size (torch.Size([27481, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 80/10000 [00:26<53:39,  3.08it/s, total_loss=0.584, l1_loss=0.252, dssim_loss=0.197, depth_loss=0.946, psnr=8.96]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21229])) that is different to the input size (torch.Size([21229, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                 | 82/10000 [00:27<53:39,  3.08it/s, total_loss=0.46, l1_loss=0.191, dssim_loss=0.14, depth_loss=0.79, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28254])) that is different to the input size (torch.Size([28254, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 84/10000 [00:27<53:57,  3.06it/s, total_loss=0.374, l1_loss=0.163, dssim_loss=0.09, depth_loss=0.661, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26669])) that is different to the input size (torch.Size([26669, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 85/10000 [00:28<54:06,  3.05it/s, total_loss=0.567, l1_loss=0.238, dssim_loss=0.186, depth_loss=0.948, psnr=9.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27615])) that is different to the input size (torch.Size([27615, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 86/10000 [00:28<54:30,  3.03it/s, total_loss=0.571, l1_loss=0.233, dssim_loss=0.186, depth_loss=0.972, psnr=9.84]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26859])) that is different to the input size (torch.Size([26859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 87/10000 [00:28<54:41,  3.02it/s, total_loss=0.453, l1_loss=0.155, dssim_loss=0.088, depth_loss=0.952, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28918])) that is different to the input size (torch.Size([28918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                               | 88/10000 [00:29<55:03,  3.00it/s, total_loss=0.565, l1_loss=0.24, dssim_loss=0.182, depth_loss=0.941, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22984])) that is different to the input size (torch.Size([22984, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                | 89/10000 [00:29<54:09,  3.05it/s, total_loss=0.621, l1_loss=0.252, dssim_loss=0.186, depth_loss=1.09, psnr=9.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26610])) that is different to the input size (torch.Size([26610, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 90/10000 [00:29<53:50,  3.07it/s, total_loss=0.451, l1_loss=0.197, dssim_loss=0.135, depth_loss=0.754, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22842])) that is different to the input size (torch.Size([22842, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 91/10000 [00:30<53:47,  3.07it/s, total_loss=0.365, l1_loss=0.142, dssim_loss=0.078, depth_loss=0.707, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21993])) that is different to the input size (torch.Size([21993, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                | 93/10000 [00:30<53:32,  3.08it/s, total_loss=0.35, l1_loss=0.144, dssim_loss=0.08, depth_loss=0.651, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20692])) that is different to the input size (torch.Size([20692, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                                 | 94/10000 [00:31<53:17,  3.10it/s, total_loss=0.63, l1_loss=0.259, dssim_loss=0.182, depth_loss=1.1, psnr=9.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28328])) that is different to the input size (torch.Size([28328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 98/10000 [00:32<53:51,  3.06it/s, total_loss=0.449, l1_loss=0.157, dssim_loss=0.115, depth_loss=0.886, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25044])) that is different to the input size (torch.Size([25044, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 100/10000 [00:33<53:01,  3.11it/s, total_loss=0.47, l1_loss=0.202, dssim_loss=0.138, depth_loss=0.799, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21354])) that is different to the input size (torch.Size([21354, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                              | 101/10000 [00:33<52:35,  3.14it/s, total_loss=0.682, l1_loss=0.232, dssim_loss=0.195, depth_loss=1.33, psnr=9.29]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28280])) that is different to the input size (torch.Size([28280, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 102/10000 [00:33<53:32,  3.08it/s, total_loss=0.445, l1_loss=0.147, dssim_loss=0.107, depth_loss=0.913, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22538])) that is different to the input size (torch.Size([22538, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 104/10000 [00:34<53:26,  3.09it/s, total_loss=0.426, l1_loss=0.155, dssim_loss=0.122, depth_loss=0.805, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27483])) that is different to the input size (torch.Size([27483, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 105/10000 [00:34<53:56,  3.06it/s, total_loss=0.537, l1_loss=0.218, dssim_loss=0.178, depth_loss=0.912, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27693])) that is different to the input size (torch.Size([27693, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 106/10000 [00:35<53:48,  3.06it/s, total_loss=0.447, l1_loss=0.187, dssim_loss=0.137, depth_loss=0.763, psnr=11.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21464])) that is different to the input size (torch.Size([21464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▍                                             | 108/10000 [00:35<52:44,  3.13it/s, total_loss=0.344, l1_loss=0.142, dssim_loss=0.091, depth_loss=0.617, psnr=12.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25025])) that is different to the input size (torch.Size([25025, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 110/10000 [00:36<53:30,  3.08it/s, total_loss=0.445, l1_loss=0.148, dssim_loss=0.104, depth_loss=0.915, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26891])) that is different to the input size (torch.Size([26891, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 112/10000 [00:36<54:10,  3.04it/s, total_loss=0.413, l1_loss=0.151, dssim_loss=0.118, depth_loss=0.776, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25049])) that is different to the input size (torch.Size([25049, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 115/10000 [00:37<54:18,  3.03it/s, total_loss=0.565, l1_loss=0.224, dssim_loss=0.178, depth_loss=0.988, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25948])) that is different to the input size (torch.Size([25948, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 117/10000 [00:38<54:09,  3.04it/s, total_loss=0.401, l1_loss=0.145, dssim_loss=0.115, depth_loss=0.758, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21394])) that is different to the input size (torch.Size([21394, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                               | 118/10000 [00:38<52:55,  3.11it/s, total_loss=0.569, l1_loss=0.19, dssim_loss=0.124, depth_loss=1.19, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27999])) that is different to the input size (torch.Size([27999, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 122/10000 [00:40<53:45,  3.06it/s, total_loss=0.428, l1_loss=0.133, dssim_loss=0.088, depth_loss=0.925, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18930])) that is different to the input size (torch.Size([18930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 123/10000 [00:40<53:13,  3.09it/s, total_loss=0.558, l1_loss=0.215, dssim_loss=0.152, depth_loss=1.04, psnr=9.96]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16637])) that is different to the input size (torch.Size([16637, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 124/10000 [00:40<52:43,  3.12it/s, total_loss=0.505, l1_loss=0.201, dssim_loss=0.138, depth_loss=0.918, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27939])) that is different to the input size (torch.Size([27939, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                                | 126/10000 [00:41<53:19,  3.09it/s, total_loss=0.4, l1_loss=0.157, dssim_loss=0.117, depth_loss=0.72, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19411])) that is different to the input size (torch.Size([19411, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 127/10000 [00:41<52:56,  3.11it/s, total_loss=0.552, l1_loss=0.204, dssim_loss=0.147, depth_loss=1.05, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23172])) that is different to the input size (torch.Size([23172, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 128/10000 [00:42<53:04,  3.10it/s, total_loss=0.378, l1_loss=0.155, dssim_loss=0.107, depth_loss=0.669, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27353])) that is different to the input size (torch.Size([27353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                              | 130/10000 [00:42<52:45,  3.12it/s, total_loss=0.567, l1_loss=0.229, dssim_loss=0.164, depth_loss=1.01, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26601])) that is different to the input size (torch.Size([26601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 133/10000 [00:43<53:41,  3.06it/s, total_loss=0.499, l1_loss=0.198, dssim_loss=0.166, depth_loss=0.857, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([16601])) that is different to the input size (torch.Size([16601, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▌                                             | 134/10000 [00:44<53:01,  3.10it/s, total_loss=0.503, l1_loss=0.201, dssim_loss=0.148, depth_loss=0.893, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19859])) that is different to the input size (torch.Size([19859, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 140/10000 [00:46<52:47,  3.11it/s, total_loss=0.646, l1_loss=0.226, dssim_loss=0.191, depth_loss=1.23, psnr=9.56]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20860])) that is different to the input size (torch.Size([20860, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 141/10000 [00:46<52:20,  3.14it/s, total_loss=0.666, l1_loss=0.227, dssim_loss=0.172, depth_loss=1.32, psnr=9.81]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20996])) that is different to the input size (torch.Size([20996, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 143/10000 [00:47<52:19,  3.14it/s, total_loss=0.405, l1_loss=0.128, dssim_loss=0.106, depth_loss=0.83, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21527])) that is different to the input size (torch.Size([21527, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                               | 144/10000 [00:47<51:51,  3.17it/s, total_loss=0.536, l1_loss=0.157, dssim_loss=0.101, depth_loss=1.2, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23496])) that is different to the input size (torch.Size([23496, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 146/10000 [00:47<51:42,  3.18it/s, total_loss=0.697, l1_loss=0.218, dssim_loss=0.182, depth_loss=1.44, psnr=10.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21215])) that is different to the input size (torch.Size([21215, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                             | 148/10000 [00:48<52:16,  3.14it/s, total_loss=0.317, l1_loss=0.125, dssim_loss=0.075, depth_loss=0.598, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24807])) that is different to the input size (torch.Size([24807, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  1%|▋                                              | 149/10000 [00:48<52:53,  3.10it/s, total_loss=0.37, l1_loss=0.116, dssim_loss=0.072, depth_loss=0.804, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27915])) that is different to the input size (torch.Size([27915, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                                | 157/10000 [00:51<52:00,  3.15it/s, total_loss=0.54, l1_loss=0.17, dssim_loss=0.116, depth_loss=1.15, psnr=11.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27151])) that is different to the input size (torch.Size([27151, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▋                                             | 159/10000 [00:52<53:14,  3.08it/s, total_loss=0.493, l1_loss=0.195, dssim_loss=0.166, depth_loss=0.845, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21299])) that is different to the input size (torch.Size([21299, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 162/10000 [00:53<52:17,  3.14it/s, total_loss=0.509, l1_loss=0.173, dssim_loss=0.132, depth_loss=1.02, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24977])) that is different to the input size (torch.Size([24977, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                                | 164/10000 [00:53<52:13,  3.14it/s, total_loss=0.505, l1_loss=0.17, dssim_loss=0.13, depth_loss=1.01, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21349])) that is different to the input size (torch.Size([21349, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 166/10000 [00:54<52:40,  3.11it/s, total_loss=0.372, l1_loss=0.145, dssim_loss=0.118, depth_loss=0.656, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21685])) that is different to the input size (torch.Size([21685, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 168/10000 [00:55<53:16,  3.08it/s, total_loss=0.41, l1_loss=0.131, dssim_loss=0.103, depth_loss=0.845, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25582])) that is different to the input size (torch.Size([25582, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 172/10000 [00:56<52:29,  3.12it/s, total_loss=0.552, l1_loss=0.196, dssim_loss=0.167, depth_loss=1.04, psnr=10.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28272])) that is different to the input size (torch.Size([28272, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                              | 177/10000 [00:57<52:04,  3.14it/s, total_loss=0.522, l1_loss=0.157, dssim_loss=0.111, depth_loss=1.14, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28237])) that is different to the input size (torch.Size([28237, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 183/10000 [00:59<53:29,  3.06it/s, total_loss=0.509, l1_loss=0.214, dssim_loss=0.168, depth_loss=0.847, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23485])) that is different to the input size (torch.Size([23485, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▊                                             | 184/10000 [01:00<53:13,  3.07it/s, total_loss=0.379, l1_loss=0.156, dssim_loss=0.107, depth_loss=0.671, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21317])) that is different to the input size (torch.Size([21317, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                                 | 188/10000 [01:01<52:27,  3.12it/s, total_loss=0.525, l1_loss=0.144, dssim_loss=0.1, depth_loss=1.2, psnr=12.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20785])) that is different to the input size (torch.Size([20785, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 192/10000 [01:02<52:46,  3.10it/s, total_loss=0.409, l1_loss=0.124, dssim_loss=0.085, depth_loss=0.893, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21428])) that is different to the input size (torch.Size([21428, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                                  | 193/10000 [01:03<52:21,  3.12it/s, total_loss=0.645, l1_loss=0.206, dssim_loss=0.18, depth_loss=1.3, psnr=10]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22782])) that is different to the input size (torch.Size([22782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 200/10000 [01:05<53:36,  3.05it/s, total_loss=0.467, l1_loss=0.181, dssim_loss=0.153, depth_loss=0.818, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23593])) that is different to the input size (torch.Size([23593, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                              | 202/10000 [01:06<52:13,  3.13it/s, total_loss=0.512, l1_loss=0.139, dssim_loss=0.095, depth_loss=1.18, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23740])) that is different to the input size (torch.Size([23740, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 204/10000 [01:06<53:07,  3.07it/s, total_loss=0.461, l1_loss=0.181, dssim_loss=0.162, depth_loss=0.783, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17252])) that is different to the input size (torch.Size([17252, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                              | 205/10000 [01:06<52:52,  3.09it/s, total_loss=0.46, l1_loss=0.172, dssim_loss=0.135, depth_loss=0.852, psnr=11.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20945])) that is different to the input size (torch.Size([20945, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 207/10000 [01:07<53:02,  3.08it/s, total_loss=0.494, l1_loss=0.202, dssim_loss=0.164, depth_loss=0.836, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23927])) that is different to the input size (torch.Size([23927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                               | 210/10000 [01:08<51:36,  3.16it/s, total_loss=0.642, l1_loss=0.19, dssim_loss=0.165, depth_loss=1.36, psnr=10.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28432])) that is different to the input size (torch.Size([28432, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                                | 213/10000 [01:09<52:33,  3.10it/s, total_loss=0.507, l1_loss=0.134, dssim_loss=0.094, depth_loss=1.18, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20966])) that is different to the input size (torch.Size([20966, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                              | 215/10000 [01:10<52:24,  3.11it/s, total_loss=0.41, l1_loss=0.151, dssim_loss=0.122, depth_loss=0.761, psnr=11.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25607])) that is different to the input size (torch.Size([25607, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 216/10000 [01:10<52:32,  3.10it/s, total_loss=0.465, l1_loss=0.204, dssim_loss=0.166, depth_loss=0.731, psnr=9.85]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28679])) that is different to the input size (torch.Size([28679, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|▉                                             | 217/10000 [01:10<53:08,  3.07it/s, total_loss=0.415, l1_loss=0.134, dssim_loss=0.099, depth_loss=0.859, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27328])) that is different to the input size (torch.Size([27328, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 218/10000 [01:11<53:31,  3.05it/s, total_loss=0.454, l1_loss=0.183, dssim_loss=0.161, depth_loss=0.758, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28743])) that is different to the input size (torch.Size([28743, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 221/10000 [01:12<53:23,  3.05it/s, total_loss=0.324, l1_loss=0.102, dssim_loss=0.063, depth_loss=0.704, psnr=15.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27836])) that is different to the input size (torch.Size([27836, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 222/10000 [01:12<53:22,  3.05it/s, total_loss=0.387, l1_loss=0.145, dssim_loss=0.114, depth_loss=0.713, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23797])) that is different to the input size (torch.Size([23797, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 228/10000 [01:14<53:14,  3.06it/s, total_loss=0.462, l1_loss=0.199, dssim_loss=0.158, depth_loss=0.746, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22613])) that is different to the input size (torch.Size([22613, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 232/10000 [01:15<53:10,  3.06it/s, total_loss=0.373, l1_loss=0.164, dssim_loss=0.114, depth_loss=0.618, psnr=13.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24393])) that is different to the input size (torch.Size([24393, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 233/10000 [01:16<53:04,  3.07it/s, total_loss=0.316, l1_loss=0.119, dssim_loss=0.086, depth_loss=0.593, psnr=13.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15368])) that is different to the input size (torch.Size([15368, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 234/10000 [01:16<52:27,  3.10it/s, total_loss=0.404, l1_loss=0.144, dssim_loss=0.105, depth_loss=0.787, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28063])) that is different to the input size (torch.Size([28063, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                              | 235/10000 [01:16<53:02,  3.07it/s, total_loss=0.397, l1_loss=0.134, dssim_loss=0.1, depth_loss=0.799, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24260])) that is different to the input size (torch.Size([24260, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                              | 239/10000 [01:18<53:28,  3.04it/s, total_loss=0.311, l1_loss=0.09, dssim_loss=0.06, depth_loss=0.695, psnr=15.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22114])) that is different to the input size (torch.Size([22114, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                             | 240/10000 [01:18<53:16,  3.05it/s, total_loss=0.286, l1_loss=0.104, dssim_loss=0.07, depth_loss=0.558, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22438])) that is different to the input size (torch.Size([22438, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 242/10000 [01:19<53:29,  3.04it/s, total_loss=0.341, l1_loss=0.097, dssim_loss=0.065, depth_loss=0.769, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25074])) that is different to the input size (torch.Size([25074, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█                                             | 243/10000 [01:19<52:45,  3.08it/s, total_loss=0.427, l1_loss=0.185, dssim_loss=0.146, depth_loss=0.688, psnr=11.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24002])) that is different to the input size (torch.Size([24002, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  2%|█▏                                            | 250/10000 [01:21<53:01,  3.06it/s, total_loss=0.311, l1_loss=0.116, dssim_loss=0.085, depth_loss=0.583, psnr=13.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27871])) that is different to the input size (torch.Size([27871, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                             | 260/10000 [01:24<51:46,  3.14it/s, total_loss=0.591, l1_loss=0.178, dssim_loss=0.154, depth_loss=1.24, psnr=10.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23353])) that is different to the input size (torch.Size([23353, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▏                                            | 268/10000 [01:27<51:10,  3.17it/s, total_loss=0.527, l1_loss=0.198, dssim_loss=0.158, depth_loss=0.965, psnr=10.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21100])) that is different to the input size (torch.Size([21100, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                             | 274/10000 [01:29<52:17,  3.10it/s, total_loss=0.602, l1_loss=0.204, dssim_loss=0.173, depth_loss=1.17, psnr=10.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18927])) that is different to the input size (torch.Size([18927, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                             | 281/10000 [01:31<52:12,  3.10it/s, total_loss=0.494, l1_loss=0.127, dssim_loss=0.091, depth_loss=1.16, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22010])) that is different to the input size (torch.Size([22010, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                              | 282/10000 [01:31<51:42,  3.13it/s, total_loss=0.483, l1_loss=0.126, dssim_loss=0.09, depth_loss=1.12, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27997])) that is different to the input size (torch.Size([27997, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                              | 284/10000 [01:32<51:41,  3.13it/s, total_loss=0.614, l1_loss=0.178, dssim_loss=0.159, depth_loss=1.3, psnr=10.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21399])) that is different to the input size (torch.Size([21399, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                             | 289/10000 [01:34<52:38,  3.07it/s, total_loss=0.314, l1_loss=0.102, dssim_loss=0.06, depth_loss=0.672, psnr=15.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25029])) that is different to the input size (torch.Size([25029, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                             | 291/10000 [01:34<51:40,  3.13it/s, total_loss=0.491, l1_loss=0.154, dssim_loss=0.107, depth_loss=1.05, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20930])) that is different to the input size (torch.Size([20930, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▎                                            | 295/10000 [01:36<51:36,  3.13it/s, total_loss=0.334, l1_loss=0.099, dssim_loss=0.064, depth_loss=0.742, psnr=15.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28026])) that is different to the input size (torch.Size([28026, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                             | 296/10000 [01:36<52:17,  3.09it/s, total_loss=0.363, l1_loss=0.138, dssim_loss=0.12, depth_loss=0.641, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25095])) that is different to the input size (torch.Size([25095, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                             | 303/10000 [01:38<50:50,  3.18it/s, total_loss=0.495, l1_loss=0.128, dssim_loss=0.094, depth_loss=1.15, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25986])) that is different to the input size (torch.Size([25986, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                              | 305/10000 [01:39<52:06,  3.10it/s, total_loss=0.327, l1_loss=0.121, dssim_loss=0.1, depth_loss=0.602, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25088])) that is different to the input size (torch.Size([25088, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                             | 307/10000 [01:39<51:24,  3.14it/s, total_loss=0.577, l1_loss=0.174, dssim_loss=0.152, depth_loss=1.21, psnr=10.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21960])) that is different to the input size (torch.Size([21960, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                              | 315/10000 [01:42<51:46,  3.12it/s, total_loss=0.387, l1_loss=0.132, dssim_loss=0.099, depth_loss=0.774, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22757])) that is different to the input size (torch.Size([22757, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▍                                            | 319/10000 [01:43<52:15,  3.09it/s, total_loss=0.357, l1_loss=0.136, dssim_loss=0.119, depth_loss=0.629, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17288])) that is different to the input size (torch.Size([17288, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 328/10000 [01:46<52:51,  3.05it/s, total_loss=0.429, l1_loss=0.173, dssim_loss=0.15, depth_loss=0.717, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28725])) that is different to the input size (torch.Size([28725, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                            | 331/10000 [01:47<52:40,  3.06it/s, total_loss=0.301, l1_loss=0.107, dssim_loss=0.087, depth_loss=0.573, psnr=14.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23778])) that is different to the input size (torch.Size([23778, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                            | 332/10000 [01:47<52:30,  3.07it/s, total_loss=0.328, l1_loss=0.114, dssim_loss=0.098, depth_loss=0.624, psnr=13.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26133])) that is different to the input size (torch.Size([26133, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                             | 338/10000 [01:49<52:25,  3.07it/s, total_loss=0.269, l1_loss=0.09, dssim_loss=0.061, depth_loss=0.557, psnr=15.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20855])) that is different to the input size (torch.Size([20855, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▌                                            | 345/10000 [01:52<51:56,  3.10it/s, total_loss=0.466, l1_loss=0.164, dssim_loss=0.139, depth_loss=0.885, psnr=11.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22464])) that is different to the input size (torch.Size([22464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  3%|█▋                                             | 348/10000 [01:53<51:25,  3.13it/s, total_loss=0.582, l1_loss=0.177, dssim_loss=0.165, depth_loss=1.19, psnr=11.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23902])) that is different to the input size (torch.Size([23902, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▌                                            | 353/10000 [01:54<52:24,  3.07it/s, total_loss=0.366, l1_loss=0.156, dssim_loss=0.122, depth_loss=0.597, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20609])) that is different to the input size (torch.Size([20609, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                               | 356/10000 [01:55<51:40,  3.11it/s, total_loss=0.579, l1_loss=0.171, dssim_loss=0.151, depth_loss=1.22, psnr=11]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25283])) that is different to the input size (torch.Size([25283, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                             | 357/10000 [01:56<51:48,  3.10it/s, total_loss=0.404, l1_loss=0.178, dssim_loss=0.146, depth_loss=0.63, psnr=11.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25931])) that is different to the input size (torch.Size([25931, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                             | 362/10000 [01:57<51:45,  3.10it/s, total_loss=0.266, l1_loss=0.095, dssim_loss=0.063, depth_loss=0.53, psnr=15.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21467])) that is different to the input size (torch.Size([21467, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                               | 365/10000 [01:58<51:56,  3.09it/s, total_loss=0.444, l1_loss=0.118, dssim_loss=0.082, depth_loss=1.03, psnr=14]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24336])) that is different to the input size (torch.Size([24336, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▋                                             | 370/10000 [02:00<52:33,  3.05it/s, total_loss=0.46, l1_loss=0.148, dssim_loss=0.114, depth_loss=0.947, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28439])) that is different to the input size (torch.Size([28439, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                              | 371/10000 [02:00<52:58,  3.03it/s, total_loss=0.394, l1_loss=0.137, dssim_loss=0.102, depth_loss=0.778, psnr=13]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28569])) that is different to the input size (torch.Size([28569, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                            | 384/10000 [02:04<51:49,  3.09it/s, total_loss=0.397, l1_loss=0.125, dssim_loss=0.099, depth_loss=0.824, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28157])) that is different to the input size (torch.Size([28157, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                             | 391/10000 [02:07<52:14,  3.07it/s, total_loss=0.36, l1_loss=0.134, dssim_loss=0.112, depth_loss=0.655, psnr=13.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22522])) that is different to the input size (torch.Size([22522, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▊                                            | 405/10000 [02:11<52:22,  3.05it/s, total_loss=0.381, l1_loss=0.152, dssim_loss=0.115, depth_loss=0.674, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([19870])) that is different to the input size (torch.Size([19870, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                            | 408/10000 [02:12<51:15,  3.12it/s, total_loss=0.409, l1_loss=0.133, dssim_loss=0.105, depth_loss=0.835, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23499])) that is different to the input size (torch.Size([23499, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|█▉                                            | 421/10000 [02:16<52:30,  3.04it/s, total_loss=0.362, l1_loss=0.159, dssim_loss=0.122, depth_loss=0.579, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([24171])) that is different to the input size (torch.Size([24171, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  4%|██                                            | 449/10000 [02:26<51:11,  3.11it/s, total_loss=0.415, l1_loss=0.109, dssim_loss=0.074, depth_loss=0.967, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27324])) that is different to the input size (torch.Size([27324, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                            | 451/10000 [02:26<51:39,  3.08it/s, total_loss=0.347, l1_loss=0.128, dssim_loss=0.105, depth_loss=0.639, psnr=13.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20782])) that is different to the input size (torch.Size([20782, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██                                            | 458/10000 [02:29<51:51,  3.07it/s, total_loss=0.398, l1_loss=0.161, dssim_loss=0.144, depth_loss=0.657, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([26461])) that is different to the input size (torch.Size([26461, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                           | 467/10000 [02:32<52:57,  3.00it/s, total_loss=0.256, l1_loss=0.091, dssim_loss=0.059, depth_loss=0.511, psnr=16.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25262])) that is different to the input size (torch.Size([25262, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                            | 468/10000 [02:32<52:37,  3.02it/s, total_loss=0.33, l1_loss=0.143, dssim_loss=0.112, depth_loss=0.531, psnr=13.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22443])) that is different to the input size (torch.Size([22443, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▏                                           | 475/10000 [02:34<52:17,  3.04it/s, total_loss=0.369, l1_loss=0.129, dssim_loss=0.093, depth_loss=0.732, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([17918])) that is different to the input size (torch.Size([17918, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▎                                           | 490/10000 [02:39<52:42,  3.01it/s, total_loss=0.396, l1_loss=0.161, dssim_loss=0.146, depth_loss=0.646, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([23345])) that is different to the input size (torch.Size([23345, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                            | 508/10000 [02:45<51:25,  3.08it/s, total_loss=0.43, l1_loss=0.115, dssim_loss=0.081, depth_loss=0.992, psnr=14.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15946])) that is different to the input size (torch.Size([15946, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                             | 509/10000 [02:45<50:53,  3.11it/s, total_loss=0.351, l1_loss=0.123, dssim_loss=0.1, depth_loss=0.677, psnr=13.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28594])) that is different to the input size (torch.Size([28594, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  5%|██▍                                           | 522/10000 [02:49<51:52,  3.04it/s, total_loss=0.358, l1_loss=0.126, dssim_loss=0.074, depth_loss=0.734, psnr=14.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22332])) that is different to the input size (torch.Size([22332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                            | 587/10000 [03:11<50:30,  3.11it/s, total_loss=0.414, l1_loss=0.145, dssim_loss=0.127, depth_loss=0.78, psnr=12.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22248])) that is different to the input size (torch.Size([22248, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                            | 591/10000 [03:12<51:09,  3.07it/s, total_loss=0.351, l1_loss=0.15, dssim_loss=0.146, depth_loss=0.526, psnr=12.3]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21555])) that is different to the input size (torch.Size([21555, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▊                                            | 605/10000 [03:17<51:14,  3.06it/s, total_loss=0.428, l1_loss=0.128, dssim_loss=0.08, depth_loss=0.954, psnr=14.5]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([27213])) that is different to the input size (torch.Size([27213, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  6%|██▉                                            | 630/10000 [03:25<51:23,  3.04it/s, total_loss=0.434, l1_loss=0.113, dssim_loss=0.079, depth_loss=1.01, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15373])) that is different to the input size (torch.Size([15373, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▏                                            | 667/10000 [03:37<50:03,  3.11it/s, total_loss=0.347, l1_loss=0.16, dssim_loss=0.131, depth_loss=0.51, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25587])) that is different to the input size (torch.Size([25587, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                           | 695/10000 [03:46<50:45,  3.05it/s, total_loss=0.308, l1_loss=0.127, dssim_loss=0.106, depth_loss=0.51, psnr=14.1]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22124])) that is different to the input size (torch.Size([22124, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  7%|███▎                                          | 729/10000 [03:57<51:45,  2.99it/s, total_loss=0.323, l1_loss=0.103, dssim_loss=0.073, depth_loss=0.679, psnr=14.9]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([20321])) that is different to the input size (torch.Size([20321, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▍                                          | 753/10000 [04:05<48:59,  3.15it/s, total_loss=0.437, l1_loss=0.127, dssim_loss=0.084, depth_loss=0.979, psnr=14.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([25069])) that is different to the input size (torch.Size([25069, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▌                                           | 762/10000 [04:08<50:46,  3.03it/s, total_loss=0.355, l1_loss=0.151, dssim_loss=0.138, depth_loss=0.55, psnr=12.7]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([18464])) that is different to the input size (torch.Size([18464, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
  8%|███▋                                          | 793/10000 [04:18<50:22,  3.05it/s, total_loss=0.369, l1_loss=0.168, dssim_loss=0.142, depth_loss=0.546, psnr=12.2]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([21116])) that is different to the input size (torch.Size([21116, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▍                                         | 959/10000 [05:12<48:33,  3.10it/s, total_loss=0.431, l1_loss=0.144, dssim_loss=0.095, depth_loss=0.895, psnr=13.4]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22729])) that is different to the input size (torch.Size([22729, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▋                                           | 972/10000 [05:16<48:58,  3.07it/s, total_loss=0.337, l1_loss=0.15, dssim_loss=0.139, depth_loss=0.49, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([15129])) that is different to the input size (torch.Size([15129, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▌                                         | 988/10000 [05:22<49:31,  3.03it/s, total_loss=0.369, l1_loss=0.184, dssim_loss=0.143, depth_loss=0.502, psnr=12.6]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([22297])) that is different to the input size (torch.Size([22297, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
 10%|████▎                                      | 1002/10000 [05:44<7:31:45,  3.01s/it, total_loss=0.347, l1_loss=0.161, dssim_loss=0.142, depth_loss=0.491, psnr=12.8]/home/ryan910702/hw1-nain9172/torch_3dgs/trainer.py:70: UserWarning: Using a target size (torch.Size([28332])) that is different to the input size (torch.Size([28332, 1])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
Video saved to outputs/video_1000.mp4
  depth_loss = torch.nn.functional.l1_loss(output["depth"][mask], depth[mask])
100%|████████████████████████████████████████████| 10000/10000 [58:38<00:00,  2.84it/s, total_loss=0.257, l1_loss=0.106, dssim_loss=0.092, depth_loss=0.418, psnr=14.7]
Video saved to outputs/video_2000.mp4
Video saved to outputs/video_3000.mp4
Video saved to outputs/video_4000.mp4
Video saved to outputs/video_5000.mp4
Video saved to outputs/video_6000.mp4
Video saved to outputs/video_7000.mp4
Video saved to outputs/video_8000.mp4
Video saved to outputs/video_9000.mp4
Video saved to outputs/video_10000.mp4
